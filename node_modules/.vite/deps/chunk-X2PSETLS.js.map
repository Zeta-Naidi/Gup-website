{
  "version": 3,
  "sources": ["../../src/.internal/core/render/Slice.ts"],
  "sourcesContent": ["import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { IPoint } from \"../util/IPoint\";\nimport { arc } from \"d3-shape\";\nimport * as $math from \"../util/Math\";\n\nexport interface ISliceSettings extends IGraphicsSettings {\n\n\t/**\n\t * Radius in pixels.\n\t */\n\tradius?: number;\n\n\t/**\n\t * Slice \"width\" in degrees.\n\t */\n\tarc?: number;\n\n\t/**\n\t * Inner radius of the slice in pixels.\n\t */\n\tinnerRadius?: number;\n\n\t/**\n\t * Start angle in degrees.\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * Slice corner radius in pixels.\n\t */\n\tcornerRadius?: number;\n\n\t/**\n\t * Slice \"pull out\" radius in pixels.\n\t */\n\tshiftRadius?: number;\n\n\t/**\n\t * Number of pixels to add to whatever slice's `radius` value is. Negative\n\t * numbers can also be used.\n\t */\n\tdRadius?: number;\n\n\t/**\n\t * Number of pixels to add to whatever slice's `innerRadius` value is.\n\t * Negative numbers can also be used.\n\t */\n\tdInnerRadius?: number;\n\n}\n\nexport interface ISlicePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a slice shape.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n */\nexport class Slice extends Graphics {\n\n\tdeclare public _settings: ISliceSettings;\n\tdeclare public _privateSettings: ISlicePrivate;\n\n\tpublic static className: string = \"Slice\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Slice.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic ix: number = 0;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic iy: number = 0;\n\n\tprotected _generator = arc();\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipX = this.get(\"tooltipX\");\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif ($type.isNumber(tooltipX)) {\n\t\t\tx = tooltipX;\n\t\t}\n\n\t\tif ($type.isNumber(tooltipY)) {\n\t\t\ty = tooltipY;\n\t\t}\n\n\t\tlet radius = this.get(\"radius\", 0);\n\t\tlet innerRadius = this.get(\"innerRadius\", 0);\n\n\t\tlet dRadius = this.get(\"dRadius\", 0);\n\t\tlet dInnerRadius = this.get(\"dInnerRadius\", 0);\n\n\t\tradius += dRadius;\n\t\tinnerRadius += dInnerRadius;\n\n\t\tif (innerRadius < 0) {\n\t\t\tinnerRadius = radius + innerRadius;\n\t\t}\n\n\t\tif (tooltipX instanceof Percent) {\n\t\t\tx = this.ix * (innerRadius + (radius - innerRadius) * tooltipX.value)\n\t\t}\n\n\t\tif (tooltipY instanceof Percent) {\n\t\t\ty = this.iy * (innerRadius + (radius - innerRadius) * tooltipY.value)\n\t\t}\n\n\t\tif (this.get(\"arc\") >= 360 && innerRadius == 0) {\n\t\t\tx = 0;\n\t\t\ty = 0;\n\t\t}\n\n\n\t\treturn { x, y };\n\t}\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"radius\") || this.isDirty(\"arc\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"dRadius\") || this.isDirty(\"dInnerRadius\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"shiftRadius\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tlet startAngle = this.get(\"startAngle\", 0);\n\t\t\tlet arc = this.get(\"arc\", 0);\n\t\t\tconst generator = this._generator;\n\n\t\t\tif(arc < 0){\n\t\t\t\tstartAngle = startAngle + arc;\n\t\t\t\tarc = arc * -1;\n\t\t\t}\n\n\t\t\tif(arc > 0.1){ // this fixes bug with full circle when arc is very small\n\t\t\t\tgenerator.cornerRadius(this.get(\"cornerRadius\", 0));\n\t\t\t}\n\t\t\tgenerator.context(this._display as any);\n\n\t\t\tlet radius = this.get(\"radius\", 0);\n\t\t\tlet innerRadius = this.get(\"innerRadius\", 0);\n\n\t\t\tlet dRadius = this.get(\"dRadius\", 0);\n\t\t\tlet dInnerRadius = this.get(\"dInnerRadius\", 0);\n\n\t\t\tradius += dRadius;\n\t\t\tinnerRadius += dInnerRadius;\t\t\t\n\n\t\t\tif (innerRadius < 0) {\n\t\t\t\tinnerRadius = radius + innerRadius;\n\t\t\t}\n\n\t\t\tgenerator({ innerRadius: innerRadius, outerRadius: radius, startAngle: (startAngle + 90) * $math.RADIANS, endAngle: (startAngle + arc + 90) * $math.RADIANS });\n\n\t\t\tlet middleAngle = startAngle + arc / 2;\n\n\t\t\tthis.ix = $math.cos(middleAngle);\n\t\t\tthis.iy = $math.sin(middleAngle);\n\n\t\t\tconst shiftRadius = this.get(\"shiftRadius\", 0);\n\t\t\tthis.setRaw(\"dx\", this.ix * shiftRadius);\n\t\t\tthis.setRaw(\"dy\", this.iy * shiftRadius);\t\t\t\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;AA6DM,IAAO,QAAP,cAAqB,SAAQ;EAAnC,cAAA;;AAWC,WAAA,eAAA,MAAA,MAAA;;;;aAAoB;;AAKpB,WAAA,eAAA,MAAA,MAAA;;;;aAAoB;;AAEpB,WAAA,eAAA,MAAA,cAAA;;;;aAAuB,YAAG;;EAkG3B;EAhGQ,mBAAgB;AACtB,QAAI,WAAW,KAAK,IAAI,UAAU;AAClC,QAAI,WAAW,KAAK,IAAI,UAAU;AAElC,QAAI,IAAI;AACR,QAAI,IAAI;AAER,QAAU,SAAS,QAAQ,GAAG;AAC7B,UAAI;;AAGL,QAAU,SAAS,QAAQ,GAAG;AAC7B,UAAI;;AAGL,QAAI,SAAS,KAAK,IAAI,UAAU,CAAC;AACjC,QAAI,cAAc,KAAK,IAAI,eAAe,CAAC;AAE3C,QAAI,UAAU,KAAK,IAAI,WAAW,CAAC;AACnC,QAAI,eAAe,KAAK,IAAI,gBAAgB,CAAC;AAE7C,cAAU;AACV,mBAAe;AAEf,QAAI,cAAc,GAAG;AACpB,oBAAc,SAAS;;AAGxB,QAAI,oBAAoB,SAAS;AAChC,UAAI,KAAK,MAAM,eAAe,SAAS,eAAe,SAAS;;AAGhE,QAAI,oBAAoB,SAAS;AAChC,UAAI,KAAK,MAAM,eAAe,SAAS,eAAe,SAAS;;AAGhE,QAAI,KAAK,IAAI,KAAK,KAAK,OAAO,eAAe,GAAG;AAC/C,UAAI;AACJ,UAAI;;AAIL,WAAO,EAAE,GAAG,EAAC;EACd;EACO,iBAAc;AACpB,UAAM,eAAc;AAEpB,QAAI,KAAK,QAAQ,QAAQ,KAAK,KAAK,QAAQ,KAAK,KAAK,KAAK,QAAQ,aAAa,KAAK,KAAK,QAAQ,YAAY,KAAK,KAAK,QAAQ,SAAS,KAAK,KAAK,QAAQ,cAAc,KAAK,KAAK,QAAQ,cAAc,KAAK,KAAK,QAAQ,aAAa,GAAG;AACzO,WAAK,SAAS;;EAEhB;EAEO,WAAQ;AACd,UAAM,SAAQ;AAEd,QAAI,KAAK,QAAQ;AAChB,UAAI,aAAa,KAAK,IAAI,cAAc,CAAC;AACzC,UAAI,MAAM,KAAK,IAAI,OAAO,CAAC;AAC3B,YAAM,YAAY,KAAK;AAEvB,UAAG,MAAM,GAAE;AACV,qBAAa,aAAa;AAC1B,cAAM,MAAM;;AAGb,UAAG,MAAM,KAAI;AACZ,kBAAU,aAAa,KAAK,IAAI,gBAAgB,CAAC,CAAC;;AAEnD,gBAAU,QAAQ,KAAK,QAAe;AAEtC,UAAI,SAAS,KAAK,IAAI,UAAU,CAAC;AACjC,UAAI,cAAc,KAAK,IAAI,eAAe,CAAC;AAE3C,UAAI,UAAU,KAAK,IAAI,WAAW,CAAC;AACnC,UAAI,eAAe,KAAK,IAAI,gBAAgB,CAAC;AAE7C,gBAAU;AACV,qBAAe;AAEf,UAAI,cAAc,GAAG;AACpB,sBAAc,SAAS;;AAGxB,gBAAU,EAAE,aAA0B,aAAa,QAAQ,aAAa,aAAa,MAAY,SAAS,WAAW,aAAa,MAAM,MAAY,QAAO,CAAE;AAE7J,UAAI,cAAc,aAAa,MAAM;AAErC,WAAK,KAAW,IAAI,WAAW;AAC/B,WAAK,KAAW,IAAI,WAAW;AAE/B,YAAM,cAAc,KAAK,IAAI,eAAe,CAAC;AAC7C,WAAK,OAAO,MAAM,KAAK,KAAK,WAAW;AACvC,WAAK,OAAO,MAAM,KAAK,KAAK,WAAW;AACvC,WAAK,kBAAiB;;EAExB;;AA9GA,OAAA,eAAA,OAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,OAAA,cAAA;;;;SAA0C,SAAS,WAAW,OAAO,CAAC,MAAM,SAAS,CAAC;;",
  "names": []
}
