{
  "version": 3,
  "sources": ["../../seedrandom/lib/alea.js", "../../seedrandom/lib/xor128.js", "../../seedrandom/lib/xorwow.js", "../../seedrandom/lib/xorshift7.js", "../../seedrandom/lib/xor4096.js", "../../seedrandom/lib/tychei.js", "browser-external:crypto", "../../seedrandom/seedrandom.js", "../../seedrandom/index.js", "../../src/.internal/charts/hierarchy/HierarchyDefaultTheme.ts", "../../src/.internal/charts/hierarchy/BreadcrumbBar.ts", "../../src/.internal/charts/hierarchy/HierarchyNode.ts", "../../d3-hierarchy/src/hierarchy/count.js", "../../d3-hierarchy/src/hierarchy/each.js", "../../d3-hierarchy/src/hierarchy/eachBefore.js", "../../d3-hierarchy/src/hierarchy/eachAfter.js", "../../d3-hierarchy/src/hierarchy/find.js", "../../d3-hierarchy/src/hierarchy/sum.js", "../../d3-hierarchy/src/hierarchy/sort.js", "../../d3-hierarchy/src/hierarchy/path.js", "../../d3-hierarchy/src/hierarchy/ancestors.js", "../../d3-hierarchy/src/hierarchy/descendants.js", "../../d3-hierarchy/src/hierarchy/leaves.js", "../../d3-hierarchy/src/hierarchy/links.js", "../../d3-hierarchy/src/hierarchy/iterator.js", "../../d3-hierarchy/src/hierarchy/index.js", "../../d3-hierarchy/src/accessors.js", "../../d3-hierarchy/src/constant.js", "../../d3-hierarchy/src/lcg.js", "../../d3-hierarchy/src/array.js", "../../d3-hierarchy/src/pack/enclose.js", "../../d3-hierarchy/src/pack/siblings.js", "../../d3-hierarchy/src/pack/index.js", "../../d3-hierarchy/src/treemap/round.js", "../../d3-hierarchy/src/treemap/dice.js", "../../d3-hierarchy/src/partition.js", "../../d3-hierarchy/src/tree.js", "../../d3-hierarchy/src/treemap/slice.js", "../../d3-hierarchy/src/treemap/squarify.js", "../../d3-hierarchy/src/treemap/index.js", "../../d3-hierarchy/src/treemap/binary.js", "../../d3-hierarchy/src/treemap/sliceDice.js", "../../d3-hierarchy/src/treemap/resquarify.js", "../../src/.internal/charts/hierarchy/Hierarchy.ts", "../../src/.internal/charts/hierarchy/LinkedHierarchyNode.ts", "../../src/.internal/charts/hierarchy/HierarchyLink.ts", "../../src/.internal/charts/hierarchy/LinkedHierarchy.ts", "../../d3-quadtree/src/add.js", "../../d3-quadtree/src/cover.js", "../../d3-quadtree/src/data.js", "../../d3-quadtree/src/extent.js", "../../d3-quadtree/src/quad.js", "../../d3-quadtree/src/find.js", "../../d3-quadtree/src/remove.js", "../../d3-quadtree/src/root.js", "../../d3-quadtree/src/size.js", "../../d3-quadtree/src/visit.js", "../../d3-quadtree/src/visitAfter.js", "../../d3-quadtree/src/x.js", "../../d3-quadtree/src/y.js", "../../d3-quadtree/src/quadtree.js", "../../d3-force/src/constant.js", "../../d3-force/src/jiggle.js", "../../d3-force/src/collide.js", "../../d3-force/src/link.js", "../../d3-dispatch/src/dispatch.js", "../../d3-timer/src/timer.js", "../../d3-force/src/lcg.js", "../../d3-force/src/simulation.js", "../../d3-force/src/manyBody.js", "../../d3-force/src/x.js", "../../d3-force/src/y.js", "../../src/.internal/charts/hierarchy/ForceDirected.ts", "../../src/.internal/charts/hierarchy/Pack.ts", "../../src/.internal/charts/hierarchy/Partition.ts", "../../src/.internal/charts/hierarchy/Sunburst.ts", "../../src/.internal/charts/hierarchy/Tree.ts", "../../src/.internal/charts/hierarchy/Treemap.ts", "../../d3-voronoi-map/node_modules/d3-polygon/src/area.js", "../../d3-voronoi-map/node_modules/d3-polygon/src/centroid.js", "../../d3-voronoi-map/node_modules/d3-polygon/src/contains.js", "../../d3-voronoi-map/node_modules/d3-timer/src/timer.js", "../../d3-voronoi-map/node_modules/d3-dispatch/src/dispatch.js", "../../d3-weighted-voronoi/node_modules/d3-array/src/ascending.js", "../../d3-weighted-voronoi/node_modules/d3-array/src/bisector.js", "../../d3-weighted-voronoi/node_modules/d3-array/src/number.js", "../../d3-weighted-voronoi/node_modules/d3-array/src/bisect.js", "../../d3-weighted-voronoi/node_modules/d3-array/src/extent.js", "../../d3-weighted-voronoi/node_modules/d3-array/src/array.js", "../../d3-weighted-voronoi/node_modules/d3-array/src/ticks.js", "../../d3-weighted-voronoi/node_modules/d3-array/src/shuffle.js", "../../d3-weighted-voronoi/node_modules/d3-polygon/src/cross.js", "../../d3-weighted-voronoi/node_modules/d3-polygon/src/hull.js", "../../d3-weighted-voronoi/node_modules/d3-polygon/src/length.js", "../../d3-weighted-voronoi/src/utils.js", "../../d3-weighted-voronoi/src/conflictList.js", "../../d3-weighted-voronoi/src/vertex.js", "../../d3-weighted-voronoi/src/plane3D.js", "../../d3-weighted-voronoi/src/vector.js", "../../d3-weighted-voronoi/src/hEdge.js", "../../d3-weighted-voronoi/src/d3-weighted-voronoi-error.js", "../../d3-weighted-voronoi/src/face.js", "../../d3-weighted-voronoi/src/convexHull.js", "../../d3-weighted-voronoi/src/d3-polygon-clip.js", "../../d3-weighted-voronoi/src/powerDiagram.js", "../../d3-weighted-voronoi/src/d3-weighted-voronoi.js", "../../d3-voronoi-map/src/flickering-mitigation.js", "../../d3-voronoi-map/src/initial-position-policies/random.js", "../../d3-voronoi-map/src/initial-weight-policies/half-average-area.js", "../../d3-voronoi-map/src/d3-voronoi-map-error.js", "../../d3-voronoi-map/src/d3-voronoi-map.js", "../../d3-voronoi-treemap/src/d3-voronoi-treemap.js", "../../src/.internal/charts/hierarchy/VoronoiTreemap.ts"],
  "sourcesContent": ["// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n", "// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n", "// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n", "// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n", "import { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class HierarchyDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst gridLayout = this._root.gridLayout;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/hierarchy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Hierarchy\").setAll({\r\n\t\t\tlegendLabelText: \"{category}\",\r\n\t\t\tlegendValueText: \"{sum.formatNumber('#.#')}\",\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tcolors: ColorSet.new(this._root, { step: 2 }),\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\tsingleBranchOnly: true,\r\n\t\t\tmaskContent: true,\r\n\t\t\tanimationEasing: $ease.out($ease.cubic)\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\").setAll({\r\n\t\t\ttoggleKey: \"disabled\",\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\ttooltipText: \"{category}: {sum}\"\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"last\"]).setAll({\r\n\t\t\tcursorOverStyle: \"default\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"hierarchy\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.3\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"HierarchyLink\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrength: 0.9,\r\n\t\t\t\tdistance: 1.1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tfillOpacity: 1,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tradius: 15,\r\n\t\t\ttooltipY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\topacity: 1,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tstrokeDasharray: 0,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tradius: 15,\r\n\t\t\tscale: 1.1,\r\n\t\t\tinteractive: false\r\n\t\t})\r\n\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"disabled\", { opacity: 1, scale: 1.1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hoverDisabled\", { scale: 1.2, opacity: 1, strokeDasharray: 2 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hover\", { scale: 1.05, strokeDasharray: 0 });\r\n\t\tr(\"Circle\", [\"linkedhierarchy\", \"shape\", \"outer\"]).states.create(\"hidden\", { opacity: 0, strokeDasharray: 0 });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: BreadcrumbBar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"BreadcrumbBar\").setAll({\r\n\t\t\tpaddingLeft: 8,\r\n\t\t\tlayout: gridLayout\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpaddingRight: 4,\r\n\t\t\t\tpaddingLeft: 4,\r\n\t\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}:\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"hover\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"breadcrumb\", \"last\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\tcursorOverStyle: \"default\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"breadcrumb\", \"label\", \"background\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Partition\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Partition\").setAll({\r\n\t\t\tdownDepth: 1,\r\n\t\t\tupDepth: 0,\r\n\t\t\tinitialDepth: 5\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"partition\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 1,\r\n\t\t\tvisible: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"partition\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\trotation: 90,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"Label\", [\"horizontal\", \"partition\", \"node\"]).setAll({\r\n\t\t\trotation: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"RoundedRectangle\", [\"partition\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Sunburst\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sunburst\").setAll({\r\n\t\t\tsingleBranchOnly: true\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).setAll({\r\n\t\t\tsetStateOnChildren: false\r\n\t\t});\r\n\r\n\t\tr(\"HierarchyNode\", [\"sunburst\"]).states.create(\"hidden\", {\r\n\t\t\topacity: 0,\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Slice\", [\"sunburst\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadius: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Slice\", [\"sunburst\", \"node\", \"shape\", \"last\"]).setAll({\r\n\t\t\tfillOpacity: 0.75\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RadialLabel\", [\"sunburst\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0,\r\n\t\t\t\ttextType: \"radial\",\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4,\r\n\t\t\t\tbaseRadius: p50,\r\n\t\t\t\trotation: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: ForceDirected\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"ForceDirected\").setAll({\r\n\t\t\tminRadius: percent(1),\r\n\t\t\tmaxRadius: percent(8),\r\n\t\t\tinitialFrames: 500,\r\n\t\t\tcenterStrength: 0.8,\r\n\t\t\tmanyBodyStrength: -14,\r\n\t\t\tvelocityDecay: 0.5,\r\n\t\t\tlinkWithStrength: 0.5,\r\n\t\t\tshowOnFrame: 10,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Tree\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Tree\").setAll({\r\n\t\t\torientation: \"vertical\",\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tsingleBranchOnly: false,\r\n\t\t\tupDepth: Infinity,\r\n\t\t\tdownDepth: 1,\r\n\t\t\tinitialDepth: 5,\r\n\t\t\ttopDepth: 0\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Pack\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Pack\").setAll({\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingTop: 20,\r\n\t\t\tpaddingBottom: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tnodePadding: 0\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"pack\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Circle\", [\"pack\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tfillOpacity: 0.8,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"LinkedHierarchyNode\").setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"LinkedHierarchyNode\").states.create(\"hidden\", { scale: 0, opacity: 0, visible: false });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Treemap\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Treemap\").setAll({\r\n\t\t\tupDepth: 0,\r\n\t\t\tlayoutAlgorithm: \"squarify\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"treemap\", \"node\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tx: p50,\r\n\t\t\t\ty: p50,\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t\tr(\"HierarchyNode\", [\"treemap\", \"node\"]).setAll({\r\n\t\t\ttooltipY: percent(40),\r\n\t\t\tisMeasured: false,\r\n\t\t\tposition: \"absolute\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"treemap\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tcornerRadiusBR: 0,\r\n\t\t\t\tcornerRadiusTR: 0,\r\n\t\t\t\tcornerRadiusBL: 0,\r\n\t\t\t\tcornerRadiusTL: 0,\r\n\t\t\t\tfillOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/hierarchy: Voronoi Treemap\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\t{\r\n\t\t\tr(\"VoronoiTreemap\").setAll({\r\n\t\t\t\ttype: \"polygon\",\r\n\t\t\t\tminWeightRatio: 0.005,\r\n\t\t\t\tconvergenceRatio: 0.005,\r\n\t\t\t\tmaxIterationCount: 100,\r\n\t\t\t\tsingleBranchOnly: true\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"voronoitreemap\", \"node\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\tfillOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tr(\"Polygon\", [\"hierarchy\", \"node\", \"shape\", \"depth1\"]).setAll({\r\n\t\t\t\tstrokeWidth: 3\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Label\", [\"voronoitreemap\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcenterY: p50,\r\n\t\t\t\tcenterX: p50,\r\n\t\t\t\tpaddingBottom: 1,\r\n\t\t\t\tpaddingTop: 1,\r\n\t\t\t\tpaddingLeft: 1,\r\n\t\t\t\tpaddingRight: 1,\r\n\t\t\t\tpopulateText: true,\r\n\t\t\t\ttext: \"{category}\",\r\n\t\t\t\toversizedBehavior: \"fit\",\r\n\t\t\t\tminScale: 0.4,\r\n\t\t\t\tlayer: 30\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\r\n\t\t}\r\n\r\n\t}\r\n}\r\n", "import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IBreadcrumbBarSettings extends IContainerSettings {\n\n\t/**\n\t * A hierarchy series bar will use to build current selection path.\n\t */\n\tseries: Hierarchy;\n\n}\n\nexport interface IBreadcrumbBarPrivate extends IContainerPrivate {\n}\n\nexport interface IBreadcrumbBarEvents extends IContainerEvents {\n}\n\n/**\n * Creates a breadcrumb navigation control.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/breadcrumbs/} for more info\n * @important\n */\nexport class BreadcrumbBar extends Container {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IHierarchyDataItem>): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tlabel.states.create(\"hover\", {});\n\t\tlabel.states.create(\"down\", {});\n\t\tlabel.events.on(\"click\", () => {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tif (series) {\n\t\t\t\tseries.selectDataItem(dataItem);\n\t\t\t}\n\t\t});\n\n\t\tthis.labels.push(label);\n\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the bar.\n\t *\n\t * `labels.template` can be used to configure label apperance and behavior.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"label\"]),\n\t\t\tbackground: RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: [\"background\"]\n\t\t\t})\n\t\t}, [this.labels.template])\n\t);\n\n\tpublic static className: string = \"BreadcrumbBar\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([BreadcrumbBar.className]);\n\n\tdeclare public _settings: IBreadcrumbBarSettings;\n\tdeclare public _privateSettings: IBreadcrumbBarPrivate;\n\tdeclare public _events: IBreadcrumbBarEvents;\n\n\tprotected _disposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"breadcrumb\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"series\")) {\n\t\t\tconst series = this.get(\"series\");\n\t\t\tconst previous = this._prevSettings.series;\n\t\t\tif (series != previous) {\n\t\t\t\tthis._disposer = series.events.on(\"dataitemselected\", (event) => {\n\t\t\t\t\tthis._handleDataItem(event.dataItem)\n\t\t\t\t})\n\t\t\t}\n\t\t\telse if (previous) {\n\t\t\t\tif (this._disposer) {\n\t\t\t\t\tthis._disposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._handleDataItem(series.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _handleDataItem(dataItem: DataItem<IHierarchyDataItem> | undefined) {\n\t\tthis.set(\"minHeight\", this.height());\n\t\tthis.children.clear();\n\t\tthis.labels.clear();\n\n\t\tif (dataItem) {\n\t\t\tlet parent = dataItem;\n\n\t\t\twhile (parent) {\n\t\t\t\tlet label = this.makeLabel(parent);\n\t\t\t\tif (parent == dataItem) {\n\t\t\t\t\tlabel.addTag(\"last\");\n\t\t\t\t}\n\t\t\t\tthis.children.moveValue(label, 0);\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { Hierarchy, IHierarchyDataItem } from \"./Hierarchy\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IHierarchyNodeSettings extends IContainerSettings {\n}\n\nexport interface IHierarchyNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for hierarchy nodes.\n */\nexport class HierarchyNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: Hierarchy | undefined;\n\n\tdeclare public _settings: IHierarchyNodeSettings;\n\tdeclare public _privateSettings: IHierarchyNodePrivate;\n\n\tpublic static className: string = \"HierarchyNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IHierarchyDataItem> | undefined;\n\n\tprotected _clickDisposer: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\n\t\tthis.on(\"disabled\", () => {\n\t\t\tconst dataItem = this.dataItem as DataItem<IHierarchyDataItem>;\n\t\t\tif (!dataItem.get(\"children\")) {\n\t\t\t\tthis.set(\"disabled\", true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst disabled = this.get(\"disabled\");\n\t\t\tconst series = this.series;\n\n\t\t\tif (dataItem && series) {\n\t\t\t\tif (dataItem.get(\"disabled\") != disabled) {\n\t\t\t\t\tif (disabled) {\n\t\t\t\t\t\tseries.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.enableDataItem(dataItem, series.get(\"downDepth\", 1), 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tconst toggleKey = this.get(\"toggleKey\");\n\n\t\t\tif (toggleKey == \"disabled\") {\n\t\t\t\tthis._clickDisposer = this.events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tlet series = this.series;\n\t\t\t\t\t\tif (series) {\n\t\t\t\t\t\t\tseries.selectDataItem(this.dataItem as DataItem<IHierarchyDataItem>);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._clickDisposer) {\n\t\t\t\t\tthis._clickDisposer.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n", "function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n", "export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n", "export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n", "export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n", "export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n", "export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n", "export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n", "export default function() {\n  return Array.from(this);\n}\n", "export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n", "export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n", "export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n", "import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n", "export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n", "export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n", "export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n", "import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n", "import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n", "import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n", "export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n", "import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n", "import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n", "import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n", "import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n", "export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n", "import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n", "import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport {phi, squarifyRatio} from \"./squarify.js\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n", "import type { Color } from \"../../core/util/Color\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Root } from \"../../core/Root\";\nimport type { Easing } from \"../../core/util/Ease\";\n\nimport { HierarchyDefaultTheme } from \"./HierarchyDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { DataItem } from \"../../core/render/Component\";\nimport { HierarchyNode } from \"./HierarchyNode\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IHierarchyDataObject[],\n\tdataItem?: DataItem<IHierarchyDataItem>\n\tcustomValue?: boolean;\n};\n\nexport interface IHierarchyDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Value of the node as set in data.\n\t */\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\t/**\n\t * Percent value of the node, based on total sum of all nodes in upper level.\n\t */\n\tvaluePercentTotal: number;\n\n\t/**\n\t * Percent value of the node, based on the value of its direct parent.\n\t *\n\t * @since 5.2.21\n\t */\n\tvaluePercent: number;\n\n\t/**\n\t * Sum of child values.\n\t */\n\tsum: number;\n\n\t/**\n\t * Category.\n\t */\n\tcategory: string;\n\n\t/**\n\t * List of child node data items.\n\t */\n\tchildren: Array<DataItem<IHierarchyDataItem>>;\n\n\t/**\n\t * Raw data of the node's children.\n\t */\n\tchildData: Array<any>\n\n\t/**\n\t * Data item of parent node.\n\t */\n\tparent: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Node's depth within the hierarchy.\n\t */\n\tdepth: number;\n\n\t/**\n\t * A reference to the related [[HierarchyNode]].\n\t */\n\tnode: HierarchyNode;\n\n\t/**\n\t * A reference to node's [[Label]].\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Node's auto-assigned color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * Indicates if node is currently disabled.\n\t */\n\tdisabled: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>;\n\n}\n\nexport interface IHierarchySettings extends ISeriesSettings {\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"none\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n\n\t/**\n\t * A field in data that holds numeric value for the node.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A field in data that holds string-based identificator for node.\n\t */\n\tcategoryField?: string;\n\n\t/**\n\t * A field in data that holds an array of child node data.\n\t */\n\tchildDataField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills for various elements, such\n\t * as nodes.\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for nodes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Node_colors} for more info\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * Number of child levels to open when clicking on a node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tdownDepth?: number;\n\n\t/**\n\t * Number of levels parent levels to show from currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Drill_down} for more info\n\t */\n\tupDepth?: number;\n\n\t/**\n\t * Number of levels to show on chart's first load.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\tinitialDepth?: number;\n\n\t/**\n\t * If set, will show nodes starting from set level.\n\t *\n\t * It could be used to eliminate top level branches, that do not need to be\n\t * shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Tree_depth} for more info\n\t */\n\ttopDepth?: number;\n\n\t/**\n\t * If set to `true` will make all other branches collapse when some branch is\n\t * expanded.\n\t */\n\tsingleBranchOnly?: boolean;\n\n\t/**\n\t * A data item for currently selected node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/#Pre_selected_branch} for more info\n\t */\n\tselectedDataItem?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Duration for all drill animations in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for drill animations.\n\t */\n\tanimationEasing?: Easing;\n\n}\n\nexport interface IHierarchyPrivate extends ISeriesPrivate {\n\n\t/**\n\t * Level count in series.\n\t */\n\tmaxDepth: number;\n\n}\n\nexport interface IHierarchyEvents extends ISeriesEvents {\n\tdataitemselected: {\n\t\tdataItem?: DataItem<IHierarchyDataItem>\n\t};\n}\n\n/**\n * A base class for all hierarchy charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/} for more info\n */\nexport abstract class Hierarchy extends Series {\n\tpublic static className: string = \"Hierarchy\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Hierarchy.className]);\n\n\tdeclare public _settings: IHierarchySettings;\n\tdeclare public _privateSettings: IHierarchyPrivate;\n\tdeclare public _dataItemSettings: IHierarchyDataItem;\n\tdeclare public _events: IHierarchyEvents;\n\n\t/**\n\t * A [[Container]] that nodes are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly nodesContainer = this.children.push(Container.new(this._root, { isMeasured: false }));\n\n\tpublic _rootNode: d3hierarchy.HierarchyNode<IHierarchyDataObject> | undefined;\n\n\tpublic _treeData: IHierarchyDataObject | undefined;\n\n\tprotected _index: number = 0;\n\n\tprotected _tag: string = \"hierarchy\";\n\n\t/**\n\t * A list of nodes in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<HierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyNode.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\"])\n\t\t}, this.nodes.template)\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\n\t\tconst childData = dataItem.get(\"childData\");\n\n\t\tconst node = this.nodes.make();\n\t\tnode.series = this;\n\t\tnode._setDataItem(dataItem);\n\t\tthis.nodes.push(node);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst label = this.labels.make();\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\n\t\tif (!childData || childData.length == 0) {\n\t\t\tnode.addTag(\"last\");\n\t\t}\n\n\t\tconst depth = dataItem.get(\"depth\");\n\t\tnode.addTag(\"depth\" + depth);\n\n\t\tthis.nodesContainer.children.push(node);\n\t\tnode.children.push(label);\n\n\t\treturn node;\n\t}\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label.new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, this.labels.template)\n\t);\n\n\tpublic _currentDownDepth: number | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(HierarchyDefaultTheme.new(this._root));\n\t\tthis.fields.push(\"category\", \"childData\", \"disabled\", \"fill\");\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._treeData = {};\n\n\t\t\tconst first = this.dataItems[0];\n\t\t\tif (first) {\n\t\t\t\tthis._makeHierarchyData(this._treeData, first);\n\t\t\t\tthis._index = 0;\n\t\t\t\tthis._rootNode = (d3hierarchy.hierarchy(this._treeData) as any);\n\t\t\t\tif (this._rootNode) {\n\t\t\t\t\tthis._rootNode.sum((d) => {\n\t\t\t\t\t\treturn d.value as any;\n\t\t\t\t\t});\n\t\t\t\t\tconst sort = this.get(\"sort\")\n\t\t\t\t\tif (sort == \"descending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (b.value as any) - (a.value as any));\n\t\t\t\t\t}\n\t\t\t\t\telse if (sort == \"ascending\") {\n\t\t\t\t\t\tthis._rootNode.sort((a, b) => (a.value as any) - (b.value as any));\n\t\t\t\t\t}\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", -Infinity);\n\t\t\t\t\tthis.setPrivateRaw(\"maxDepth\", 0);\n\t\t\t\t\tthis._updateValues(this._rootNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tconst dataItem = this.get(\"selectedDataItem\");\n\t\t\tif (dataItem) {\n\t\t\t\tthis._zoom(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"selectedDataItem\")) {\n\t\t\tthis._selectDataItem(this.get(\"selectedDataItem\"));\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNodes(hierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\n\t\tif (dataItem) {\n\t\t\tthis._updateNode(dataItem);\n\n\t\t\tif (this.bullets.length > 0 && !dataItem.bullets) {\n\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateNode(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * Looks up and returns a data item by its ID.\n\t *\n\t * @param   id  ID\n\t * @return      Data item\n\t */\n\tpublic getDataItemById(id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\t\treturn this._getDataItemById(this.dataItems, id);\n\t}\n\n\tpublic _getDataItemById(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>, id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\n\t\tlet di: DataItem<this[\"_dataItemSettings\"]> | undefined;\n\n\t\t$array.each(dataItems, (dataItem: any) => {\n\n\t\t\tif (dataItem.get(\"id\") == id) {\n\t\t\t\tdi = dataItem;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tlet childDataItem = this._getDataItemById(children, id);\n\t\t\t\tif (childDataItem) {\n\t\t\t\t\tdi = childDataItem\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn di;\n\t}\n\n\tprotected _handleBullets(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children) {\n\t\t\t\tthis._handleBullets(children);\n\t\t\t}\n\t\t})\n\n\t\tthis._updateVisuals();\n\t}\n\n\tprotected _onDataClear() {\n\t\tsuper._onDataClear();\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst childData = dataItem.get(\"childData\");\n\t\tconst colors = this.get(\"colors\");\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tif (!dataItem.get(\"parent\")) {\n\t\t\tdataItem.setRaw(\"depth\", 0);\n\t\t\tif (colors && topDepth == 0 && dataItem.get(\"fill\") == null) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tlet depth = dataItem.get(\"depth\");\n\t\tconst initialDepth = this.get(\"initialDepth\", 1);\n\n\t\tthis.makeNode(dataItem);\n\t\tthis._processDataItem(dataItem);\n\n\t\tif (childData) {\n\t\t\tconst children: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\t\t\tdataItem.setRaw(\"children\", children);\n\n\t\t\t$array.each(childData, (child) => {\n\t\t\t\tconst childDataItem = new DataItem(this, child, this._makeDataItem(child));\n\n\t\t\t\tchildren.push(childDataItem);\n\n\t\t\t\tchildDataItem.setRaw(\"parent\", dataItem);\n\t\t\t\tchildDataItem.setRaw(\"depth\", depth + 1);\n\n\t\t\t\tif (this.dataItems.length == 1 && depth == 0) {\n\t\t\t\t\tif (colors && childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", colors.next());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (childDataItem.get(\"fill\") == null) {\n\t\t\t\t\t\tchildDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.processDataItem(childDataItem);\n\t\t\t})\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (!children || children.length == 0) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tnode.setAll({ toggleKey: undefined });\n\t\t}\n\n\t\tif (dataItem.get(\"disabled\") == null) {\n\t\t\tif (depth >= topDepth + initialDepth) {\n\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adds children data to the target data item.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/hierarchy-api/#Dynamically_adding_child_nodes} for more info\n\t * @since 5.4.5\n\t */\n\tpublic addChildData(dataItem: DataItem<this[\"_dataItemSettings\"]>, data: Array<any>) {\n\t\tconst dataContext = dataItem.dataContext as any;\n\t\tconst childDataField = this.get(\"childDataField\");\n\n\t\tlet childData = dataContext[childDataField] as any;\n\t\tif (!childData) {\n\t\t\tchildData = data;\n\t\t\tdataContext[childDataField] = childData;\n\t\t}\n\t\telse {\n\t\t\tchildData.push(...data);\n\t\t}\n\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (!children) {\n\t\t\tchildren = [];\n\t\t\tdataItem.set(\"children\", children);\n\t\t}\n\n\t\tlet depth = dataItem.get(\"depth\");\n\n\t\t$array.each(childData, (child) => {\n\t\t\tconst childDataItem = new DataItem(this, child, this._makeDataItem(child));\n\n\t\t\tchildren.push(childDataItem);\n\n\t\t\tchildDataItem.setRaw(\"parent\", dataItem);\n\t\t\tchildDataItem.setRaw(\"depth\", depth + 1);\n\n\t\t\tif (childDataItem.get(\"fill\") == null) {\n\t\t\t\tchildDataItem.setRaw(\"fill\", dataItem.get(\"fill\"));\n\t\t\t}\n\n\t\t\tthis.processDataItem(childDataItem);\n\t\t})\n\t}\n\n\tprotected _processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3hierarchy.HierarchyNode<IHierarchyDataObject>) {\n\t\tconst dataItem = d3HierarchyNode.data.dataItem;\n\n\t\tif (d3HierarchyNode.depth > this.getPrivate(\"maxDepth\")) {\n\t\t\tthis.setPrivateRaw(\"maxDepth\", d3HierarchyNode.depth);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tdataItem.setRaw(\"d3HierarchyNode\", d3HierarchyNode);\n\n\t\t\t(d3HierarchyNode as any).index = this._index;\n\n\t\t\tthis._index++;\n\n\t\t\tdataItem.get(\"node\").set(\"disabled\", dataItem.get(\"disabled\"));\n\n\t\t\tlet dataValue = d3HierarchyNode.data.value;\n\t\t\tlet value = d3HierarchyNode.value\n\n\t\t\tif (dataValue != null) {\n\t\t\t\tvalue = dataValue;\n\t\t\t\t(d3HierarchyNode as any)[\"value\"] = value;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdataItem.setRaw(\"sum\", value);\n\t\t\t\tdataItem.setRaw(\"valuePercentTotal\", value / this.dataItems[0].get(\"sum\") * 100);\n\n\t\t\t\tlet valuePercent = 100;\n\t\t\t\tconst parent = dataItem.get(\"parent\");\n\t\t\t\tif (parent) {\n\t\t\t\t\tvaluePercent = value / parent.get(\"sum\") * 100;\n\t\t\t\t}\n\t\t\t\tdataItem.get(\"label\").text.markDirtyText();\n\t\t\t\tdataItem.setRaw(\"valuePercent\", valuePercent);\n\n\t\t\t\tif (this.getPrivate(\"valueLow\") > value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueLow\", value);\n\t\t\t\t}\n\n\t\t\t\tif (this.getPrivate(\"valueHigh\") < value) {\n\t\t\t\t\tthis.setPrivateRaw(\"valueHigh\", value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst hierarchyChildren = d3HierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (d3HierarchyChild) => {\n\t\t\t\tthis._updateValues(d3HierarchyChild);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _makeHierarchyData(data: IHierarchyDataObject, dataItem: DataItem<IHierarchyDataItem>) {\n\t\tdata.dataItem = dataItem;\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tconst childrenDataArray: Array<IHierarchyDataObject> = [];\n\t\t\tdata.children = childrenDataArray;\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tconst childData = {};\n\t\t\t\tchildrenDataArray.push(childData);\n\t\t\t\tthis._makeHierarchyData(childData, childDataItem);\n\t\t\t})\n\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst value = dataItem.get(\"valueWorking\");\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tdata.value = value;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tconst children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disposeDataItem(child);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tconst stateAnimationDuration = \"stateAnimationDuration\"\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: 0, duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.hide();\n\t\tnode.hideTooltip();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.hideDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows hierarchy's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tconst children = dataItem.get(\"children\");\n\n\t\tif ((!children || children.length == 0) && $type.isNumber(dataItem.get(\"value\"))) {\n\t\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.show();\n\n\t\tif (children) {\n\t\t\t$array.each(children, (childDataItem) => {\n\t\t\t\tpromises.push(this.showDataItem(childDataItem));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Enables a disabled data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, maxDepth?: number, depth?: number, duration?: number) {\n\t\tif (depth == null) {\n\t\t\tdepth = 0;\n\t\t}\n\n\t\tif (maxDepth == null) {\n\t\t\tmaxDepth = 1;\n\t\t}\n\n\t\tdataItem.set(\"disabled\", false);\n\t\tdataItem.get(\"node\").set(\"disabled\", false);\n\n\t\tif (!dataItem.isHidden()) {\n\t\t\tdataItem.get(\"node\").show(duration);\n\t\t}\n\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\t\tif (dataItem.get(\"depth\") < topDepth) {\n\t\t\tdataItem.get(\"node\").hide(0);\n\t\t}\n\n\t\tif (depth == 0) {\n\t\t\tconst upDepth = this.get(\"upDepth\", Infinity);\n\t\t\tlet parent = dataItem;\n\t\t\tlet count = 0;\n\n\t\t\twhile (parent !== undefined) {\n\t\t\t\tif (count > upDepth) {\n\t\t\t\t\tparent.get(\"node\").hide();\n\t\t\t\t}\n\t\t\t\tparent = parent.get(\"parent\");\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\tif (depth < maxDepth - 1) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tconst disabledField = this.get(\"disabledField\");\n\t\t\t\t\tif (disabledField) {\n\t\t\t\t\t\tconst dataContext = child.dataContext as any;\n\t\t\t\t\t\tif (dataContext[disabledField] != true) {\n\t\t\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.enableDataItem(child, maxDepth, depth as number + 1, duration);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (!child.isHidden()) {\n\t\t\t\t\t\tchild.get(\"node\").show(duration);\n\t\t\t\t\t\tchild.get(\"node\").states.applyAnimate(\"disabled\");\n\t\t\t\t\t\tchild.set(\"disabled\", true);\n\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Disables a data item.\n\t *\n\t * @param  dataItem  Target data item\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number) {\n\t\tdataItem.set(\"disabled\", true);\n\t\tlet children = dataItem.get(\"children\");\n\t\tif (children) {\n\t\t\t$array.each(children, (child) => {\n\t\t\t\tthis.disableDataItem(child, duration);\n\t\t\t\tchild.get(\"node\").hide(duration);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _selectDataItem(dataItem?: DataItem<this[\"_dataItemSettings\"]>, downDepth?: number, skipDisptach?: boolean) {\n\t\tif (dataItem) {\n\t\t\tif (!skipDisptach) {\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: dataItem });\n\t\t\t}\n\n\t\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\t\tif (downDepth == null) {\n\t\t\t\tdownDepth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\t\t\t}\n\n\t\t\tif (!this.inited) {\n\t\t\t\tdownDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\t\t\t}\n\n\t\t\tthis._currentDownDepth = downDepth;\n\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (currentDepth + downDepth > maxDepth) {\n\t\t\t\tdownDepth = maxDepth - currentDepth;\n\t\t\t}\n\n\t\t\tif (currentDepth < topDepth) {\n\t\t\t\tdownDepth += topDepth - currentDepth;\n\t\t\t\tcurrentDepth = topDepth;\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\n\t\t\tif (children && children.length > 0) {\n\t\t\t\tif (downDepth > 0) {\n\t\t\t\t\tthis.enableDataItem(dataItem, downDepth);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem.get(\"node\").show();\n\t\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif (hierarchyNode.depth < topDepth) {\n\t\t\t\t\tdataItem.get(\"node\").hide(0);\n\t\t\t\t}\n\n\t\t\t\tif (this.get(\"singleBranchOnly\")) {\n\t\t\t\t\tthis._handleSingle(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.enableDataItem(this.dataItems[0], downDepth, 0);\n\t\t\t}\n\n\t\t\tthis._root.events.once(\"frameended\", ()=>{\n\t\t\t\tthis._zoom(dataItem);\n\t\t\t})\t\t\t\n\t\t}\n\t}\n\n\tprotected _zoom(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Selects specific data item.\n\t *\n\t * @param  dataItem  Target data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\n\t\tif (this.get(\"selectedDataItem\") == dataItem) {\n\t\t\tif (parent) {\n\t\t\t\tthis.set(\"selectedDataItem\", parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet depth = Math.min(this.get(\"downDepth\", 1), maxDepth - dataItem.get(\"depth\"));\n\n\t\t\t\tif (this._currentDownDepth == depth) {\n\t\t\t\t\tdepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - this.get(\"topDepth\", 0));\n\t\t\t\t}\n\n\t\t\t\tthis._selectDataItem(dataItem, depth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t}\n\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tif (sprite) {\n\t\t\t\tnode.children.push(sprite);\n\t\t\t\tnode.on(\"width\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t\tnode.on(\"height\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tsprite.set(\"x\", node.width() * locationX);\n\t\t\tsprite.set(\"y\", node.height() * locationY);\n\t\t}\n\t}\n\n\t/**\n\t * Triggers hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic hoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node && !node.isHidden()) {\n\t\t\tnode.hover();\n\t\t}\n\t}\n\n\t/**\n\t * Triggers un-hover on a series data item.\n\t *\n\t * @since 5.0.7\n\t * @param  dataItem  Target data item\n\t */\n\tpublic unhoverDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tnode.unhover();\n\t\t}\n\t}\n}\n", "import type { DataItem } from \"../../core/render/Component\";\nimport type { LinkedHierarchy, ILinkedHierarchyDataItem } from \"./LinkedHierarchy\";\n\nimport { HierarchyNode, IHierarchyNodePrivate, IHierarchyNodeSettings } from \"./HierarchyNode\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface ILinkedHierarchyNodeSettings extends IHierarchyNodeSettings {\n}\n\nexport interface ILinkedHierarchyNodePrivate extends IHierarchyNodePrivate {\n}\n\n/**\n * A node class for [[LinkedHierarchy]].\n */\nexport class LinkedHierarchyNode extends HierarchyNode {\n\n\t/**\n\t * A series node belongs to.\n\t */\n\tdeclare public series: LinkedHierarchy | undefined;\n\n\tdeclare public _settings: ILinkedHierarchyNodeSettings;\n\tdeclare public _privateSettings: ILinkedHierarchyNodePrivate;\n\n\tpublic static className: string = \"LinkedHierarchyNode\";\n\tpublic static classNames: Array<string> = HierarchyNode.classNames.concat([LinkedHierarchyNode.className]);\n\n\tdeclare protected _dataItem: DataItem<ILinkedHierarchyDataItem> | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.states.create(\"disabled\", {});\n\t\tthis.states.create(\"hover\", {});\n\t\tthis.states.create(\"hoverDisabled\", {});\n\t}\n\n\n\tpublic _updateLinks(duration?: number) {\n\t\tconst dataItem = this.dataItem;\n\t\tif (dataItem) {\n\t\t\tlet links = (dataItem as DataItem<ILinkedHierarchyDataItem>).get(\"links\");\n\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tlet source = link.get(\"source\")\n\t\t\t\tlet target = link.get(\"target\")\n\n\t\t\t\tif (source && target) {\n\t\t\t\t\tif (source.get(\"node\").isHidden() || target.get(\"node\").isHidden()) {\n\t\t\t\t\t\tlink.hide(duration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlink.show(duration);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"disabled\")) {\n\t\t\tthis._updateLinks();\n\t\t}\n\t}\n\n\tprotected _onHide(duration?: number) {\n\t\tsuper._onHide(duration);\n\t\tthis._updateLinks(duration);\n\t}\n\n\tprotected _onShow(duration?: number) {\n\t\tsuper._onShow(duration);\n\t\tthis._updateLinks(duration);\n\t}\n}\n", "import type { IHierarchyDataItem } from \"./Hierarchy\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\n\nexport interface IHierarchyLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget?: DataItem<IHierarchyDataItem>;\n\n\t/**\n\t * Strength of the link.\n\t */\n\tstrength?: number;\n\n\t/**\n\t * Distance in pixels.\n\t */\n\tdistance?: number;\n\n}\n\nexport interface IHierarchyLinkPrivate extends IGraphicsPrivate {\n\td3Link:any;\n}\n\n/**\n * Draws a link between nodes in a hierarchy series.\n */\nexport class HierarchyLink extends Graphics {\n\tdeclare public _settings: IHierarchyLinkSettings;\n\tdeclare public _privateSettings: IHierarchyLinkPrivate;\n\n\tpublic static className: string = \"HierarchyLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([HierarchyLink.className]);\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this._clear) {\n\t\t\tlet source = this.get(\"source\");\n\t\t\tlet target = this.get(\"target\");\n\t\t\tif (source && target) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._display.moveTo(sourceNode.x(), sourceNode.y());\n\t\t\t\tthis._display.lineTo(targetNode.x(), targetNode.y());\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tsourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\ttargetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n}\n", "import type { DataItem } from \"../../core/render/Component\";\nimport type * as d3hierarchy from \"d3-hierarchy\";\n\nimport { Hierarchy, IHierarchySettings, IHierarchyDataItem, IHierarchyPrivate, IHierarchyEvents } from \"./Hierarchy\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport { HierarchyLink } from \"./HierarchyLink\";\nimport { Template } from \"../../core/util/Template\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface ILinkedHierarchyDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ILinkedHierarchyDataObject[],\n\tdataItem?: DataItem<ILinkedHierarchyDataItem>\n};\n\nexport interface ILinkedHierarchyDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of child data items.\n\t */\n\tchildren: Array<DataItem<ILinkedHierarchyDataItem>>;\n\n\t/**\n\t * A data item of a parent node.\n\t */\n\tparent: DataItem<ILinkedHierarchyDataItem>;\n\n\t/**\n\t * A related node.\n\t */\n\tnode: LinkedHierarchyNode;\n\n\t/**\n\t * [[Circle]] element of the related node.\n\t */\n\tcircle: Circle;\n\n\t/**\n\t * [[Circle]] element of the related node, representing outer circle.\n\t */\n\touterCircle: Circle;\n\n\t/**\n\t * A [[HierarchyLink]] leading to parent node.\n\t */\n\tparentLink: HierarchyLink;\n\n\t/**\n\t * An [[HierarchyLink]] leading to parent node.\n\t */\n\tlinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of [[HierarchyLink]] objects leading to child nodes.\n\t */\n\tchildLinks: Array<HierarchyLink>;\n\n\t/**\n\t * An array of IDs of directly linked nodes.\n\t */\n\tlinkWith: Array<string>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyPointNode<ILinkedHierarchyDataObject>;\n\n}\n\nexport interface ILinkedHierarchySettings extends IHierarchySettings {\n\n\t/**\n\t * A field in data which holds IDs of nodes to link with.\n\t */\n\tlinkWithField?: string;\n\n}\n\nexport interface ILinkedHierarchyPrivate extends IHierarchyPrivate {\n}\n\nexport interface ILinkedHierarchyEvents extends IHierarchyEvents {\n}\n\n/**\n * A base class for linked hierarchy series.\n */\nexport abstract class LinkedHierarchy extends Hierarchy {\n\n\tpublic static className: string = \"LinkedHierarchy\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([LinkedHierarchy.className]);\n\n\tdeclare public _settings: ILinkedHierarchySettings;\n\tdeclare public _privateSettings: ILinkedHierarchyPrivate;\n\tdeclare public _dataItemSettings: ILinkedHierarchyDataItem;\n\tdeclare public _events: ILinkedHierarchyEvents;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"linkWith\", \"x\", \"y\");\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A list of nodes in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<LinkedHierarchyNode>\n\t */\n\tpublic readonly nodes: ListTemplate<LinkedHierarchyNode> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => LinkedHierarchyNode._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.nodes.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"node\"]),\n\t\t\tx: this.width() / 2,\n\t\t\ty: this.height() / 2\n\t\t}, [this.nodes.template])\n\t);\n\n\t/**\n\t * A list of node circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\t/**\n\t * A list of node outer circle elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly outerCircles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.outerCircles.template.get(\"themeTags\", []), [this._tag, \"outer\", \"shape\"])\n\t\t}, [this.outerCircles.template])\n\t);\n\n\t/**\n\t * A list of link elements in a [[LinkedHierarchy]] chart.\n\t *\n\t * @default new ListTemplate<HierarchyLink>\n\t */\n\tpublic readonly links: ListTemplate<HierarchyLink> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => HierarchyLink._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.links.template.get(\"themeTags\", []), [this._tag, \"linkedhierarchy\", \"hierarchy\", \"link\"])\n\t\t}, [this.links.template])\n\t);\n\n\t/**\n\t * A [[Container]] that link elements are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.moveValue(Container.new(this._root, {}), 0);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): LinkedHierarchyNode {\n\t\tconst node = super.makeNode(dataItem) as LinkedHierarchyNode;\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tthis.circles.push(circle);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst outerCircle = node.children.moveValue(this.outerCircles.make(), 0);\n\t\tthis.outerCircles.push(outerCircle);\n\t\tdataItem.setRaw(\"outerCircle\", outerCircle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d })\n\t\t\touterCircle.set(\"radius\", d / 2);\n\n\t\t\tthis._handleRadiusChange();\n\t\t})\n\n\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t\n\t\tcircle._setDataItem(dataItem);\n\t\touterCircle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _handleRadiusChange() {\n\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.setRaw(\"childLinks\", []);\n\t\tdataItem.setRaw(\"links\", []);\n\t\tsuper.processDataItem(dataItem);\n\t}\n\n\tprotected _processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._processDataItem(dataItem);\n\n\t\tconst parentDataItem = dataItem.get(\"parent\");\n\t\tif (parentDataItem && parentDataItem.get(\"depth\") >= this.get(\"topDepth\")) {\n\t\t\tconst link = this.linkDataItems(parentDataItem, dataItem);\n\t\t\tdataItem.setRaw(\"parentLink\", link);\n\t\t}\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tthis.updateLinkWith(this.dataItems);\n\t\tnode._updateLinks(0);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t}\n\n\tprotected _animatePositions(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst point = this._getPoint(hierarchyNode);\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: point.x, duration: duration, easing: easing });\n\t\tnode.animate({ key: \"y\", to: point.y, duration: duration, easing: easing });\t\t\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tthis._animatePositions(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\tif (hierarchyChildren) {\n\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\tthis._updateNodes(hierarchyChild)\n\t\t\t})\n\t\t}\n\n\t\tconst fill = dataItem.get(\"fill\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst children = dataItem.get(\"children\");\n\t\t\n\t\tif (circle) {\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\n\t\tconst outerCircle = dataItem.get(\"outerCircle\");\n\t\tif (outerCircle) {\n\t\t\touterCircle._setDefault(\"fill\", fill);\n\t\t\touterCircle._setDefault(\"stroke\", fill);\n\n\t\t\tif (!children || children.length == 0) {\n\t\t\t\touterCircle.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Link two data items with a link element.\n\t *\n\t * @param   source    Source node data item\n\t * @param   target    Target node data item\n\t * @param   strength  Link strength\n\t * @return            Link element\n\t */\n\tpublic linkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>, strength?: number): HierarchyLink {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (!link) {\n\t\t\tlink = this.links.make();\n\t\t\tthis.links.push(link);\n\t\t\tthis.linksContainer.children.push(link);\n\t\t\tlink.set(\"source\", source);\n\t\t\tlink.set(\"target\", target);\n\t\t\tlink._setDataItem(source);\n\t\t\tlink.set(\"stroke\", source.get(\"fill\"));\n\t\t\tif (strength != null) {\n\t\t\t\tlink.set(\"strength\", strength)\n\t\t\t}\n\n\t\t\tsource.get(\"childLinks\").push(link);\n\n\t\t\t$array.move(source.get(\"links\"), link);\n\t\t\t$array.move(target.get(\"links\"), link);\n\n\t\t\tthis._processLink(link, source, target);\n\t\t}\n\n\t\treturn link;\n\t}\n\n\n\t/**\n\t * Unlink two linked data items.\n\t *\n\t * @param   source  Source node data item\n\t * @param   target  Target node data item\n\t */\n\tpublic unlinkDataItems(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tlet link!: HierarchyLink;\n\n\t\tconst sourceLinks = source.get(\"links\");\n\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == target) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(sourceLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk && lnk.get(\"target\") == source) {\n\t\t\t\t\tlink = lnk;\n\t\t\t\t\t$array.remove(targetLinks, link);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (link) {\n\t\t\tthis._disposeLink(link);\n\t\t}\n\n\t\tthis._handleUnlink();\n\t}\n\n\tprotected _handleUnlink() {\n\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tthis.links.removeValue(link);\n\t\tlink.dispose();\n\t}\n\n\t/**\n\t * Returns `true` if two nodes are linked with each other.\n\t */\n\tpublic areLinked(source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tconst sourceLinks = source.get(\"links\");\n\t\tlet linked = false;\n\t\tif (sourceLinks) {\n\t\t\t$array.each(sourceLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == target) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tconst targetLinks = target.get(\"links\");\n\n\t\tif (targetLinks) {\n\t\t\t$array.each(targetLinks, (lnk) => {\n\t\t\t\tif (lnk.get(\"target\") == source) {\n\t\t\t\t\tlinked = true;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn linked;\n\t}\n\n\tprotected _processLink(_link: HierarchyLink, _source: DataItem<this[\"_dataItemSettings\"]>, _target: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst links = dataItem.get(\"links\");\n\t\tif (links) {\n\t\t\t$array.each(links, (link) => {\n\t\t\t\tthis._disposeLink(link)\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Select a data item.\n\t * @param  dataItem  Data item\n\t */\n\tpublic selectDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\n\t\tif (!dataItem.get(\"disabled\")) {\n\t\t\tthis.set(\"selectedDataItem\", dataItem);\n\t\t}\n\t\telse {\n\t\t\tif (parent) {\n\t\t\t\tthis.setRaw(\"selectedDataItem\", parent);\n\t\t\t\tconst type = \"dataitemselected\";\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, dataItem: parent });\n\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t}\n\t\t}\n\t}\n}\n", "export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n", "export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n", "export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n", "export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n", "export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n", "export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n", "export default function() {\n  return this._root;\n}\n", "export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n", "import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n", "export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n", "export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n", "import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n", "export default function(x) {\n  return function() {\n    return x;\n  };\n}\n", "export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n", "import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n", "var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n", "var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n", "// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n", "import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n", "import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n", "import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n", "import type { DataItem } from \"../../core/render/Component\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { LinkedHierarchyNode } from \"./LinkedHierarchyNode\";\nimport type { HierarchyLink } from \"./HierarchyLink\";\nimport type * as d3Hierarchy from \"d3-hierarchy\";\n\nimport { LinkedHierarchy, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyPrivate, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as d3Force from \"d3-force\";\n\n/**\n * @ignore\n */\nexport interface IForceDirectedDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IForceDirectedDataObject[],\n\tdataItem?: DataItem<IForceDirectedDataItem>\n};\n\nexport interface IForceDirectedDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IForceDirectedDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<IForceDirectedDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3ForceNode: d3Force.SimulationNodeDatum;\n\n\t/**\n\t * X coordinate.\n\t */\n\tx: number | undefined;\n\n\t/**\n\t * Y coordinate.\n\t */\n\ty: number | undefined;\n}\n\nexport interface IForceDirectedSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Minimum gap in pixels between the nodes.\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to the center of the\n\t * chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tcenterStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) all nodes to each other.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default -15\n\t */\n\tmanyBodyStrength?: number;\n\n\t/**\n\t * A force that attracts (or pushes back) nodes that are linked together\n\t * via `linkWithField`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tlinkWithStrength?: number | undefined;\n\n\t/**\n\t * Resistance acting agains node speed.\n\t *\n\t * The greater the value, the more \"sluggish\" the nodes will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 0.5\n\t */\n\tvelocityDecay?: number;\n\n\t/**\n\t * Length of how long initial force simulation would run in frames.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 500\n\t */\n\tinitialFrames?: number;\n\n\t/**\n\t * If set to a number will wait X number of frames before revealing\n\t * the tree.\n\t *\n\t * Can be used to hide initial animations where nodes settle into their\n\t * places.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Layout_and_force_simulation} for more info\n\t * @default 10\n\t */\n\tshowOnFrame?: number;\n\n\t/**\n\t * Smallest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 1%\n\t */\n\tminRadius?: number | Percent;\n\n\t/**\n\t * Biggest possible radius for a node circle.\n\t *\n\t * Can be a fixed pixel value or percent relative to chart size.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Sizing_nodes} for more info\n\t * @default 8%\n\t */\n\tmaxRadius?: number | Percent;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\txField?: string;\n\n\t/**\n\t * Field in data that holds X coordinate of the node.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/#Fixed_nodes} for more info\n\t */\n\tyField?: string;\n\n}\n\nexport interface IForceDirectedPrivate extends ILinkedHierarchyPrivate {\n}\n\nexport interface IForceDirectedEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Creates a force-directed tree.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/force-directed/} for more info\n * @important\n */\nexport class ForceDirected extends LinkedHierarchy {\n\n\tprotected _tag: string = \"forcedirected\";\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly d3forceSimulation: d3Force.Simulation<{}, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceSimulation();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic readonly collisionForce: d3Force.ForceCollide<d3Force.SimulationNodeDatum> = d3Force.forceCollide(20);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkForce: d3Force.ForceLink<d3Force.SimulationNodeDatum, d3Force.SimulationLinkDatum<d3Force.SimulationNodeDatum>> = d3Force.forceLink();\n\n\tpublic static className: string = \"ForceDirected\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([ForceDirected.className]);\n\n\tdeclare public _settings: IForceDirectedSettings;\n\tdeclare public _privateSettings: IForceDirectedPrivate;\n\tdeclare public _dataItemSettings: IForceDirectedDataItem;\n\tdeclare public _events: IForceDirectedEvents;\n\n\tprotected _nodes: Array<any> = [];\n\tprotected _links: Array<any> = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.d3forceSimulation.on(\"tick\", () => {\n\t\t\tthis._tick++;\n\t\t\tthis.updateNodePositions();\n\t\t});\n\t}\n\n\tprotected _tick: number = 0;\n\tprotected _nodesDirty: boolean = false;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tif (this.isDirty(\"showOnFrame\")) {\n\t\t\tconst showOnFrame = this.get(\"showOnFrame\");\n\t\t\tif (showOnFrame > this._tick) {\n\t\t\t\tthis.nodesContainer.setPrivate(\"visible\", false);\n\t\t\t\tthis.linksContainer.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this.isDirty(\"velocityDecay\")) {\n\t\t\td3forceSimulation.velocityDecay(this.get(\"velocityDecay\", 0));\n\t\t}\n\n\t\tif (this.isDirty(\"initialFrames\")) {\n\t\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / this.get(\"initialFrames\", 500)));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic restartSimulation(alpha: number): void {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\tif (d3forceSimulation.alpha() < .25) {\n\t\t\td3forceSimulation.alpha(alpha);\n\t\t\td3forceSimulation.restart();\n\t\t}\n\t}\n\n\tpublic _handleRadiusChange() {\n\t\tthis._updateForces();\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3ForceNode: any = { index: this._index, x: this.innerWidth() / 2, y: this.innerHeight() / 2, dataItem: dataItem };\n\t\tconst index = this._nodes.push(d3ForceNode) - 1;\n\t\td3ForceNode.index = index;\n\n\t\tthis.d3forceSimulation.nodes(this._nodes);\n\n\t\tdataItem.set(\"d3ForceNode\", d3ForceNode);\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tnode.set(\"x\", -10000);\n\t\tnode.on(\"scale\", () => {\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\td3ForceNode.fx = node.x();\n\t\t\td3ForceNode.fy = node.y();\n\t\t\tthis._updateForces();\n\t\t})\n\n\t\tnode.events.on(\"dragstop\", () => {\n\t\t\tif (dataItem.get(\"x\") == null) {\n\t\t\t\td3ForceNode.fx = undefined;\n\t\t\t}\n\t\t\tif (dataItem.get(\"y\") == null) {\n\t\t\t\td3ForceNode.fy = undefined;\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _updateValues(d3HierarchyNode: d3Hierarchy.HierarchyNode<IForceDirectedDataObject>) {\n\t\tsuper._updateValues(d3HierarchyNode);\n\n\t\tthis._nodesDirty = true;\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"collision\", this.collisionForce);\n\t\td3forceSimulation.nodes(this._nodes);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\td3forceSimulation.force(\"link\", this.linkForce);\n\t}\n\n\tprotected _updateVisuals() {\n\t\tsuper._updateVisuals();\n\t\tthis.restartSimulation(.3);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\n\t\tif (this._sizeDirty) {\n\t\t\tlet w = Math.max(50, this.innerWidth());\n\t\t\tlet h = Math.max(50, this.innerHeight());\n\t\t\tlet pt = this.get(\"paddingTop\", 0);\n\t\t\tlet pl = this.get(\"paddingLeft\", 0);\n\n\t\t\tlet centerStrength = this.get(\"centerStrength\", 1);\n\n\t\t\td3forceSimulation.force(\"x\", d3Force.forceX().x(w / 2 + pl).strength(centerStrength * 100 / w));\n\t\t\td3forceSimulation.force(\"y\", d3Force.forceY().y(h / 2 + pt).strength(centerStrength * 100 / h));\n\t\t}\n\n\t\tif (this._nodesDirty) {\n\t\t\tthis._updateForces();\n\t\t}\n\t}\n\n\tpublic _updateForces() {\n\t\tconst d3forceSimulation = this.d3forceSimulation;\n\t\td3forceSimulation.force(\"manybody\", d3Force.forceManyBody().strength((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet manyBodyStrength = this.get(\"manyBodyStrength\", -15);\n\n\t\t\tif (circle) {\n\t\t\t\treturn circle.get(\"radius\", 1) * node.get(\"scale\", 1) * manyBodyStrength;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}));\n\n\t\tthis.collisionForce.radius((d3node) => {\n\t\t\tlet dataItem = (d3node as any).dataItem;\n\t\t\tlet node = dataItem.get(\"node\") as LinkedHierarchyNode;\n\t\t\tlet circle = dataItem.get(\"circle\");\n\t\t\tlet outerCircle = dataItem.get(\"outerCircle\");\n\t\t\tif (circle && outerCircle) {\n\t\t\t\tlet radius = circle.get(\"radius\", 1);\n\n\t\t\t\tif (!outerCircle.isHidden()) {\n\t\t\t\t\tradius = radius * outerCircle.get(\"scale\", 1.1);\n\t\t\t\t}\n\n\t\t\t\tradius *= node.get(\"scale\", 1);\n\n\t\t\t\treturn radius + this.get(\"nodePadding\", 0);\n\t\t\t}\n\t\t})\n\t\tthis.restartSimulation(0.3);\n\t}\n\n\tprotected _animatePositions(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\t// void, do not remove\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._nodesDirty = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateNodePositions() {\n\t\tconst linkForce = this.linkForce;\n\t\tif (linkForce) {\n\t\t\tlinkForce.distance((linkDatum) => {\n\t\t\t\treturn this.getDistance(linkDatum)\n\t\t\t});\n\t\t\tlinkForce.strength((linkDatum) => {\n\t\t\t\treturn this.getStrength(linkDatum)\n\t\t\t});\n\t\t}\n\t\tif (this._tick == this.get(\"showOnFrame\")) {\n\t\t\tthis.nodesContainer.setPrivate(\"visible\", true);\n\t\t\tthis.linksContainer.setPrivate(\"visible\", true);\n\t\t}\n\n\t\tlet d3Nodes = this.d3forceSimulation.nodes();\n\n\t\t$array.each(d3Nodes, (d3Node: any) => {\n\t\t\tconst dataItem = d3Node.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\tnode.set(\"x\", d3Node.x);\n\t\t\tnode.set(\"y\", d3Node.y);\n\t\t})\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLinkWith(dataItems: Array<DataItem<this[\"_dataItemSettings\"]>>) {\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst linkWith = dataItem.get(\"linkWith\");\n\t\t\tif (linkWith) {\n\t\t\t\t$array.each(linkWith, (id) => {\n\t\t\t\t\tconst linkWithDataItem = this._getDataItemById(this.dataItems, id);\n\n\t\t\t\t\tif (linkWithDataItem) {\n\t\t\t\t\t\tthis.linkDataItems(dataItem, linkWithDataItem, this.get(\"linkWithStrength\"));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst children = dataItem.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\tthis.updateLinkWith(children);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected getDistance(linkDatum: any) {\n\t\tlet sourceDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.sourceDataItem;\n\t\tlet targetDataItem: DataItem<this[\"_dataItemSettings\"]> = <DataItem<this[\"_dataItemSettings\"]>>linkDatum.targetDataItem;\n\n\t\tlet distance = 0;\n\n\t\tif (sourceDataItem && targetDataItem) {\n\n\t\t\tconst targetNode = targetDataItem.get(\"node\");\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tlet link = linkDatum.link;\n\t\t\tif (link) {\n\t\t\t\tdistance = link.get(\"distance\", 1);\n\t\t\t}\n\n\t\t\tconst sourceNode = sourceDataItem.get(\"node\");\n\n\t\t\tif (targetNode.isHidden()) {\n\t\t\t\tdistance = 1;\n\t\t\t}\n\n\t\t\treturn (distance * (sourceDataItem.get(\"circle\").get(\"radius\", 1) * sourceNode.get(\"scale\", 1) + targetDataItem.get(\"circle\").get(\"radius\", 1) * targetNode.get(\"scale\", 1)));\n\t\t}\n\t\treturn distance;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected getStrength(linkDatum: any) {\n\t\tlet strength = 0;\n\n\t\tlet link = linkDatum.link;\n\t\tif (link) {\n\t\t\tstrength = link.get(\"strength\", 1);\n\t\t}\n\n\t\tconst targetDataItem = linkDatum.targetDataItem;\n\t\tstrength *= targetDataItem.get(\"node\").get(\"scale\");\n\n\t\treturn strength;\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\t\tthis._updateRadius(dataItem);\n\n\t\tconst x = dataItem.get(\"x\");\n\t\tconst y = dataItem.get(\"y\");\n\n\t\tconst d3Node = dataItem.get(\"d3ForceNode\");\n\n\t\tif (x != null) {\n\t\t\t(d3Node as any).fx = $utils.relativeToValue(x, this.innerWidth());\n\t\t}\n\t\telse {\n\t\t\t(d3Node as any).fx = undefined;\n\t\t}\n\n\t\tif (y != null) {\n\t\t\t(d3Node as any).fy = $utils.relativeToValue(y, this.innerHeight());\n\t\t}\n\t\telse {\n\t\t\t(d3Node as any).fx = undefined;\n\t\t}\n\t}\n\n\tprotected _updateRadius(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet size = (this.innerWidth() + this.innerHeight()) / 2;\n\n\t\tlet minRadius = $utils.relativeToValue(this.get(\"minRadius\", 1), size);\n\t\tlet maxRadius = $utils.relativeToValue(this.get(\"maxRadius\", 5), size);\n\n\t\tlet valueWorking = dataItem.get(\"sum\");\n\n\t\tlet radius = maxRadius;\n\n\t\tconst min = this.getPrivate(\"valueLow\", 0);\n\t\tconst max = this.getPrivate(\"valueHigh\", 0);\n\n\t\tif (max > 0) {\n\t\t\tradius = minRadius + (valueWorking - min) / (max - min) * (maxRadius - minRadius);\n\t\t}\n\n\t\tif (!$type.isNumber(radius)) {\n\t\t\tradius = minRadius;\n\t\t}\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tdataItem.get(\"circle\").animate({ key: \"radius\", to: radius, duration: duration, easing: easing });\n\t}\n\n\tprotected _processLink(link: HierarchyLink, source: DataItem<this[\"_dataItemSettings\"]>, target: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst d3Link = { link: link, source: source.get(\"d3ForceNode\").index, target: target.get(\"d3ForceNode\").index, sourceDataItem: source, targetDataItem: target };\n\t\tthis._links.push(d3Link);\n\t\tlink.setPrivate(\"d3Link\", d3Link);\n\n\t\tthis.linkForce = d3Force.forceLink(this._links);\n\t\tthis.d3forceSimulation.force(\"link\", this.linkForce);\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _disposeLink(link: HierarchyLink) {\n\t\tsuper._disposeLink(link);\n\t\t$array.remove(this._links, link.getPrivate(\"d3Link\"));\n\t}\n\n\tprotected _handleUnlink() {\n\t\tthis.restartSimulation(0.5);\n\t}\n\n\tprotected _onDataClear() {\n\n\t\tsuper._onDataClear();\n\n\t\tthis._nodes = [];\n\t\tthis._links = [];\n\t}\n}\n", "import type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyEvents } from \"./Hierarchy\";\nimport { Circle } from \"../../core/render/Circle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\n\n/**\n * @ignore\n */\nexport interface IPackDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPackDataObject[],\n\tdataItem?: DataItem<IPackDataItem>\n};\n\nexport interface IPackDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * An array of data items of node's children.\n\t */\n\tchildren: Array<DataItem<IPackDataItem>>;\n\n\t/**\n\t * A data item of node's parent.\n\t */\n\tparent: DataItem<IPackDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>;\n\n\t/**\n\t * A [[Circle]] element of the node.\n\t */\n\tcircle: Circle;\n\n}\n\nexport interface IPackSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes, in pixels.\n\t *\n\t * @since 5.2.6\n\t */\n\tnodePadding?:number\n\n}\n\nexport interface IPackPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tscaleR?: number;\n\n}\n\nexport interface IPackEvents extends IHierarchyEvents {\n}\n\n/**\n * Builds a pack diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Pack extends Hierarchy {\n\n\tdeclare public _settings: IPackSettings;\n\tdeclare public _privateSettings: IPackPrivate;\n\tdeclare public _dataItemSettings: IPackDataItem;\n\n\tprotected _tag: string = \"pack\";\n\n\tpublic static className: string = \"Pack\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Pack.className]);\n\n\tpublic _packLayout = d3hierarchy.pack();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<IPackDataObject> | undefined;\n\tpublic _packData: IPackDataObject | undefined;\n\n\t/**\n\t * A list of node circle elements in a [[Pack]] chart.\n\t *\n\t * @default new ListTemplate<Circle>\n\t */\n\tpublic readonly circles: ListTemplate<Circle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Circle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.circles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.circles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleR\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"scaleR\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst packLayout = this._packLayout;\n\t\t\tpackLayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\tpackLayout(this._rootNode);\n\t\t\tpackLayout.padding(this.get(\"nodePadding\", 0));\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst circle = dataItem.get(\"circle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\tconst x = hierarchyNode.x * scaleR;\n\t\tconst y = hierarchyNode.y * scaleR;\n\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y, duration: duration, easing: easing })\n\n\t\tif (circle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tcircle.animate({ key: \"radius\", to: radius, duration: duration, easing: easing })\n\t\t\tcircle._setDefault(\"fill\", fill);\n\t\t\tcircle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyCircularNode<IPackDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst circle = dataItem.get(\"circle\");\n\n\t\t\tconst scaleR = this.getPrivate(\"scaleR\", 1);\n\n\t\t\tconst x = hierarchyNode.x * scaleR;\n\t\t\tconst y = hierarchyNode.y * scaleR;\n\t\t\tconst radius = hierarchyNode.r * scaleR;\n\n\t\t\tnode.setAll({ x: x, y: y })\n\t\t\tcircle.set(\"radius\", radius);\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst circle = node.children.moveValue(this.circles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", circle);\n\t\tthis.circles.push(circle);\n\t\tdataItem.setRaw(\"circle\", circle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\tcircle.on(\"radius\", () => {\n\t\t\tconst d = circle.get(\"radius\", this.width()) * 2;\n\t\t\tlabel.setAll({ maxWidth: d, maxHeight: d });\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet x = hierarchyNode.x;\n\t\tlet y = hierarchyNode.y;\n\t\tlet r = hierarchyNode.r;\n\n\t\tlet scaleR = Math.min(this.innerWidth(), this.innerHeight()) / (r * 2);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleR\", to: scaleR, duration: duration, easing: easing });\n\n\t\tconst nodesContainer = this.nodesContainer;\n\t\tnodesContainer.animate({ key: \"x\", from: nodesContainer.x(), to: this.width() / 2 - x * scaleR, duration: duration, easing: easing });\n\t\tnodesContainer.animate({ key: \"y\", from: nodesContainer.y(), to: this.height() / 2 - y * scaleR, duration: duration, easing: easing });\n\t}\n}\n", "import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\n/**\n * @ignore\n */\nexport interface IPartitionDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: IPartitionDataObject[],\n\tdataItem?: DataItem<IPartitionDataItem>\n};\n\nexport interface IPartitionDataItem extends IHierarchyDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<IPartitionDataItem>>;\n\n\t/**\n\t * Data it of a parent node.\n\t */\n\tparent: DataItem<IPartitionDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\n\t/**\n\t * A [[RoundedRectangle]] element of a node.\n\t */\n\trectangle: RoundedRectangle;\n\n}\n\nexport interface IPartitionSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes in pixels.\n\t *\n\t * @default 0\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IPartitionPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Partition series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/partition/} for more info\n */\nexport class Partition extends Hierarchy {\n\n\tdeclare public _settings: IPartitionSettings;\n\tdeclare public _privateSettings: IPartitionPrivate;\n\tdeclare public _dataItemSettings: IPartitionDataItem;\n\n\tprotected _tag: string = \"partition\";\n\n\tpublic static className: string = \"Partition\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Partition.className]);\n\n\t/**\n\t * A list of node rectangle elements in a [[Partition]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject> | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"partition\", this._settings.orientation || \"vertical\"]);\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"nodePadding\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t[w, h] = [h, w];\n\t\t\t}\n\n\t\t\tpartitionLayout.size([w, h]);\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tlet x0, x1, y0, y1: number;\n\n\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t}\n\t\telse {\n\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t}\n\t\tlet w = x1 - x0;\n\t\tlet h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\t\t\t\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\t\t\t\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<IPartitionDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tlet x0, x1, y0, y1: number;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.y1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.x0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.x1 * scaleY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0 * scaleX;\n\t\t\t\tx1 = hierarchyNode.x1 * scaleX;\n\t\t\t\ty0 = hierarchyNode.y0 * scaleY;\n\t\t\t\ty1 = hierarchyNode.y1 * scaleY;\n\t\t\t}\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\t\tthis._makeNode(dataItem, node);\n\t\treturn node;\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\t\trectangle._setDataItem(dataItem);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.set(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.set(\"maxHeight\", rectangle.height());\n\t\t})\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet y0 = 0;\n\t\tlet y1 = 0;\n\n\t\tconst upDepth = this.get(\"upDepth\", 0) + 1;\n\t\tconst topDepth = this.get(\"topDepth\", 0);\n\n\t\tconst width = this.innerWidth();\n\t\tconst height = this.innerHeight();\n\n\t\tconst maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tconst levelHeight = height / (maxDepth + 1);\n\t\tconst levelWidth = width / (maxDepth + 1);\n\t\tconst initialDepth = Math.min(this.get(\"initialDepth\", 1), maxDepth - topDepth);\n\n\t\tlet downDepth = this._currentDownDepth;\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tif (dataItem) {\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\t\tlet currentDepth = hierarchyNode.depth;\n\n\t\t\tif (this.get(\"orientation\") == \"horizontal\") {\n\t\t\t\tx0 = hierarchyNode.y0;\n\t\t\t\tx1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = hierarchyNode.x0;\n\t\t\t\ty1 = hierarchyNode.x1;\n\n\t\t\t\tx0 = x1 - levelWidth * upDepth;\n\t\t\t\tx1 = x0 + levelWidth * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\ty0 = 0;\n\t\t\t\t\ty1 = height;\n\t\t\t\t\tx0 = levelWidth * topDepth;\n\t\t\t\t\tx1 = x0 + levelWidth * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx0 = hierarchyNode.x0;\n\t\t\t\tx1 = hierarchyNode.x1;\n\n\t\t\t\ty0 = hierarchyNode.y0;\n\t\t\t\ty1 = hierarchyNode.y1;\n\n\t\t\t\ty0 = y1 - levelHeight * upDepth;\n\t\t\t\ty1 = y0 + levelHeight * (downDepth + 1);\n\n\t\t\t\tif (currentDepth < topDepth) {\n\t\t\t\t\tx0 = 0;\n\t\t\t\t\tx1 = width;\n\t\t\t\t\ty0 = levelHeight * topDepth;\n\t\t\t\t\ty1 = y0 + levelHeight * initialDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet scaleX = width / (x1 - x0);\n\t\tlet scaleY = height / (y1 - y0);\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\tthis.nodesContainer.animate({ key: \"x\", to: -x0 * scaleX, duration: duration, easing: easing });\n\t\tthis.nodesContainer.animate({ key: \"y\", to: -y0 * scaleY, duration: duration, easing: easing });\n\t}\n}\n", "import type { Root } from \"../../core/Root\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { HierarchyNode } from \"./HierarchyNode\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { Series } from \"../../core/render/Series\";\n\nimport { Partition, IPartitionPrivate, IPartitionSettings, IPartitionDataItem } from \"./Partition\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as d3hierarchy from \"d3-hierarchy\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\n\n/**\n * @ignore\n */\nexport interface ISunburstDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ISunburstDataObject[],\n\tdataItem?: DataItem<ISunburstDataItem>\n};\n\nexport interface ISunburstDataItem extends IPartitionDataItem {\n\n\t/**\n\t * Data items of child nodes.\n\t */\n\tchildren: Array<DataItem<ISunburstDataItem>>;\n\n\t/**\n\t * Data item of a parent node.\n\t */\n\tparent: DataItem<ISunburstDataItem>;\n\n\t/**\n\t * @ignore\n\t */\n\td3PartitionNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>;\n\n\t/**\n\t * A [[Slice]] element of the node.\n\t */\n\tslice: Slice;\n\n}\n\nexport interface ISunburstSettings extends IPartitionSettings {\n\n\t/**\n\t * Start angle of the series.\n\t *\n\t * @default -90\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * End angle of the series.\n\t *\n\t * @default 270\n\t */\n\tendAngle?: number;\n\n\t/**\n\t * Inner radius of the suburst pie.\n\t *\n\t * Setting to negative number will mean pixels from outer radius.\n\t *\n\t * @default 0\n\t */\n\tinnerRadius?: number | Percent;\n\n\t/**\n\t * Outer radius of the sunburst pie.\n\t *\n\t * @default 100%\n\t */\n\tradius?: number | Percent;\n\n}\n\nexport interface ISunburstPrivate extends IPartitionPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tdr: number;\n\n\t/**\n\t * @ignore\n\t */\n\tdx: number;\n\n\t/**\n\t * @ignore\n\t */\n\tinnerRadius: number;\n\n\t/**\n\t * @ignore\n\t */\n\thierarchySize?: number;\n\n}\n\n/**\n * Builds a sunburst diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/sunburst/} for more info\n * @important\n */\nexport class Sunburst extends Partition {\n\n\tdeclare public _settings: ISunburstSettings;\n\tdeclare public _privateSettings: ISunburstPrivate;\n\tdeclare public _dataItemSettings: ISunburstDataItem;\n\n\tprotected _tag: string = \"sunburst\";\n\n\tpublic static className: string = \"Sunburst\";\n\tpublic static classNames: Array<string> = Partition.classNames.concat([Sunburst.className]);\n\n\tpublic _partitionLayout = d3hierarchy.partition();\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject> | undefined;\n\n\t/**\n\t * A list of node slice elements in a [[Sunburst]] chart.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.slices.template.get(\"themeTags\", []), [this._tag, \"hierarchy\", \"node\", \"shape\"])\n\t\t}, [this.slices.template])\n\t);\n\n\t/**\n\t * A list of label elements in a [[Hierarchy]] chart.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [this._tag])\n\t\t}, [this.labels.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.nodesContainer.setAll({ x: p50, y: p50 });\n\t\tthis.setPrivateRaw(\"dx\", 0);\n\t\tthis.setPrivateRaw(\"dr\", 0);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"dr\") || this.isPrivateDirty(\"dx\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst partitionLayout = this._partitionLayout;\n\n\t\t\tlet bounds = $math.getArcBounds(0, 0, this.get(\"startAngle\", 0), this.get(\"endAngle\", 360), 1);\n\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\n\t\t\tconst wr = w / (bounds.right - bounds.left);\n\t\t\tconst hr = h / (bounds.bottom - bounds.top);\n\n\t\t\tlet s = Math.min(wr, hr);\n\n\t\t\tlet r = $utils.relativeToValue(this.get(\"radius\", p100), s);\n\t\t\tlet ir = $utils.relativeToValue(this.get(\"innerRadius\", 0), r);\n\n\t\t\tif (ir < 0) {\n\t\t\t\tir = r + ir;\n\t\t\t}\n\n\t\t\ts = r - ir;\n\n\t\t\tthis.setPrivateRaw(\"innerRadius\", ir);\n\t\t\tthis.setPrivateRaw(\"hierarchySize\", s);\n\n\t\t\tpartitionLayout.size([s, s]);\n\n\t\t\tthis.nodesContainer.setAll({\n\t\t\t\tdy: -r * (bounds.bottom + bounds.top) / 2, dx: -r * (bounds.right + bounds.left) / 2\n\t\t\t})\n\n\t\t\tconst nodePadding = this.get(\"nodePadding\");\n\n\t\t\tif ($type.isNumber(nodePadding)) {\n\t\t\t\tpartitionLayout.padding(nodePadding);\n\t\t\t}\n\n\n\t\t\tpartitionLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\t\tconst node = dataItem.get(\"node\");\n\n\t\tnode.setAll({ x: 0, y: 0 });\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\tsliceInnerRadius -= dr;\n\t\t\tsliceRadius -= dr;\n\n\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\tslice.animate({ key: \"radius\", to: sliceRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"innerRadius\", to: sliceInnerRadius, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"startAngle\", to: sliceStartAngle, duration: duration, easing: easing })\n\t\t\tslice.animate({ key: \"arc\", to: arc, duration: duration, easing: easing })\n\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\tslice._setDefault(\"fill\", fill);\n\t\t\tslice._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ISunburstDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\t\t\tconst dr = this.getPrivate(\"dr\", 0);\n\t\t\tconst dx = this.getPrivate(\"dx\", 0);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX + dx;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX + dx;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst ir = this.getPrivate(\"innerRadius\");\n\t\t\tconst hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tif (slice) {\n\t\t\t\tconst startAngle = this.get(\"startAngle\", -90);\n\t\t\t\tconst endAngle = this.get(\"endAngle\", 270);\n\n\t\t\t\tconst sliceStartAngle = startAngle + x0 / hs * (endAngle - startAngle);\n\t\t\t\tconst arc = startAngle + x1 / hs * (endAngle - startAngle) - sliceStartAngle;\n\n\t\t\t\tlet sliceInnerRadius = ir + y0;\n\t\t\t\tlet sliceRadius = ir + y1;\n\n\t\t\t\tsliceInnerRadius -= dr;\n\t\t\t\tsliceRadius -= dr;\n\n\t\t\t\tsliceRadius = Math.max(0, sliceRadius);\n\t\t\t\tsliceInnerRadius = Math.max(0, sliceInnerRadius);\n\n\t\t\t\tslice.setAll({ radius: sliceRadius, innerRadius: sliceInnerRadius, startAngle: sliceStartAngle, arc: arc });\n\t\t\t}\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\n\t\tconst slice = node.children.moveValue(this.slices.make(), 0);\n\t\tnode.setPrivate(\"tooltipTarget\", slice);\n\t\tdataItem.setRaw(\"slice\", slice);\n\n\t\tslice._setDataItem(dataItem);\n\n\t\tslice.on(\"arc\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"innerRadius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t\tslice.on(\"radius\", () => {\n\t\t\tthis._updateLabel(dataItem);\n\t\t})\n\t}\n\n\tprotected _updateLabel(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tconst label = dataItem.get(\"label\") as RadialLabel;\n\n\t\tif (slice && label) {\n\t\t\tlet innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tlet radius = slice.get(\"radius\", 0);\n\t\t\tlet angle = slice.get(\"startAngle\", 0);\n\t\t\tlet arc = Math.abs(slice.get(\"arc\", 0));\n\t\t\tlet labelAngle = angle + arc / 2;\n\t\t\tlet textType = label.get(\"textType\");\n\n\t\t\tlet maxWidth = radius - innerRadius;\n\t\t\tlet maxHeight = radius * arc * $math.RADIANS;\n\n\t\t\tif (innerRadius == 0 && arc >= 360 && textType == \"radial\") {\n\t\t\t\tradius = 1;\n\t\t\t\tlabelAngle = 0;\n\t\t\t\tmaxWidth *= 2;\n\t\t\t\tmaxHeight = maxWidth;\t\t\t\t\n\t\t\t}\n\n\t\t\tif (Math.round(arc) >= 360 && textType == \"radial\") {\n\t\t\t\tlabelAngle = 0;\n\t\t\t}\t\t\t\n\n\t\t\tif (textType == \"circular\") {\n\t\t\t\tmaxWidth = arc * $math.RADIANS * (innerRadius + (radius - innerRadius) / 2) - 10;\n\t\t\t}\n\n\n\t\t\tlabel.setAll({ labelAngle: labelAngle });\n\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\tlabel.setPrivate(\"innerRadius\", innerRadius);\n\n\t\t\tlabel.setAll({\n\t\t\t\tmaxHeight: maxHeight,\n\t\t\t\tmaxWidth: maxWidth\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet x0 = 0;\n\t\tlet x1 = 0;\n\t\tlet hs = this.getPrivate(\"hierarchySize\", 0);\n\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tlet upDepth = this.get(\"upDepth\", 0);\n\t\tlet topDepth = this.get(\"topDepth\", 0);\n\t\tlet currentDepth = hierarchyNode.depth;\n\t\tlet maxDepth = this.getPrivate(\"maxDepth\", 1);\n\t\tlet downDepth = this._currentDownDepth;\n\n\t\tif (downDepth == null) {\n\t\t\tdownDepth = this.get(\"downDepth\", 1);\n\t\t}\n\n\t\tconst levelHeight = hs / (maxDepth + 1);\n\n\t\tif (currentDepth < topDepth) {\n\t\t\tcurrentDepth = topDepth;\n\t\t}\n\n\t\tif (currentDepth - upDepth < 0) {\n\t\t\tupDepth = currentDepth;\n\t\t}\n\n\t\tx0 = hierarchyNode.x0;\n\t\tx1 = hierarchyNode.x1;\n\n\t\tlet scaleDepth = (downDepth + upDepth + 1);\n\n\t\tif (scaleDepth > maxDepth - topDepth + 1) {\n\t\t\tscaleDepth = maxDepth - topDepth + 1;\n\t\t}\n\n\t\tlet scaleX = hs / (x1 - x0);\n\t\tlet scaleY = hs / (levelHeight * scaleDepth);\n\n\t\tlet dr = Math.max(currentDepth - upDepth, topDepth) * levelHeight * scaleY;\n\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\tif (!this.inited) {\n\t\t\tduration = 0;\n\t\t}\n\n\t\tlet dx = -x0 * scaleX\n\n\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dr\", to: dr, duration: duration, easing: easing });\n\t\tthis.animatePrivate({ key: \"dx\", to: dx, duration: duration, easing: easing });\n\t}\n\n\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst parent = dataItem.get(\"parent\");\n\t\tif (parent) {\n\t\t\tconst children = parent.get(\"children\");\n\t\t\tif (children) {\n\t\t\t\t$array.each(children, (child) => {\n\t\t\t\t\tif (child != dataItem) {\n\t\t\t\t\t\tthis.disableDataItem(child);\n\t\t\t\t\t\tchild.get(\"node\").hide();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._handleSingle(parent);\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\n\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\tconst arc = slice.get(\"arc\", 0);\n\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\tconst radius = innerRadius + (slice.get(\"radius\", 0) - innerRadius) * locationY;\n\n\t\t\tlet x = $math.cos(angle) * radius;\n\t\t\tlet y = $math.sin(angle) * radius;\n\n\t\t\tif ($math.round(arc, 5) === 360 && $math.round(innerRadius, 2) === 0) {\n\t\t\t\tx = 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\n\t\t\tsprite.set(\"x\", x);\n\t\t\tsprite.set(\"y\", y);\n\t\t}\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction: (root: Root, series: Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?: number) {\n\t\tconst bullet = super._makeBullet(dataItem, bulletFunction, index);\n\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst slice = dataItem.get(\"slice\");\n\n\t\t\tif (sprite && slice) {\n\t\t\t\tslice.on(\"arc\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\n\t\t\t\tslice.on(\"radius\", () => {\n\t\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\treturn bullet;\n\t\t}\n\t}\n}\n", "import type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { LinkedHierarchy, ILinkedHierarchyPrivate, ILinkedHierarchySettings, ILinkedHierarchyDataItem, ILinkedHierarchyEvents } from \"./LinkedHierarchy\";\n\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreeDataObject {\n\tname?: string,\n\tvalue?: number,\n\tchildren?: ITreeDataObject[],\n\tdataItem?: DataItem<ITreeDataItem>\n};\n\nexport interface ITreeDataItem extends ILinkedHierarchyDataItem {\n\n\t/**\n\t * An array of children data items.\n\t */\n\tchildren: Array<DataItem<ITreeDataItem>>;\n\n\t/**\n\t * Parent data item.\n\t * @type {DataItem<ITreeDataItem>}\n\t */\n\tparent: DataItem<ITreeDataItem>;\n\n}\n\nexport interface ITreeSettings extends ILinkedHierarchySettings {\n\n\t/**\n\t * Orientation of the diagram.\n\t *\n\t * @default \"vertical\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * If set to `true`, will flip the tree direction.\n\t *\n\t * @default false\n\t * @since 5.2.4\n\t */\n\tinversed?: boolean;\n\n}\n\nexport interface ITreePrivate extends ILinkedHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n}\n\nexport interface ITreeEvents extends ILinkedHierarchyEvents {\n}\n\n/**\n * Displays a tree diagram.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/tree/} for more info\n * @important\n */\nexport class Tree extends LinkedHierarchy {\n\n\tdeclare public _settings: ITreeSettings;\n\tdeclare public _privateSettings: ITreePrivate;\n\tdeclare public _dataItemSettings: ITreeDataItem;\n\n\tprotected _tag: string = \"tree\";\n\n\tpublic static className: string = \"Tree\";\n\tpublic static classNames: Array<string> = LinkedHierarchy.classNames.concat([Tree.className]);\n\n\tpublic _hierarchyLayout = d3hierarchy.tree();\n\tdeclare public _rootNode: d3hierarchy.HierarchyCircularNode<ITreeDataObject> | undefined;\n\tpublic _packData: ITreeDataObject | undefined;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"orientation\") || this.isDirty(\"inversed\")) {\n\t\t\tthis._updateVisuals();\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst layout = this._hierarchyLayout;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tlayout.size([this.innerWidth(), this.innerHeight()]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlayout.size([this.innerHeight(), this.innerWidth()]);\n\t\t\t}\n\n\t\t\tlayout(this._rootNode);\n\t\t}\n\n\t\tsuper._updateVisuals();\n\t}\n\n\tprotected _getPoint(hierarchyNode: this[\"_dataItemSettings\"][\"d3HierarchyNode\"]): IPoint {\n\t\tconst inversed = this.get(\"inversed\");\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tif (inversed) {\n\t\t\t\treturn { x: hierarchyNode.x, y: this.innerHeight() - hierarchyNode.y };\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn { x: hierarchyNode.x, y: hierarchyNode.y };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inversed) {\n\t\t\t\treturn { x: this.innerWidth() - hierarchyNode.y, y: hierarchyNode.x };\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn { x: hierarchyNode.y, y: hierarchyNode.x };\n\t\t\t}\n\t\t}\n\t}\n\n}\n", "import type { HierarchyNode } from \"./HierarchyNode\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem, IHierarchyDataObject } from \"./Hierarchy\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3hierarchy from \"d3-hierarchy\";\n\nexport interface ITreemapDataObject { name?: string, value?: number, children?: ITreemapDataObject[], dataItem?: DataItem<ITreemapDataItem> };\n\nexport interface ITreemapDataItem extends IHierarchyDataItem {\n\tchildren: Array<DataItem<ITreemapDataItem>>;\n\tparent: DataItem<ITreemapDataItem>;\n\td3HierarchyNode: d3hierarchy.HierarchyRectangularNode<IHierarchyDataObject>;\n\trectangle: RoundedRectangle;\n}\n\nexport interface ITreemapSettings extends IHierarchySettings {\n\n\t/**\n\t * Gap between nodes. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingInner?: number;\n\n\t/**\n\t * Gap between nodes and outer edge of the chart. In pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingOuter?: number;\n\n\t/**\n\t * Gap between nodes and top edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingTop?: number;\n\n\t/**\n\t * Gap between nodes and bottomedge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingBottom?: number;\n\n\t/**\n\t * Gap between nodes and left edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingLeft?: number;\n\n\t/**\n\t * Gap between nodes and bottom edge.\n\t *\n\t * Will be ignored if `nodePaddingOuter` is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/#Margins}\n\t */\n\tnodePaddingRight?: number;\n\n\t/**\n\t * An algorithm to use when laying out node rectangles.\n\t *\n\t * @see {@link }\n\t * @default \"squarify\"\n\t */\n\tlayoutAlgorithm?: \"binary\" | \"squarify\" | \"slice\" | \"dice\" | \"sliceDice\";\n\n}\n\nexport interface ITreemapPrivate extends IHierarchyPrivate {\n\n\t/**\n\t * Current horizontal scale.\n\t */\n\tscaleX?: number;\n\n\t/**\n\t * Current vertical scale.\n\t */\n\tscaleY?: number;\n\n}\n\n/**\n * Treemap series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/treemap/} for more info\n */\nexport class Treemap extends Hierarchy {\n\n\tdeclare public _settings: ITreemapSettings;\n\tdeclare public _privateSettings: ITreemapPrivate;\n\tdeclare public _dataItemSettings: ITreemapDataItem;\n\n\tprotected _tag: string = \"treemap\";\n\n\tpublic static className: string = \"Treemap\";\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([Treemap.className]);\n\n\tpublic readonly rectangleTemplate: Template<RoundedRectangle> = Template.new({});\n\n\tpublic _treemapLayout = d3hierarchy.treemap().tile(d3hierarchy.treemapSquarify);\n\n\tdeclare public _rootNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject> | undefined;\n\n\t/**\n\t * A list of node rectangle elements in a [[Treemap]] chart.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.rectangles.template.get(\"themeTags\", []), [this._tag, \"shape\"])\n\t\t}, [this.rectangles.template])\n\t);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"scaleX\", 1);\n\t\tthis.setPrivate(\"scaleY\", 1);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"layoutAlgorithm\")) {\n\t\t\tlet algorithm;\n\n\t\t\tswitch (this.get(\"layoutAlgorithm\")) {\n\t\t\t\tcase \"squarify\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSquarify;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"binary\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapBinary;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"slice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSlice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapDice;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"sliceDice\":\n\t\t\t\t\talgorithm = d3hierarchy.treemapSliceDice;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (algorithm) {\n\t\t\t\tthis._treemapLayout = d3hierarchy.treemap().tile(algorithm);\n\t\t\t}\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"nodePaddingRight\") || this.isDirty(\"nodePaddingLeft\") || this.isDirty(\"nodePaddingTop\") || this.isDirty(\"nodePaddingBottom\") || this.isDirty(\"nodePaddingOuter\") || this.isDirty(\"nodePaddingInner\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodes(this._rootNode);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"scaleX\") || this.isPrivateDirty(\"scaleY\")) {\n\t\t\tif (this._rootNode) {\n\t\t\t\tthis._updateNodesScale(this._rootNode);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateVisuals() {\n\t\tif (this._rootNode) {\n\t\t\tconst treemapLayout = this._treemapLayout;\n\t\t\ttreemapLayout.size([this.innerWidth(), this.innerHeight()]);\n\n\t\t\tconst paddingLeft = this.get(\"nodePaddingLeft\");\n\t\t\tconst paddingRight = this.get(\"nodePaddingRight\");\n\t\t\tconst paddingTop = this.get(\"nodePaddingTop\");\n\t\t\tconst paddingBottom = this.get(\"nodePaddingBottom\");\n\t\t\tconst paddingInner = this.get(\"nodePaddingInner\");\n\t\t\tconst paddingOuter = this.get(\"nodePaddingOuter\");\n\t\t\tif ($type.isNumber(paddingLeft)) {\n\t\t\t\ttreemapLayout.paddingLeft(paddingLeft);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingRight)) {\n\t\t\t\ttreemapLayout.paddingRight(paddingRight);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingTop)) {\n\t\t\t\ttreemapLayout.paddingTop(paddingTop);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingBottom)) {\n\t\t\t\ttreemapLayout.paddingBottom(paddingBottom);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingInner)) {\n\t\t\t\ttreemapLayout.paddingInner(paddingInner);\n\t\t\t}\n\t\t\tif ($type.isNumber(paddingOuter)) {\n\t\t\t\ttreemapLayout.paddingOuter(paddingOuter);\n\t\t\t}\n\n\t\t\ttreemapLayout(this._rootNode);\n\t\t\tthis._updateNodes(this._rootNode);\n\t\t}\n\t}\n\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateNode(dataItem);\n\n\t\tconst node = dataItem.get(\"node\");\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\tconst w = x1 - x0;\n\t\tconst h = y1 - y0;\n\n\t\tconst duration = this.get(\"animationDuration\", 0);\n\t\tconst easing = this.get(\"animationEasing\");\n\n\t\tnode.animate({ key: \"x\", to: x0, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"y\", to: y0, duration: duration, easing: easing })\n\n\t\tnode.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\tnode.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\n\t\tif (rectangle) {\n\t\t\tconst fill = dataItem.get(\"fill\");\n\n\t\t\trectangle.animate({ key: \"width\", to: w, duration: duration, easing: easing })\n\t\t\trectangle.animate({ key: \"height\", to: h, duration: duration, easing: easing })\n\t\t\trectangle._setDefault(\"fill\", fill);\n\t\t\trectangle._setDefault(\"stroke\", fill);\n\t\t}\n\t}\n\n\n\tprotected _updateNodesScale(hierarchyNode: d3hierarchy.HierarchyRectangularNode<ITreemapDataObject>) {\n\t\tconst dataItem = hierarchyNode.data.dataItem;\n\t\tif (dataItem) {\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\n\t\t\tconst scaleX = this.getPrivate(\"scaleX\", 1);\n\t\t\tconst scaleY = this.getPrivate(\"scaleY\", 1);\n\n\t\t\tconst x0 = hierarchyNode.x0 * scaleX;\n\t\t\tconst x1 = hierarchyNode.x1 * scaleX;\n\t\t\tconst y0 = hierarchyNode.y0 * scaleY;\n\t\t\tconst y1 = hierarchyNode.y1 * scaleY;\n\n\t\t\tconst w = x1 - x0;\n\t\t\tconst h = y1 - y0;\n\n\t\t\tnode.setAll({ x: x0, y: y0, width: w, height: h });\n\t\t\trectangle.setAll({ width: w, height: h });\n\n\t\t\tconst hierarchyChildren = hierarchyNode.children;\n\t\t\tif (hierarchyChildren) {\n\t\t\t\t$array.each(hierarchyChildren, (hierarchyChild) => {\n\t\t\t\t\tthis._updateNodesScale(hierarchyChild)\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\n\t\tconst node = super.makeNode(dataItem);\n\n\t\tconst rectangle = node.children.moveValue(this.rectangles.make(), 0);\n\n\t\tnode.setPrivate(\"tooltipTarget\", rectangle);\n\t\tdataItem.setRaw(\"rectangle\", rectangle);\n\n\t\tconst label = dataItem.get(\"label\");\n\n\t\trectangle.on(\"width\", () => {\n\t\t\tlabel.setPrivate(\"maxWidth\", rectangle.width());\n\t\t})\n\n\t\trectangle.on(\"height\", () => {\n\t\t\tlabel.setPrivate(\"maxHeight\", rectangle.height());\n\t\t})\n\n\t\treturn node;\n\t}\n\n\tpublic _zoom(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif (this.width() > 0 && this.height() > 0) {\n\t\t\tconst hierarchyNode = dataItem.get(\"d3HierarchyNode\");\n\n\t\t\tconst nodePaddingOuter = this.get(\"nodePaddingOuter\", 0);\n\n\t\t\tlet x0 = hierarchyNode.x0 + nodePaddingOuter;\n\t\t\tlet x1 = hierarchyNode.x1 - nodePaddingOuter;\n\n\t\t\tlet y0 = hierarchyNode.y0 + nodePaddingOuter;\n\t\t\tlet y1 = hierarchyNode.y1 - nodePaddingOuter;\n\n\t\t\tlet scaleX = (this.innerWidth() - nodePaddingOuter * 2) / (x1 - x0);\n\t\t\tlet scaleY = (this.innerHeight() - nodePaddingOuter * 2) / (y1 - y0);\n\n\t\t\tconst easing = this.get(\"animationEasing\");\n\t\t\tlet duration = this.get(\"animationDuration\", 0);\n\n\t\t\tif (!this.inited) {\n\t\t\t\tduration = 0;\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\tthis.animatePrivate({ key: \"scaleX\", to: scaleX, duration: duration, easing: easing });\n\t\t\tthis.animatePrivate({ key: \"scaleY\", to: scaleY, duration: duration, easing: easing });\n\n\t\t\tthis.nodesContainer.animate({ key: \"x\", to: nodePaddingOuter - x0 * scaleX, duration: duration, easing: easing });\n\t\t\tthis.nodesContainer.animate({ key: \"y\", to: nodePaddingOuter - y0 * scaleY, duration: duration, easing: easing });\n\t\t}\n\t}\n\n\tprotected _selectDataItem(dataItem?: DataItem<this[\"_dataItemSettings\"]>, downDepth?: number, skipDisptach?: boolean) {\n\t\tsuper._selectDataItem(dataItem, downDepth, skipDisptach);\n\n\t\tif (dataItem) {\n\t\t\tlet maxDepth = this.get(\"downDepth\", 1) + dataItem.get(\"depth\");\n\t\t\tif (!this.inited) {\n\t\t\t\tmaxDepth = this.get(\"initialDepth\", 1);\n\t\t\t}\n\t\t\tconst visibleNodes = this._getVisibleNodes(dataItem, maxDepth);\n\t\t\tthis.nodes.each((node) => {\n\t\t\t\tif (visibleNodes.indexOf(node.dataItem as DataItem<this[\"_dataItemSettings\"]>) == -1) {\n\t\t\t\t\tnode.setPrivate(\"focusable\", false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnode.removePrivate(\"focusable\");\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._root._invalidateTabindexes();\n\t}\n\n\tprotected _getVisibleNodes(dataItem: DataItem<this[\"_dataItemSettings\"]>, maxDepth: number) {\n\t\tconst children = dataItem.get(\"children\");\n\t\tlet includedChildren: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\t\t$array.each(children, (child) => {\n\t\t\tif (child.get(\"depth\") == maxDepth || !child.get(\"children\")) {\n\t\t\t\tincludedChildren.push(child);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tincludedChildren = includedChildren.concat(this._getVisibleNodes(child, maxDepth));\n\t\t\t}\n\t\t});\n\t\treturn includedChildren;\n\t}\n\n}\n", "export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n", "export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n", "export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n", "var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n", "var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n", "export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n", "import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n", "export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n", "import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n", "export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n", "var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n", "var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n", "export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n", "// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n", "import cross from \"./cross.js\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  const n = points.length,\n      indexes = [0, 1];\n  let size = 2, i;\n\n  for (i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n", "export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.hypot(xa, ya);\n  }\n\n  return perimeter;\n}\n", "export var epsilon = 1e-10;\n\nexport function epsilonesque(n) {\n  return n <= epsilon && n >= -epsilon;\n}\n\n// IN: vectors or vertices\n// OUT: dot product\nexport function dot(v0, v1) {\n  return v0.x * v1.x + v0.y * v1.y + v0.z * v1.z;\n}\n\n// IN: two vertex objects, v0 and v1\n// OUT: true if they are linearly dependent, false otherwise\n// from https://math.stackexchange.com/questions/1144357/how-can-i-prove-that-two-vectors-in-%E2%84%9D3-are-linearly-independent-iff-their-cro\nexport function linearDependent(v0, v1) {\n  return (\n    epsilonesque(v0.x * v1.y - v0.y * v1.x) &&\n    epsilonesque(v0.y * v1.z - v0.z * v1.y) &&\n    epsilonesque(v0.z * v1.x - v0.x * v1.z)\n  );\n}\n\n// IN: an array of 2D-points [x,y]\n// OUT: true if the set defines a convex polygon (non-intersecting, hole-free, non-concave)\n// from https://gist.github.com/annatomka/82715127b74473859054, adapted to [x,y] syntax (instead of {x: ..., y: ...}) and optimizations\nexport function polygonDirection(polygon) {\n  var sign, crossproduct, p0, p1, p2, v0, v1, i;\n\n  //begin: initialization\n  p0 = polygon[polygon.length - 2];\n  p1 = polygon[polygon.length - 1];\n  p2 = polygon[0];\n  v0 = vect(p0, p1);\n  v1 = vect(p1, p2);\n  crossproduct = calculateCrossproduct(v0, v1);\n  // console.log(`[[${p0}], [${p1}], [${p2}]] => (${v0}) x (${v1}) = ${crossproduct}`);\n  sign = Math.sign(crossproduct);\n  //end: initialization\n\n  p0 = p1; // p0 = polygon[polygon.length - 1];\n  p1 = p2; // p1 = polygon[0];\n  p2 = polygon[1];\n  v0 = v1;\n  v1 = vect(p1, p2);\n  crossproduct = calculateCrossproduct(v0, v1);\n  // console.log(`[[${p0}], [${p1}], [${p2}]] => (${v0}) x (${v1}) = ${crossproduct}`);\n  if (Math.sign(crossproduct) !== sign) {\n    return undefined;\n  } //different signs in cross products means concave polygon\n\n  //iterate on remaining 3 consecutive points\n  for (i = 2; i < polygon.length - 1; i++) {\n    p0 = p1;\n    p1 = p2;\n    p2 = polygon[i];\n    v0 = v1;\n    v1 = vect(p1, p2);\n    crossproduct = calculateCrossproduct(v0, v1);\n    // console.log(`[[${p0}], [${p1}], [${p2}]] => (${v0}) x (${v1}) = ${crossproduct}`);\n    if (Math.sign(crossproduct) !== sign) {\n      return undefined;\n    } //different signs in cross products means concave polygon\n  }\n\n  return sign;\n}\n\nfunction vect(from, to) {\n  return [to[0] - from[0], to[1] - from[1]];\n}\n\nfunction calculateCrossproduct(v0, v1) {\n  return v0[0] * v1[1] - v0[1] * v1[0];\n}\n", "// ConflictList and ConflictListNode\n\nexport function ConflictListNode (face, vert) {\n  this.face = face;\n  this.vert = vert;\n  this.nextf = null;\n  this.prevf = null;\n  this.nextv = null;\n  this.prevv = null;\n}\n\n// IN: boolean forFace\nexport function ConflictList (forFace) {\n  this.forFace = forFace;\n  this.head = null;\n}\n\n// IN: ConflictListNode cln\nConflictList.prototype.add = function(cln) {\n  if (this.head === null) {\n    this.head = cln;\n  } else {\n    if (this.forFace) {  // Is FaceList\n      this.head.prevv = cln;\n      cln.nextv = this.head;\n      this.head = cln;\n    } else {  // Is VertexList\n      this.head.prevf = cln;\n      cln.nextf = this.head;\n      this.head = cln;\n    }\n  }\n}\n\nConflictList.prototype.isEmpty = function() {\n  return this.head === null;\n}\n\n// Array of faces visible\nConflictList.prototype.fill = function(visible) {\n  if (this.forFace) {\n    return;\n  }\n  var curr = this.head;\n  do {\n    visible.push(curr.face);\n    curr.face.marked = true;\n    curr = curr.nextf;\n  } while (curr !== null);\n}\n\nConflictList.prototype.removeAll = function() {\n  if (this.forFace) {  // Remove all vertices from Face\n    var curr = this.head;\n    do {\n      if (curr.prevf === null) {  // Node is head\n        if (curr.nextf === null) {\n          curr.vert.conflicts.head = null;\n        } else {\n          curr.nextf.prevf = null;\n          curr.vert.conflicts.head = curr.nextf;\n        }\n      } else {  // Node is not head\n        if (curr.nextf != null) {\n          curr.nextf.prevf = curr.prevf;\n        }\n        curr.prevf.nextf = curr.nextf;\n      }\n      curr = curr.nextv;\n      if (curr != null) {\n        curr.prevv = null;\n      }\n    } while (curr != null);\n  } else {  // Remove all JFaces from vertex\n    var curr = this.head;\n    do {\n      if (curr.prevv == null) {  // Node is head\n        if (curr.nextv == null) {\n          curr.face.conflicts.head = null;\n        } else {\n          curr.nextv.prevv = null;\n          curr.face.conflicts.head = curr.nextv;\n        }\n      } else {  // Node is not head\n        if (curr.nextv != null) {\n          curr.nextv.prevv = curr.prevv;\n        }\n        curr.prevv.nextv = curr.nextv;\n      }\n      curr = curr.nextf;\n      if (curr != null)\n        curr.prevf = null;\n    } while (curr != null);\n  }\n}\n\n// IN: list of vertices\nConflictList.prototype.getVertices = function() {\n  var list = [],\n  \t\tcurr = this.head;\n  while (curr !== null) {\n    list.push(curr.vert);\n    curr = curr.nextv;\n  }\n  return list;\n}", "// Vertex\nimport {epsilon} from './utils';\nimport {ConflictList} from './conflictList';\n\n// IN: coordinates x, y, z\nexport function Vertex (x, y, z, weight, orig, isDummy) {\n  this.x = x;\n  this.y = y;\n  this.weight = epsilon;\n  this.index = 0;\n  this.conflicts = new ConflictList(false);\n  this.neighbours = null;  // Potential trouble\n  this.nonClippedPolygon = null;\n  this.polygon = null;\n  this.originalObject = null;\n  this.isDummy = false;\n\n  if (orig !== undefined) {\n    this.originalObject = orig;\n  }\n  if (isDummy != undefined) {\n    this.isDummy = isDummy;\n  }\n  if (weight != null) {\n    this.weight = weight;\n  }\n  if (z != null) {\n    this.z = z;\n  } else {\n    this.z = this.projectZ(this.x, this.y, this.weight);\n  }\n}\n\nVertex.prototype.projectZ = function(x, y, weight) {\n  return ((x*x) + (y*y) - weight);\n}\n\nVertex.prototype.setWeight = function(weight) {\n  this.weight = weight;\n  this.z = this.projectZ(this.x, this.y, this.weight);\n}\n\nVertex.prototype.subtract = function(v) {\n  return new Vertex(v.x - this.x, v.y - this.y, v.z - this.z);\n}\n\nVertex.prototype.crossproduct = function(v) {\n  return new Vertex((this.y * v.z) - (this.z * v.y), (this.z * v.x) - (this.x * v.z), (this.x * v.y) - (this.y * v.x));\n}\n\nVertex.prototype.equals = function(v) {\n  return (this.x === v.x && this.y === v.y && this.z === v.z);\n}", "// Plane3D and Point2D\n\n// IN: Face face\nexport function Plane3D (face) {\n  var p1 = face.verts[0];\n  var p2 = face.verts[1];\n  var p3 = face.verts[2];\n  this.a = p1.y * (p2.z-p3.z) + p2.y * (p3.z-p1.z) + p3.y * (p1.z-p2.z);\n  this.b = p1.z * (p2.x-p3.x) + p2.z * (p3.x-p1.x) + p3.z * (p1.x-p2.x);\n  this.c = p1.x * (p2.y-p3.y) + p2.x * (p3.y-p1.y) + p3.x * (p1.y-p2.y);\n  this.d = -1 * (p1.x * (p2.y*p3.z - p3.y*p2.z) + p2.x * (p3.y*p1.z - p1.y*p3.z) + p3.x * (p1.y*p2.z - p2.y*p1.z));\t\n}\n\nPlane3D.prototype.getNormZPlane = function() {\n  return [\n    -1 * (this.a / this.c),\n    -1 * (this.b / this.c),\n    -1 * (this.d / this.c)\n  ];\n}\n\n// OUT: point2D\nPlane3D.prototype.getDualPointMappedToPlane = function() {\n  var nplane = this.getNormZPlane();\n  var dualPoint = new Point2D(nplane[0]/2, nplane[1]/2);\n  return dualPoint;\n}\n\n// IN: doubles x and y\nexport function Point2D (x, y) {\n  this.x = x;\n  this.y = y;\n}", "// Vector\n\n// IN: coordinates x, y, z\nexport function Vector (x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n}\n\nVector.prototype.negate = function() {\n  this.x *= -1;\n  this.y *= -1;\n  this.z *= -1;\n}\n\n// Normalizes X Y and Z in-place\nVector.prototype.normalize = function() {\n  var lenght = Math.sqrt((this.x * this.x) + (this.y * this.y) + (this.z * this.z));\n  if (lenght > 0) {\n    this.x /= lenght;\n    this.y /= lenght;\n    this.z /= lenght;\n  }\n}", "// HEdge\n\n// IN: vertex orig, vertex dest, Face face\nexport function HEdge (orig, dest, face) {\n  this.next = null;\n  this.prev = null;\n  this.twin = null;\n  this.orig = orig;\n  this.dest = dest;\n  this.iFace = face;\n}\n\nHEdge.prototype.isHorizon = function() {\n  return this.twin !== null && !this.iFace.marked && this.twin.iFace.marked;\n}\n\n// IN: array horizon\nHEdge.prototype.findHorizon = function(horizon) {\n  if (this.isHorizon()) {\n    if (horizon.length > 0 && this === horizon[0]) {\n      return;\n    } else {\n      horizon.push(this);\n      this.next.findHorizon(horizon);\n    }\n  } else {\n    if (this.twin !== null) {\n      this.twin.next.findHorizon(horizon);\n    }\n  }\n}\n\n// IN: vertices origin and dest\nHEdge.prototype.isEqual = function(origin, dest) {\n  return ((this.orig.equals(origin) && this.dest.equals(dest)) || (this.orig.equals(dest) && this.dest.equals(origin)));\n}", "// from https://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript\n// (above link provided by https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error)\n\nexport default function d3WeightedVoronoiError(message) {\n  this.message = message;\n  this.stack = new Error().stack;\n}\n\nd3WeightedVoronoiError.prototype.name = 'd3WeightedVoronoiError';\nd3WeightedVoronoiError.prototype = new Error();\n", "// Face\n\nimport { epsilon, dot } from './utils';\nimport { Plane3D } from './plane3D';\nimport { ConflictList } from './conflictList';\nimport { Vector } from './vector';\nimport { HEdge } from './hEdge';\nimport d3WeightedVoronoiError from './d3-weighted-voronoi-error';\n\n// IN: Vertices a, b, c\nexport function Face(a, b, c, orient) {\n  this.conflicts = new ConflictList(true);\n  this.verts = [a, b, c];\n  this.marked = false;\n  var t = a.subtract(b).crossproduct(b.subtract(c));\n\n  this.normal = new Vector(-t.x, -t.y, -t.z);\n  this.normal.normalize();\n  this.createEdges();\n  this.dualPoint = null;\n\n  if (orient != undefined) {\n    this.orient(orient);\n  }\n}\n\n// OUT: Point2D\nFace.prototype.getDualPoint = function () {\n  if (this.dualPoint == null) {\n    var plane3d = new Plane3D(this);\n    this.dualPoint = plane3d.getDualPointMappedToPlane();\n  }\n  return this.dualPoint;\n};\n\nFace.prototype.isVisibleFromBelow = function () {\n  return this.normal.z < -1.4259414393190911e-9;\n};\n\nFace.prototype.createEdges = function () {\n  this.edges = [];\n  this.edges[0] = new HEdge(this.verts[0], this.verts[1], this);\n  this.edges[1] = new HEdge(this.verts[1], this.verts[2], this);\n  this.edges[2] = new HEdge(this.verts[2], this.verts[0], this);\n  this.edges[0].next = this.edges[1];\n  this.edges[0].prev = this.edges[2];\n  this.edges[1].next = this.edges[2];\n  this.edges[1].prev = this.edges[0];\n  this.edges[2].next = this.edges[0];\n  this.edges[2].prev = this.edges[1];\n};\n\n// IN: vertex orient\nFace.prototype.orient = function (orient) {\n  if (!(dot(this.normal, orient) < dot(this.normal, this.verts[0]))) {\n    var temp = this.verts[1];\n    this.verts[1] = this.verts[2];\n    this.verts[2] = temp;\n    this.normal.negate();\n    this.createEdges();\n  }\n};\n\n// IN: two vertices v0 and v1\nFace.prototype.getEdge = function (v0, v1) {\n  for (var i = 0; i < 3; i++) {\n    if (this.edges[i].isEqual(v0, v1)) {\n      return this.edges[i];\n    }\n  }\n  return null;\n};\n\n// IN: Face face, vertices v0 and v1\nFace.prototype.link = function (face, v0, v1) {\n  if (face instanceof Face) {\n    var twin = face.getEdge(v0, v1);\n    if (twin === null) {\n      throw new d3WeightedVoronoiError('when linking, twin is null');\n    }\n    var edge = this.getEdge(v0, v1);\n    if (edge === null) {\n      throw new d3WeightedVoronoiError('when linking, twin is null');\n    }\n    twin.twin = edge;\n    edge.twin = twin;\n  } else {\n    var twin = face; // face is a hEdge\n    var edge = this.getEdge(twin.orig, twin.dest);\n    twin.twin = edge;\n    edge.twin = twin;\n  }\n};\n\n// IN: vertex v\nFace.prototype.conflict = function (v) {\n  return dot(this.normal, v) > dot(this.normal, this.verts[0]) + epsilon;\n};\n\nFace.prototype.getHorizon = function () {\n  for (var i = 0; i < 3; i++) {\n    if (this.edges[i].twin !== null && this.edges[i].twin.isHorizon()) {\n      return this.edges[i];\n    }\n  }\n  return null;\n};\n\nFace.prototype.removeConflict = function () {\n  this.conflicts.removeAll();\n};\n", "// convexHull.js\nimport { epsilonesque, dot, linearDependent } from './utils';\nimport { ConflictList, ConflictListNode } from './conflictList';\nimport { Vertex } from './vertex';\nimport { Face } from './face';\nimport d3WeightedVoronoiError from './d3-weighted-voronoi-error';\n\nexport function ConvexHull() {\n  this.points = [];\n  this.facets = [];\n  this.created = [];\n  this.horizon = [];\n  this.visible = [];\n  this.current = 0;\n}\n\n// IN: sites (x,y,z)\nConvexHull.prototype.init = function (boundingSites, sites) {\n  this.points = [];\n  for (var i = 0; i < sites.length; i++) {\n    this.points[i] = new Vertex(sites[i].x, sites[i].y, sites[i].z, null, sites[i], false);\n  }\n  this.points = this.points.concat(boundingSites);\n};\n\nConvexHull.prototype.permutate = function () {\n  var pointSize = this.points.length;\n  for (var i = pointSize - 1; i > 0; i--) {\n    var ra = Math.floor(Math.random() * i);\n    var temp = this.points[ra];\n    temp.index = i;\n    var currentItem = this.points[i];\n    currentItem.index = ra;\n    this.points.splice(ra, 1, currentItem);\n    this.points.splice(i, 1, temp);\n  }\n};\n\n(ConvexHull.prototype.prep = function () {\n  if (this.points.length <= 3) {\n    throw new d3WeightedVoronoiError('Less than 4 points');\n  }\n  for (var i = 0; i < this.points.length; i++) {\n    this.points[i].index = i;\n  }\n\n  var v0, v1, v2, v3;\n  var f1, f2, f3, f0;\n  v0 = this.points[0];\n  v1 = this.points[1];\n  v2 = v3 = null;\n\n  // Searching for a third vertex, not aligned with the 2 firsts\n  for (var i = 2; i < this.points.length; i++) {\n    if (!(linearDependent(v0, this.points[i]) && linearDependent(v1, this.points[i]))) {\n      v2 = this.points[i];\n      v2.index = 2;\n      this.points[2].index = i;\n      this.points.splice(i, 1, this.points[2]);\n      this.points.splice(2, 1, v2);\n      break;\n    }\n  }\n  if (v2 === null) {\n    throw new d3WeightedVoronoiError('Not enough non-planar Points (v2 is null)');\n  }\n\n  // Create first JFace\n  f0 = new Face(v0, v1, v2);\n  // Searching for a fourth vertex, not coplanar to the 3 firsts\n  for (var i = 3; i < this.points.length; i++) {\n    if (!epsilonesque(dot(f0.normal, f0.verts[0]) - dot(f0.normal, this.points[i]))) {\n      v3 = this.points[i];\n      v3.index = 3;\n      this.points[3].index = i;\n      this.points.splice(i, 1, this.points[3]);\n      this.points.splice(3, 1, v3);\n      break;\n    }\n  }\n  if (v3 === null) {\n    throw new d3WeightedVoronoiError('Not enough non-planar Points (v3 is null)');\n  }\n\n  f0.orient(v3);\n  f1 = new Face(v0, v2, v3, v1);\n  f2 = new Face(v0, v1, v3, v2);\n  f3 = new Face(v1, v2, v3, v0);\n  this.addFacet(f0);\n  this.addFacet(f1);\n  this.addFacet(f2);\n  this.addFacet(f3);\n  // Connect facets\n  f0.link(f1, v0, v2);\n  f0.link(f2, v0, v1);\n  f0.link(f3, v1, v2);\n  f1.link(f2, v0, v3);\n  f1.link(f3, v2, v3);\n  f2.link(f3, v3, v1);\n  this.current = 4;\n\n  var v;\n  for (var i = this.current; i < this.points.length; i++) {\n    v = this.points[i];\n    if (f0.conflict(v)) {\n      this.addConflict(f0, v);\n    }\n    if (f1.conflict(v)) {\n      this.addConflict(f1, v);\n    }\n    if (f2.conflict(v)) {\n      this.addConflict(f2, v);\n    }\n    if (f3.conflict(v)) {\n      this.addConflict(f3, v);\n    }\n  }\n}),\n  // IN: Faces old1 old2 and fn\n  (ConvexHull.prototype.addConflicts = function (old1, old2, fn) {\n    var l1 = old1.conflicts.getVertices();\n    var l2 = old2.conflicts.getVertices();\n    var nCL = [];\n    var v1, v2;\n    var i, l;\n    i = l = 0;\n    // Fill the possible new Conflict List\n    while (i < l1.length || l < l2.length) {\n      if (i < l1.length && l < l2.length) {\n        v1 = l1[i];\n        v2 = l2[l];\n        // If the index is the same, it's the same vertex and only 1 has to be added\n        if (v1.index === v2.index) {\n          nCL.push(v1);\n          i++;\n          l++;\n        } else if (v1.index > v2.index) {\n          nCL.push(v1);\n          i++;\n        } else {\n          nCL.push(v2);\n          l++;\n        }\n      } else if (i < l1.length) {\n        nCL.push(l1[i++]);\n      } else {\n        nCL.push(l2[l++]);\n      }\n    }\n    // Check if the possible conflicts are real conflicts\n    for (var i = nCL.length - 1; i >= 0; i--) {\n      v1 = nCL[i];\n      if (fn.conflict(v1)) this.addConflict(fn, v1);\n    }\n  });\n\n// IN: Face face, Vertex v\nConvexHull.prototype.addConflict = function (face, vert) {\n  var e = new ConflictListNode(face, vert);\n  face.conflicts.add(e);\n  vert.conflicts.add(e);\n};\n\n// IN: Face f\nConvexHull.prototype.removeConflict = function (f) {\n  f.removeConflict();\n  var index = f.index;\n  f.index = -1;\n  if (index === this.facets.length - 1) {\n    this.facets.splice(this.facets.length - 1, 1);\n    return;\n  }\n  if (index >= this.facets.length || index < 0) return;\n  var last = this.facets.splice(this.facets.length - 1, 1);\n  last[0].index = index;\n  this.facets.splice(index, 1, last[0]);\n};\n\n// IN: Face face\nConvexHull.prototype.addFacet = function (face) {\n  face.index = this.facets.length;\n  this.facets.push(face);\n};\n\nConvexHull.prototype.compute = function () {\n  this.prep();\n  while (this.current < this.points.length) {\n    var next = this.points[this.current];\n    if (next.conflicts.isEmpty()) {\n      // No conflict, point in hull\n      this.current++;\n      continue;\n    }\n    this.created = []; // TODO: make sure this is okay and doesn't dangle references\n    this.horizon = [];\n    this.visible = [];\n    // The visible faces are also marked\n    next.conflicts.fill(this.visible);\n    // Horizon edges are orderly added to the horizon list\n    var e;\n    for (var jF = 0; jF < this.visible.length; jF++) {\n      e = this.visible[jF].getHorizon();\n      if (e !== null) {\n        e.findHorizon(this.horizon);\n        break;\n      }\n    }\n    var last = null,\n      first = null;\n    // Iterate over horizon edges and create new faces oriented with the marked face 3rd unused point\n    for (var hEi = 0; hEi < this.horizon.length; hEi++) {\n      var hE = this.horizon[hEi];\n      var fn = new Face(next, hE.orig, hE.dest, hE.twin.next.dest);\n      fn.conflicts = new ConflictList(true);\n      // Add to facet list\n      this.addFacet(fn);\n      this.created.push(fn);\n      // Add new conflicts\n      this.addConflicts(hE.iFace, hE.twin.iFace, fn);\n      // Link the new face with the horizon edge\n      fn.link(hE);\n      if (last !== null) fn.link(last, next, hE.orig);\n      last = fn;\n      if (first === null) first = fn;\n    }\n    // Links the first and the last created JFace\n    if (first !== null && last !== null) {\n      last.link(first, next, this.horizon[0].orig);\n    }\n    if (this.created.length != 0) {\n      // update conflict graph\n      for (var f = 0; f < this.visible.length; f++) {\n        this.removeConflict(this.visible[f]);\n      }\n      this.current++;\n      this.created = [];\n    }\n  }\n  return this.facets;\n};\n\nConvexHull.prototype.clear = function () {\n  this.points = [];\n  this.facets = [];\n  this.created = [];\n  this.horizon = [];\n  this.visible = [];\n  this.current = 0;\n};\n", "export function polygonClip(clip, subject) {\n  // Version 0.0.0. Copyright 2017 Mike Bostock.\n\n  // Clips the specified subject polygon to the specified clip polygon;\n  // requires the clip polygon to be counterclockwise and convex.\n  // https://en.wikipedia.org/wiki/Sutherland–Hodgman_algorithm\n  // https://observablehq.com/@d3/polygonclip\n\n  var input,\n    closed = polygonClosed(subject),\n    i = -1,\n    n = clip.length - polygonClosed(clip),\n    j,\n    m,\n    a = clip[n - 1],\n    b,\n    c,\n    d,\n    intersection;\n\n  while (++i < n) {\n    input = subject.slice();\n    subject.length = 0;\n    b = clip[i];\n    c = input[(m = input.length - closed) - 1];\n    j = -1;\n    while (++j < m) {\n      d = input[j];\n      if (polygonInside(d, a, b)) {\n        if (!polygonInside(c, a, b)) {\n          intersection = polygonIntersect(c, d, a, b);\n          if (isFinite(intersection[0])) {\n            subject.push(intersection);\n          }\n        }\n        subject.push(d);\n      } else if (polygonInside(c, a, b)) {\n        intersection = polygonIntersect(c, d, a, b);\n        if (isFinite(intersection[0])) {\n          subject.push(intersection);\n        }\n      }\n      c = d;\n    }\n    if (closed) subject.push(subject[0]);\n    a = b;\n  }\n\n  return subject;\n}\n\nfunction polygonInside(p, a, b) {\n  return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n}\n\n// Intersect two infinite lines cd and ab.\n// Return Infinity if cd and ab colinear\nfunction polygonIntersect(c, d, a, b) {\n  var x1 = c[0],\n    x3 = a[0],\n    x21 = d[0] - x1,\n    x43 = b[0] - x3,\n    y1 = c[1],\n    y3 = a[1],\n    y21 = d[1] - y1,\n    y43 = b[1] - y3,\n    ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n  return [x1 + ua * x21, y1 + ua * y21];\n}\n\n// Returns true if the polygon is closed.\nfunction polygonClosed(coordinates) {\n  var a = coordinates[0],\n    b = coordinates[coordinates.length - 1];\n  return !(a[0] - b[0] || a[1] - b[1]);\n}\n", "// powerDiagram.js - computePowerDiagramIntegrated() and subroutines\nimport {polygonLength} from 'd3-polygon';\nimport {epsilon} from './utils';\nimport {Vertex} from './vertex';\nimport {ConvexHull} from './convexHull';\nimport {polygonClip} from './d3-polygon-clip';\n\n// IN: HEdge edge\nfunction getFacesOfDestVertex(edge) {\n  var faces = [];\n  var previous = edge;\n  var first = edge.dest;\n  var site = first.originalObject;\n  var neighbours = [];\n  do {\n    previous = previous.twin.prev;\n    var siteOrigin = previous.orig.originalObject;\n    if (!siteOrigin.isDummy) {\n      neighbours.push(siteOrigin);\n    }\n    var iFace = previous.iFace;\n    if (iFace.isVisibleFromBelow()) {\n      faces.push(iFace);\n    }\n  } while (previous !== edge);\n  site.neighbours = neighbours;\n  return faces;\n}\n\n// IN: Omega = convex bounding polygon\n// IN: S = unique set of sites with weights\n// OUT: Set of lines making up the voronoi power diagram\nexport function computePowerDiagramIntegrated (sites, boundingSites, clippingPolygon) {\n  var convexHull = new ConvexHull();\n  convexHull.clear();\n  convexHull.init(boundingSites, sites);\n\n  var facets = convexHull.compute(sites);\n  var polygons = []; \n  var verticesVisited = [];\n  var facetCount = facets.length;\n\n  for (var i = 0; i < facetCount; i++) {\n    var facet = facets[i];\n    if (facet.isVisibleFromBelow()) {\n      for (var e = 0; e < 3; e++) {\n        // go through the edges and start to build the polygon by going through the double connected edge list\n        var edge = facet.edges[e];\n        var destVertex = edge.dest;\n        var site = destVertex.originalObject; \n\n        if (!verticesVisited[destVertex.index]) {\n          verticesVisited[destVertex.index] = true;\n          if (site.isDummy) {\n            // Check if this is one of the sites making the bounding polygon\n            continue;\n          }\n          // faces around the vertices which correspond to the polygon corner points\n          var faces = getFacesOfDestVertex(edge);\n          var protopoly = [];\n          var lastX = null;\n          var lastY = null;\n          var dx = 1;\n          var dy = 1;\n          for (var j = 0; j < faces.length; j++) {\n            var point = faces[j].getDualPoint();\n            var x1 = point.x;\n            var y1 = point.y;\n            if (lastX !== null) {\n              dx = lastX - x1;\n              dy = lastY - y1;\n              if (dx < 0) {\n                dx = -dx;\n              }\n              if (dy < 0) {\n                dy = -dy;\n              }\n            }\n            if (dx > epsilon || dy > epsilon) {\n              protopoly.push([x1, y1]);\n              lastX = x1;\n              lastY = y1;\n            }\n          }\n          \n          site.nonClippedPolygon = protopoly.reverse();\n          if (!site.isDummy && polygonLength(site.nonClippedPolygon) > 0) {\n            var clippedPoly = polygonClip(clippingPolygon, site.nonClippedPolygon);\n            site.polygon = clippedPoly;\n            clippedPoly.site = site;\n            if (clippedPoly.length > 0) {\n              polygons.push(clippedPoly);\n            }\n          }\n        }\n      }\n    }\n  }\n  return polygons;\n}\n", "import { extent as d3Extent } from 'd3-array';\nimport { polygonHull as d3PolygonHull } from 'd3-polygon';\nimport { epsilon, polygonDirection } from './utils';\nimport { Vertex } from './vertex';\nimport { computePowerDiagramIntegrated } from './powerDiagram';\n\nexport function weightedVoronoi() {\n  /////// Inputs ///////\n  var x = function (d) {\n    return d.x;\n  }; // accessor to the x value\n  var y = function (d) {\n    return d.y;\n  }; // accessor to the y value\n  var weight = function (d) {\n    return d.weight;\n  }; // accessor to the weight\n  var clip = [\n    [0, 0],\n    [0, 1],\n    [1, 1],\n    [1, 0],\n  ]; // clipping polygon\n  var extent = [\n    [0, 0],\n    [1, 1],\n  ]; // extent of the clipping polygon\n  var size = [1, 1]; // [width, height] of the clipping polygon\n\n  ///////////////////////\n  ///////// API /////////\n  ///////////////////////\n\n  function _weightedVoronoi(data) {\n    var formatedSites;\n\n    //begin: map sites to the expected format of PowerDiagram\n    formatedSites = data.map(function (d) {\n      return new Vertex(x(d), y(d), null, weight(d), d, false);\n    });\n    //end: map sites to the expected format of PowerDiagram\n\n    return computePowerDiagramIntegrated(formatedSites, boundingSites(), clip);\n  }\n\n  _weightedVoronoi.x = function (_) {\n    if (!arguments.length) {\n      return x;\n    }\n\n    x = _;\n    return _weightedVoronoi;\n  };\n\n  _weightedVoronoi.y = function (_) {\n    if (!arguments.length) {\n      return y;\n    }\n\n    y = _;\n    return _weightedVoronoi;\n  };\n\n  _weightedVoronoi.weight = function (_) {\n    if (!arguments.length) {\n      return weight;\n    }\n\n    weight = _;\n    return _weightedVoronoi;\n  };\n\n  _weightedVoronoi.clip = function (_) {\n    var direction, xExtent, yExtent;\n\n    if (!arguments.length) {\n      return clip;\n    }\n\n    xExtent = d3Extent(\n      _.map(function (c) {\n        return c[0];\n      })\n    );\n    yExtent = d3Extent(\n      _.map(function (c) {\n        return c[1];\n      })\n    );\n    direction = polygonDirection(_);\n    if (direction === undefined) {\n      clip = d3PolygonHull(_); // ensure clip to be a convex, hole-free, counterclockwise polygon\n    } else if (direction === 1) {\n      clip = _.reverse(); // already convex, order array in the same direction as d3-polygon.polygonHull(...)\n    } else {\n      clip = _;\n    }\n    extent = [\n      [xExtent[0], yExtent[0]],\n      [xExtent[1], yExtent[1]],\n    ];\n    size = [xExtent[1] - xExtent[0], yExtent[1] - yExtent[0]];\n    return _weightedVoronoi;\n  };\n\n  _weightedVoronoi.extent = function (_) {\n    if (!arguments.length) {\n      return extent;\n    }\n\n    clip = [_[0], [_[0][0], _[1][1]], _[1], [_[1][0], _[0][1]]];\n    extent = _;\n    size = [_[1][0] - _[0][0], _[1][1] - _[0][1]];\n    return _weightedVoronoi;\n  };\n\n  _weightedVoronoi.size = function (_) {\n    if (!arguments.length) {\n      return size;\n    }\n\n    clip = [\n      [0, 0],\n      [0, _[1]],\n      [_[0], _[1]],\n      [_[0], 0],\n    ];\n    extent = [[0, 0], _];\n    size = _;\n    return _weightedVoronoi;\n  };\n\n  ///////////////////////\n  /////// Private ///////\n  ///////////////////////\n\n  function boundingSites() {\n    var minX,\n      maxX,\n      minY,\n      maxY,\n      width,\n      height,\n      x0,\n      x1,\n      y0,\n      y1,\n      boundingData = [],\n      boundingSites = [];\n\n    minX = extent[0][0];\n    maxX = extent[1][0];\n    minY = extent[0][1];\n    maxY = extent[1][1];\n    width = maxX - minX;\n    height = maxY - minY;\n    x0 = minX - width;\n    x1 = maxX + width;\n    y0 = minY - height;\n    y1 = maxY + height;\n\n    // MUST be counterclockwise\n    // if not, may produce 'TypeError: Cannot set property 'twin' of null' during computation\n    // don't know how to test as it is not exposed\n    boundingData[0] = [x0, y0];\n    boundingData[1] = [x0, y1];\n    boundingData[2] = [x1, y1];\n    boundingData[3] = [x1, y0];\n\n    for (var i = 0; i < 4; i++) {\n      boundingSites.push(\n        new Vertex(\n          boundingData[i][0],\n          boundingData[i][1],\n          null,\n          epsilon,\n          new Vertex(boundingData[i][0], boundingData[i][1], null, epsilon, null, true),\n          true\n        )\n      );\n    }\n\n    return boundingSites;\n  }\n\n  return _weightedVoronoi;\n}\n", "\nexport function FlickeringMitigation () {\n  /////// Inputs ///////\n  this.growthChangesLength = DEFAULT_LENGTH;\n  this.totalAvailableArea = NaN;\n\n  //begin: internals\n  this.lastAreaError = NaN;\n  this.lastGrowth = NaN;\n  this.growthChanges = [];\n  this.growthChangeWeights = generateGrowthChangeWeights(this.growthChangesLength); //used to make recent changes weighter than older changes\n  this.growthChangeWeightsSum = computeGrowthChangeWeightsSum(this.growthChangeWeights);\n  //end: internals\n}\n\nvar DEFAULT_LENGTH = 10;\n\nfunction direction(h0, h1) {\n  return (h0 >= h1)? 1 : -1;\n}\n\nfunction generateGrowthChangeWeights(length) {\n  var initialWeight = 3;   // a magic number\n  var weightDecrement = 1; // a magic number\n  var minWeight = 1;\n\n  var weightedCount = initialWeight;\n  var growthChangeWeights = [];\n\n  for (var i=0; i<length; i++) {\n    growthChangeWeights.push(weightedCount);\n    weightedCount -= weightDecrement;\n    if (weightedCount<minWeight) { weightedCount = minWeight; }\n  }\n  return growthChangeWeights;\n}\n\nfunction computeGrowthChangeWeightsSum (growthChangeWeights) {\n  var growthChangeWeightsSum = 0;\n  for (var i=0; i<growthChangeWeights.length; i++) {\n    growthChangeWeightsSum += growthChangeWeights[i];\n  }\n  return growthChangeWeightsSum;\n}\n\n///////////////////////\n///////// API /////////\n///////////////////////\n\nFlickeringMitigation.prototype.reset = function () {\n  this.lastAreaError = NaN;\n  this.lastGrowth = NaN;\n  this.growthChanges = [];\n  this.growthChangesLength = DEFAULT_LENGTH;\n  this.growthChangeWeights = generateGrowthChangeWeights(this.growthChangesLength);\n  this.growthChangeWeightsSum = computeGrowthChangeWeightsSum(this.growthChangeWeights);\n  this.totalAvailableArea = NaN;\n\n  return this;\n};\n\nFlickeringMitigation.prototype.clear = function () {\n  this.lastAreaError = NaN;\n  this.lastGrowth = NaN;\n  this.growthChanges = [];\n\n  return this;\n};\n\nFlickeringMitigation.prototype.length = function (_) {\n  if (!arguments.length) { return this.growthChangesLength; }\n\n  if (parseInt(_)>0) {\n    this.growthChangesLength = Math.floor(parseInt(_));\n    this.growthChangeWeights = generateGrowthChangeWeights(this.growthChangesLength);\n    this.growthChangeWeightsSum = computeGrowthChangeWeightsSum(this.growthChangeWeights);\n  } else {\n    console.warn(\"FlickeringMitigation.length() accepts only positive integers; unable to handle \"+_);\n  }\n  return this;\n};\n\nFlickeringMitigation.prototype.totalArea = function (_) {\n  if (!arguments.length) { return this.totalAvailableArea; }\n\n  if (parseFloat(_)>0) {\n    this.totalAvailableArea = parseFloat(_);\n  } else {\n    console.warn(\"FlickeringMitigation.totalArea() accepts only positive numbers; unable to handle \"+_);\n  }\n  return this;\n};\n\nFlickeringMitigation.prototype.add = function (areaError) {\n  var secondToLastAreaError, secondToLastGrowth;\n\n  secondToLastAreaError = this.lastAreaError;\n  this.lastAreaError = areaError;\n  if (!isNaN(secondToLastAreaError)) {\n    secondToLastGrowth = this.lastGrowth;\n    this.lastGrowth = direction(this.lastAreaError, secondToLastAreaError);\n  }\n  if (!isNaN(secondToLastGrowth)) {\n    this.growthChanges.unshift(this.lastGrowth!=secondToLastGrowth);\n  }\n\n  if (this.growthChanges.length>this.growthChangesLength) {\n    this.growthChanges.pop();\n  }\n  return this;\n};\n\nFlickeringMitigation.prototype.ratio = function () {\n  var weightedChangeCount = 0;\n  var ratio;\n\n  if (this.growthChanges.length < this.growthChangesLength) { return 0; }\n  if (this.lastAreaError > this.totalAvailableArea/10) { return 0; }\n\n  for(var i=0; i<this.growthChangesLength; i++) {\n    if (this.growthChanges[i]) {\n      weightedChangeCount += this.growthChangeWeights[i];\n    }\n  }\n\n  ratio = weightedChangeCount/this.growthChangeWeightsSum;\n\n  /*\n  if (ratio>0) {\n    console.log(\"flickering mitigation ratio: \"+Math.floor(ratio*1000)/1000);\n  }\n  */\n\n  return ratio;\n};", "import {\n  polygonContains as d3PolygonContains\n} from 'd3-polygon';\n\nexport default function () {\n\n  //begin: internals\n  var clippingPolygon,\n    extent,\n    minX, maxX,\n    minY, maxY,\n    dx, dy;\n  //end: internals\n\n  ///////////////////////\n  ///////// API /////////\n  ///////////////////////\n\n  function _random(d, i, arr, voronoiMapSimulation) {\n    var shouldUpdateInternals = false;\n    var x, y;\n\n    if (clippingPolygon !== voronoiMapSimulation.clip()) {\n      clippingPolygon = voronoiMapSimulation.clip();\n      extent = voronoiMapSimulation.extent();\n      shouldUpdateInternals = true;\n    }\n\n    if (shouldUpdateInternals) {\n      updateInternals();\n    }\n\n    x = minX + dx * voronoiMapSimulation.prng()();\n    y = minY + dy * voronoiMapSimulation.prng()();\n    while (!d3PolygonContains(clippingPolygon, [x, y])) {\n      x = minX + dx * voronoiMapSimulation.prng()();\n      y = minY + dy * voronoiMapSimulation.prng()();\n    }\n    return [x, y];\n  };\n\n  ///////////////////////\n  /////// Private ///////\n  ///////////////////////\n\n  function updateInternals() {\n    minX = extent[0][0];\n    maxX = extent[1][0];\n    minY = extent[0][1];\n    maxY = extent[1][1];\n    dx = maxX - minX;\n    dy = maxY - minY;\n  };\n\n  return _random;\n};", "import {\n  polygonArea as d3PolygonArea\n} from 'd3-polygon';\n\nexport default function () {\n  //begin: internals\n  var clippingPolygon,\n    dataArray,\n    siteCount,\n    totalArea,\n    halfAverageArea;\n  //end: internals\n\n  ///////////////////////\n  ///////// API /////////\n  ///////////////////////\n  function _halfAverageArea(d, i, arr, voronoiMapSimulation) {\n    var shouldUpdateInternals = false;\n    if (clippingPolygon !== voronoiMapSimulation.clip()) {\n      clippingPolygon = voronoiMapSimulation.clip();\n      shouldUpdateInternals |= true;\n    }\n    if (dataArray !== arr) {\n      dataArray = arr;\n      shouldUpdateInternals |= true;\n    }\n\n    if (shouldUpdateInternals) {\n      updateInternals();\n    }\n\n    return halfAverageArea;\n  };\n\n  ///////////////////////\n  /////// Private ///////\n  ///////////////////////\n\n  function updateInternals() {\n    siteCount = dataArray.length;\n    totalArea = d3PolygonArea(clippingPolygon);\n    halfAverageArea = totalArea / siteCount / 2; // half of the average area of the the clipping polygon\n  }\n\n  return _halfAverageArea;\n};", "// from https://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript\n// (above link provided by https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error)\n\nexport default function d3VoronoiMapError(message) {\n  this.message = message;\n  this.stack = new Error().stack;\n}\n\nd3VoronoiMapError.prototype.name = 'd3VoronoiMapError';\nd3VoronoiMapError.prototype = new Error();\n", "import {\n  polygonCentroid as d3PolygonCentroid,\n  polygonArea as d3PolygonArea,\n  polygonContains as d3PolygonContains,\n} from 'd3-polygon';\nimport { timer as d3Timer } from 'd3-timer';\nimport { dispatch as d3Dispatch } from 'd3-dispatch';\nimport { weightedVoronoi as d3WeightedVoronoi } from 'd3-weighted-voronoi';\nimport { FlickeringMitigation } from './flickering-mitigation';\nimport randomInitialPosition from './initial-position-policies/random';\nimport pieInitialPosition from './initial-position-policies/pie';\nimport halfAverageAreaInitialWeight from './initial-weight-policies/half-average-area';\nimport d3VoronoiMapError from './d3-voronoi-map-error';\n\nexport function voronoiMapSimulation(data) {\n  //begin: constants\n  var DEFAULT_CONVERGENCE_RATIO = 0.01;\n  var DEFAULT_MAX_ITERATION_COUNT = 50;\n  var DEFAULT_MIN_WEIGHT_RATIO = 0.01;\n  var DEFAULT_PRNG = Math.random;\n  var DEFAULT_INITIAL_POSITION = randomInitialPosition();\n  var DEFAULT_INITIAL_WEIGHT = halfAverageAreaInitialWeight();\n  var RANDOM_INITIAL_POSITION = randomInitialPosition();\n  var epsilon = 1e-10;\n  //end: constants\n\n  /////// Inputs ///////\n  var weight = function (d) {\n    return d.weight;\n  }; // accessor to the weight\n  var convergenceRatio = DEFAULT_CONVERGENCE_RATIO; // targeted allowed error ratio; default 0.01 stops computation when cell areas error <= 1% clipping polygon's area\n  var maxIterationCount = DEFAULT_MAX_ITERATION_COUNT; // maximum allowed iteration; stops computation even if convergence is not reached; use a large amount for a sole converge-based computation stop\n  var minWeightRatio = DEFAULT_MIN_WEIGHT_RATIO; // used to compute the minimum allowed weight; default 0.01 means 1% of max weight; handle near-zero weights, and leaves enought space for cell hovering\n  var prng = DEFAULT_PRNG; // pseudorandom number generator\n  var initialPosition = DEFAULT_INITIAL_POSITION; // accessor to the initial position; defaults to a random position inside the clipping polygon\n  var initialWeight = DEFAULT_INITIAL_WEIGHT; // accessor to the initial weight; defaults to the average area of the clipping polygon\n\n  //begin: internals\n  var weightedVoronoi = d3WeightedVoronoi(),\n    flickeringMitigation = new FlickeringMitigation(),\n    shouldInitialize = true, // should initialize due to changes via APIs\n    siteCount, // number of sites\n    totalArea, // area of the clipping polygon\n    areaErrorTreshold, // targeted allowed area error (= totalArea * convergenceRatio); below this treshold, map is considered obtained and computation stops\n    iterationCount, // current iteration\n    polygons, // current computed polygons\n    areaError, // current area error\n    converged, // true if (areaError < areaErrorTreshold)\n    ended; // stores if computation is ended, either if computation has converged or if it has reached the maximum allowed iteration\n  //end: internals\n  //being: internals/simulation\n  var simulation,\n    stepper = d3Timer(step),\n    event = d3Dispatch('tick', 'end');\n  //end: internals/simulation\n\n  //begin: algorithm conf.\n  const HANDLE_OVERWEIGHTED_VARIANT = 1; // this option still exists 'cause for further experiments\n  const HANLDE_OVERWEIGHTED_MAX_ITERATION_COUNT = 1000; // max number of tries to handle overweigthed sites\n  var handleOverweighted;\n  //end: algorithm conf.\n\n  //begin: utils\n  function sqr(d) {\n    return Math.pow(d, 2);\n  }\n\n  function squaredDistance(s0, s1) {\n    return sqr(s1.x - s0.x) + sqr(s1.y - s0.y);\n  }\n  //end: utils\n\n  ///////////////////////\n  ///////// API /////////\n  ///////////////////////\n\n  simulation = {\n    tick: tick,\n\n    restart: function () {\n      stepper.restart(step);\n      return simulation;\n    },\n\n    stop: function () {\n      stepper.stop();\n      return simulation;\n    },\n\n    weight: function (_) {\n      if (!arguments.length) {\n        return weight;\n      }\n\n      weight = _;\n      shouldInitialize = true;\n      return simulation;\n    },\n\n    convergenceRatio: function (_) {\n      if (!arguments.length) {\n        return convergenceRatio;\n      }\n\n      convergenceRatio = _;\n      shouldInitialize = true;\n      return simulation;\n    },\n\n    maxIterationCount: function (_) {\n      if (!arguments.length) {\n        return maxIterationCount;\n      }\n\n      maxIterationCount = _;\n      return simulation;\n    },\n\n    minWeightRatio: function (_) {\n      if (!arguments.length) {\n        return minWeightRatio;\n      }\n\n      minWeightRatio = _;\n      shouldInitialize = true;\n      return simulation;\n    },\n\n    clip: function (_) {\n      if (!arguments.length) {\n        return weightedVoronoi.clip();\n      }\n\n      weightedVoronoi.clip(_);\n      shouldInitialize = true;\n      return simulation;\n    },\n\n    extent: function (_) {\n      if (!arguments.length) {\n        return weightedVoronoi.extent();\n      }\n\n      weightedVoronoi.extent(_);\n      shouldInitialize = true;\n      return simulation;\n    },\n\n    size: function (_) {\n      if (!arguments.length) {\n        return weightedVoronoi.size();\n      }\n\n      weightedVoronoi.size(_);\n      shouldInitialize = true;\n      return simulation;\n    },\n\n    prng: function (_) {\n      if (!arguments.length) {\n        return prng;\n      }\n\n      prng = _;\n      shouldInitialize = true;\n      return simulation;\n    },\n\n    initialPosition: function (_) {\n      if (!arguments.length) {\n        return initialPosition;\n      }\n\n      initialPosition = _;\n      shouldInitialize = true;\n      return simulation;\n    },\n\n    initialWeight: function (_) {\n      if (!arguments.length) {\n        return initialWeight;\n      }\n\n      initialWeight = _;\n      shouldInitialize = true;\n      return simulation;\n    },\n\n    state: function () {\n      if (shouldInitialize) {\n        initializeSimulation();\n      }\n      return {\n        ended: ended,\n        iterationCount: iterationCount,\n        convergenceRatio: areaError / totalArea,\n        polygons: polygons,\n      };\n    },\n\n    on: function (name, _) {\n      if (arguments.length === 1) {\n        return event.on(name);\n      }\n\n      event.on(name, _);\n      return simulation;\n    },\n  };\n\n  ///////////////////////\n  /////// Private ///////\n  ///////////////////////\n\n  //begin: simulation's main loop\n  function step() {\n    tick();\n    event.call('tick', simulation);\n    if (ended) {\n      stepper.stop();\n      event.call('end', simulation);\n    }\n  }\n  //end: simulation's main loop\n\n  //begin: algorithm used at each iteration\n  function tick() {\n    if (!ended) {\n      if (shouldInitialize) {\n        initializeSimulation();\n      }\n      polygons = adapt(polygons, flickeringMitigation.ratio());\n      iterationCount++;\n      areaError = computeAreaError(polygons);\n      flickeringMitigation.add(areaError);\n      converged = areaError < areaErrorTreshold;\n      ended = converged || iterationCount >= maxIterationCount;\n      // console.log(\"error %: \"+Math.round(areaError*100*1000/totalArea)/1000);\n    }\n  }\n  //end: algorithm used at each iteration\n\n  function initializeSimulation() {\n    //begin: handle algorithm's variants\n    setHandleOverweighted();\n    //end: handle algorithm's variants\n\n    siteCount = data.length;\n    totalArea = Math.abs(d3PolygonArea(weightedVoronoi.clip()));\n    areaErrorTreshold = convergenceRatio * totalArea;\n    flickeringMitigation.clear().totalArea(totalArea);\n\n    iterationCount = 0;\n    converged = false;\n    polygons = initialize(data, simulation);\n    ended = false;\n    shouldInitialize = false;\n  }\n\n  function initialize(data, simulation) {\n    var maxWeight = data.reduce(function (max, d) {\n        return Math.max(max, weight(d));\n      }, -Infinity),\n      minAllowedWeight = maxWeight * minWeightRatio;\n    var weights, mapPoints;\n\n    //begin: extract weights\n    weights = data.map(function (d, i, arr) {\n      return {\n        index: i,\n        weight: Math.max(weight(d), minAllowedWeight),\n        initialPosition: initialPosition(d, i, arr, simulation),\n        initialWeight: initialWeight(d, i, arr, simulation),\n        originalData: d,\n      };\n    });\n    //end: extract weights\n\n    // create map-related points\n    // (with targetedArea, initial position and initialWeight)\n    mapPoints = createMapPoints(weights, simulation);\n    handleOverweighted(mapPoints);\n    return weightedVoronoi(mapPoints);\n  }\n\n  function createMapPoints(basePoints, simulation) {\n    var totalWeight = basePoints.reduce(function (acc, bp) {\n      return (acc += bp.weight);\n    }, 0);\n    var initialPosition;\n\n    return basePoints.map(function (bp, i, bps) {\n      initialPosition = bp.initialPosition;\n\n      if (!d3PolygonContains(weightedVoronoi.clip(), initialPosition)) {\n        initialPosition = DEFAULT_INITIAL_POSITION(bp, i, bps, simulation);\n      }\n\n      return {\n        index: bp.index,\n        targetedArea: (totalArea * bp.weight) / totalWeight,\n        data: bp,\n        x: initialPosition[0],\n        y: initialPosition[1],\n        weight: bp.initialWeight, // ArlindNocaj/Voronoi-Treemap-Library uses an epsilonesque initial weight; using heavier initial weights allows faster weight adjustements, hence faster stabilization\n      };\n    });\n  }\n\n  function adapt(polygons, flickeringMitigationRatio) {\n    var adaptedMapPoints;\n\n    adaptPositions(polygons, flickeringMitigationRatio);\n    adaptedMapPoints = polygons.map(function (p) {\n      return p.site.originalObject;\n    });\n    polygons = weightedVoronoi(adaptedMapPoints);\n    if (polygons.length < siteCount) {\n      throw new d3VoronoiMapError('at least 1 site has no area, which is not supposed to arise');\n    }\n\n    adaptWeights(polygons, flickeringMitigationRatio);\n    adaptedMapPoints = polygons.map(function (p) {\n      return p.site.originalObject;\n    });\n    polygons = weightedVoronoi(adaptedMapPoints);\n    if (polygons.length < siteCount) {\n      throw new d3VoronoiMapError('at least 1 site has no area, which is not supposed to arise');\n    }\n\n    return polygons;\n  }\n\n  function adaptPositions(polygons, flickeringMitigationRatio) {\n    var newMapPoints = [],\n      flickeringInfluence = 0.5;\n    var flickeringMitigation, d, polygon, mapPoint, centroid, dx, dy;\n\n    flickeringMitigation = flickeringInfluence * flickeringMitigationRatio;\n    d = 1 - flickeringMitigation; // in [0.5, 1]\n    for (var i = 0; i < siteCount; i++) {\n      polygon = polygons[i];\n      mapPoint = polygon.site.originalObject;\n      centroid = d3PolygonCentroid(polygon);\n\n      dx = centroid[0] - mapPoint.x;\n      dy = centroid[1] - mapPoint.y;\n\n      //begin: handle excessive change;\n      dx *= d;\n      dy *= d;\n      //end: handle excessive change;\n\n      mapPoint.x += dx;\n      mapPoint.y += dy;\n\n      newMapPoints.push(mapPoint);\n    }\n\n    handleOverweighted(newMapPoints);\n  }\n\n  function adaptWeights(polygons, flickeringMitigationRatio) {\n    var newMapPoints = [],\n      flickeringInfluence = 0.1;\n    var flickeringMitigation, polygon, mapPoint, currentArea, adaptRatio, adaptedWeight;\n\n    flickeringMitigation = flickeringInfluence * flickeringMitigationRatio;\n    for (var i = 0; i < siteCount; i++) {\n      polygon = polygons[i];\n      mapPoint = polygon.site.originalObject;\n      currentArea = d3PolygonArea(polygon);\n      adaptRatio = mapPoint.targetedArea / currentArea;\n\n      //begin: handle excessive change;\n      adaptRatio = Math.max(adaptRatio, 1 - flickeringInfluence + flickeringMitigation); // in [(1-flickeringInfluence), 1]\n      adaptRatio = Math.min(adaptRatio, 1 + flickeringInfluence - flickeringMitigation); // in [1, (1+flickeringInfluence)]\n      //end: handle excessive change;\n\n      adaptedWeight = mapPoint.weight * adaptRatio;\n      adaptedWeight = Math.max(adaptedWeight, epsilon);\n\n      mapPoint.weight = adaptedWeight;\n\n      newMapPoints.push(mapPoint);\n    }\n\n    handleOverweighted(newMapPoints);\n  }\n\n  // heuristics: lower heavy weights\n  function handleOverweighted0(mapPoints) {\n    var fixCount = 0;\n    var fixApplied, tpi, tpj, weightest, lightest, sqrD, adaptedWeight;\n    do {\n      if (fixCount > HANLDE_OVERWEIGHTED_MAX_ITERATION_COUNT) {\n        throw new d3VoronoiMapError('handleOverweighted0 is looping too much');\n      }\n      fixApplied = false;\n      for (var i = 0; i < siteCount; i++) {\n        tpi = mapPoints[i];\n        for (var j = i + 1; j < siteCount; j++) {\n          tpj = mapPoints[j];\n          if (tpi.weight > tpj.weight) {\n            weightest = tpi;\n            lightest = tpj;\n          } else {\n            weightest = tpj;\n            lightest = tpi;\n          }\n          sqrD = squaredDistance(tpi, tpj);\n          if (sqrD < weightest.weight - lightest.weight) {\n            // adaptedWeight = sqrD - epsilon; // as in ArlindNocaj/Voronoi-Treemap-Library\n            // adaptedWeight = sqrD + lightest.weight - epsilon; // works, but below heuristics performs better (less flickering)\n            adaptedWeight = sqrD + lightest.weight / 2;\n            adaptedWeight = Math.max(adaptedWeight, epsilon);\n            weightest.weight = adaptedWeight;\n            fixApplied = true;\n            fixCount++;\n            break;\n          }\n        }\n        if (fixApplied) {\n          break;\n        }\n      }\n    } while (fixApplied);\n\n    /*\n    if (fixCount > 0) {\n      console.log('# fix: ' + fixCount);\n    }\n    */\n  }\n\n  // heuristics: increase light weights\n  function handleOverweighted1(mapPoints) {\n    var fixCount = 0;\n    var fixApplied, tpi, tpj, weightest, lightest, sqrD, overweight;\n    do {\n      if (fixCount > HANLDE_OVERWEIGHTED_MAX_ITERATION_COUNT) {\n        throw new d3VoronoiMapError('handleOverweighted1 is looping too much');\n      }\n      fixApplied = false;\n      for (var i = 0; i < siteCount; i++) {\n        tpi = mapPoints[i];\n        for (var j = i + 1; j < siteCount; j++) {\n          tpj = mapPoints[j];\n          if (tpi.weight > tpj.weight) {\n            weightest = tpi;\n            lightest = tpj;\n          } else {\n            weightest = tpj;\n            lightest = tpi;\n          }\n          sqrD = squaredDistance(tpi, tpj);\n          if (sqrD < weightest.weight - lightest.weight) {\n            overweight = weightest.weight - lightest.weight - sqrD;\n            lightest.weight += overweight + epsilon;\n            fixApplied = true;\n            fixCount++;\n            break;\n          }\n        }\n        if (fixApplied) {\n          break;\n        }\n      }\n    } while (fixApplied);\n\n    /*\n    if (fixCount > 0) {\n      console.log('# fix: ' + fixCount);\n    }\n    */\n  }\n\n  function computeAreaError(polygons) {\n    //convergence based on summation of all sites current areas\n    var areaErrorSum = 0;\n    var polygon, mapPoint, currentArea;\n    for (var i = 0; i < siteCount; i++) {\n      polygon = polygons[i];\n      mapPoint = polygon.site.originalObject;\n      currentArea = d3PolygonArea(polygon);\n      areaErrorSum += Math.abs(mapPoint.targetedArea - currentArea);\n    }\n    return areaErrorSum;\n  }\n\n  function setHandleOverweighted() {\n    switch (HANDLE_OVERWEIGHTED_VARIANT) {\n      case 0:\n        handleOverweighted = handleOverweighted0;\n        break;\n      case 1:\n        handleOverweighted = handleOverweighted1;\n        break;\n      default:\n        console.error(\"unknown 'handleOverweighted' variant; using variant #1\");\n        handleOverweighted = handleOverweighted0;\n    }\n  }\n\n  return simulation;\n}\n", "import { voronoiMapSimulation as d3VoronoiMapSimulation } from 'd3-voronoi-map';\n\nexport function voronoiTreemap() {\n  //begin: constants\n  var DEFAULT_CONVERGENCE_RATIO = 0.01;\n  var DEFAULT_MAX_ITERATION_COUNT = 50;\n  var DEFAULT_MIN_WEIGHT_RATIO = 0.01;\n  var DEFAULT_PRNG = Math.random;\n  //end: constants\n\n  /////// Inputs ///////\n  var clip = [\n    [0, 0],\n    [0, 1],\n    [1, 1],\n    [1, 0],\n  ]; // clipping polygon\n  var extent = [\n    [0, 0],\n    [1, 1],\n  ]; // extent of the clipping polygon\n  var size = [1, 1]; // [width, height] of the clipping polygon\n  var convergenceRatio = DEFAULT_CONVERGENCE_RATIO; // targeted allowed error ratio; default 0.01 stops computation when cell areas error <= 1% clipping polygon's area\n  var maxIterationCount = DEFAULT_MAX_ITERATION_COUNT; // maximum allowed iteration; stops computation even if convergence is not reached; use a large amount for a sole converge-based computation stop\n  var minWeightRatio = DEFAULT_MIN_WEIGHT_RATIO; // used to compute the minimum allowed weight; default 0.01 means 1% of max weight; handle near-zero weights, and leaves enought space for cell hovering\n  var prng = DEFAULT_PRNG; // pseudorandom number generator\n\n  //begin: internals\n  var unrelevantButNeedeData = [\n    {\n      weight: 1,\n    },\n    {\n      weight: 1,\n    },\n  ];\n  var _convenientReusableVoronoiMapSimulation = d3VoronoiMapSimulation(unrelevantButNeedeData).stop();\n  //end: internals\n\n  ///////////////////////\n  ///////// API /////////\n  ///////////////////////\n\n  function _voronoiTreemap(rootNode) {\n    recurse(clip, rootNode);\n  }\n\n  _voronoiTreemap.convergenceRatio = function (_) {\n    if (!arguments.length) {\n      return convergenceRatio;\n    }\n\n    convergenceRatio = _;\n    return _voronoiTreemap;\n  };\n\n  _voronoiTreemap.maxIterationCount = function (_) {\n    if (!arguments.length) {\n      return maxIterationCount;\n    }\n\n    maxIterationCount = _;\n    return _voronoiTreemap;\n  };\n\n  _voronoiTreemap.minWeightRatio = function (_) {\n    if (!arguments.length) {\n      return minWeightRatio;\n    }\n\n    minWeightRatio = _;\n    return _voronoiTreemap;\n  };\n\n  _voronoiTreemap.clip = function (_) {\n    if (!arguments.length) {\n      return clip;\n    }\n\n    //begin: use voronoiMap.clip() to handle clip/extent/size computation and borderline input (non-counterclockwise, non-convex, ...)\n    _convenientReusableVoronoiMapSimulation.clip(_);\n    //end: use voronoiMap.clip() to handle clip/extent/size computation\n    clip = _convenientReusableVoronoiMapSimulation.clip();\n    extent = _convenientReusableVoronoiMapSimulation.extent();\n    size = _convenientReusableVoronoiMapSimulation.size();\n    return _voronoiTreemap;\n  };\n\n  _voronoiTreemap.extent = function (_) {\n    if (!arguments.length) {\n      return extent;\n    }\n\n    //begin: use voronoiMap.extent() to handle clip/extent/size computation\n    _convenientReusableVoronoiMapSimulation.extent(_);\n    //end: use voronoiMap.clip() to handle clip/extent/size computation\n    clip = _convenientReusableVoronoiMapSimulation.clip();\n    extent = _convenientReusableVoronoiMapSimulation.extent();\n    size = _convenientReusableVoronoiMapSimulation.size();\n    return _voronoiTreemap;\n  };\n\n  _voronoiTreemap.size = function (_) {\n    if (!arguments.length) {\n      return size;\n    }\n\n    //begin: use voronoiMap.size() to handle clip/extent/size computation\n    _convenientReusableVoronoiMapSimulation.size(_);\n    //end: use voronoiMap.clip() to handle clip/extent/size computation\n    clip = _convenientReusableVoronoiMapSimulation.clip();\n    extent = _convenientReusableVoronoiMapSimulation.extent();\n    size = _convenientReusableVoronoiMapSimulation.size();\n    return _voronoiTreemap;\n  };\n\n  _voronoiTreemap.prng = function (_) {\n    if (!arguments.length) {\n      return prng;\n    }\n\n    prng = _;\n    return _voronoiTreemap;\n  };\n\n  ///////////////////////\n  /////// Private ///////\n  ///////////////////////\n\n  function recurse(clippingPolygon, node) {\n    var simulation;\n\n    //assign polygon to node\n    node.polygon = clippingPolygon;\n\n    if (node.height != 0) {\n      //compute one-level Voronoi map of children\n      simulation = d3VoronoiMapSimulation(node.children)\n        .clip(clippingPolygon)\n        .weight(function (d) {\n          return d.value;\n        })\n        .convergenceRatio(convergenceRatio)\n        .maxIterationCount(maxIterationCount)\n        .minWeightRatio(minWeightRatio)\n        .prng(prng)\n        .stop();\n\n      var state = simulation.state(); // retrieve the Voronoï map simulation's state\n\n      //begin: manually launch each iteration until the Voronoï map simulation ends\n      while (!state.ended) {\n        simulation.tick();\n        state = simulation.state();\n      }\n      //end: manually launch each iteration until the Voronoï map simulation ends\n\n      //begin: recurse on children\n      state.polygons.forEach(function (cp) {\n        recurse(cp, cp.site.originalObject.data.originalData);\n      });\n      //end: recurse on children\n    }\n  }\n\n  return _voronoiTreemap;\n}\n", "import { voronoiTreemap } from 'd3-voronoi-treemap';\r\nimport seedrandom from \"seedrandom\";\r\n\r\nimport type { HierarchyNode } from \"../hierarchy/HierarchyNode\";\r\n\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport { Hierarchy, IHierarchyPrivate, IHierarchySettings, IHierarchyDataItem } from \"../hierarchy/Hierarchy\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Polygon } from \"../../core/render/Polygon\";\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $array from \"../../core/util/Array\";\r\nimport { p50 } from \"../../core/util/Percent\";\r\n\r\n\r\nexport interface IVoronoiTreemapDataObject {\r\n\tname?: string,\r\n\tvalue?: number,\r\n\tchildren?: IVoronoiTreemapDataObject[],\r\n\tdataItem?: DataItem<IVoronoiTreemapDataItem>\r\n};\r\n\r\nexport interface IVoronoiTreemapDataItem extends IHierarchyDataItem {\r\n\t/**\r\n\t * Data items of child nodes.\r\n\t */\r\n\tchildren: Array<DataItem<IVoronoiTreemapDataItem>>;\r\n\r\n\t/**\r\n\t * Data it of a parent node.\r\n\t */\r\n\tparent: DataItem<IVoronoiTreemapDataItem>;\r\n\r\n\t/**\r\n\t * A [[Polygon]] element of a node.\r\n\t */\r\n\tpolygon: Polygon;\r\n\r\n}\r\n\r\nexport interface IVoronoiTreemapSettings extends IHierarchySettings {\r\n\r\n\t/**\r\n\t * Type of the diagram's shape.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/voronoi-treemap/#Diagram_type} for more info\r\n\t * @default \"polygon\"\r\n\t */\r\n\ttype?: \"rectangle\" | \"polygon\"\r\n\r\n\t/**\r\n\t * Number of corners when type is `\"polygon\"`.\r\n\t * \r\n\t * `120` means the polygoon will look like a circle.\r\n\t *\r\n\t * NOTE: this setting is ignored if `type=\"rectangle\"`.\r\n\t * \r\n\t * @default 120\r\n\t */\r\n\tcornerCount?: number;\r\n\r\n\t/**\r\n\t * Minimum weight ratio which allows computing the minimum allowed\r\n\t * weight (`= [maximum weight] * minWeightRatio`).\r\n\t * \r\n\t * Setting very small `minWeigtRatio` might result flickering.\r\n\t *\r\n\t * NOTE: the nodes that have smaller weight will be scaled up and will not\r\n\t * represent their true value correctly.\r\n\t * \r\n\t * @default 0.005\r\n\t */\r\n\tminWeightRatio?: number;\r\n\r\n\t/**\r\n\t * The convergence ratio in Voronoi treemaps measures how well the treemap\r\n\t * layout represents the hierarchical structure of the underlying data.\r\n\t * \r\n\t * It is calculated as the ratio of the summed area of the smallest enclosing\r\n\t * rectangle for each cell to the total area of the treemap. A lower\r\n\t * convergence ratio indicates a better representation of the hierarchy,\r\n\t * meaning that the cells are closely packed and the treemap effectively\r\n\t * captures the nested relationships between the data elements.\r\n\t * \r\n\t * @default 0.005\r\n\t */\r\n\tconvergenceRatio?: number;\r\n\r\n\t/**\r\n\t * Maximum allowed number of iterations when computing the layout.\r\n\t * \r\n\t * Computation is stopped when it number of iterations is reached, even if\r\n\t * the `convergenceRatio` is not yet reached.\r\n\t *\r\n\t * Bigger number means finer results, but slower performance.\r\n\t * \r\n\t * @default 100\r\n\t */\r\n\tmaxIterationCount?: number;\r\n\r\n}\r\n\r\nexport interface IVoronoiTreemapPrivate extends IHierarchyPrivate {\r\n}\r\n\r\n/**\r\n * A Weighted Voronoi Treemap series.\r\n * \r\n * NOTE: Try to avoid a big number of data items with very big value\r\n * differences. Better group small items into \"Other\" item.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/hierarchy/voronoi-treemap/} for more info\r\n * @since 5.4.0\r\n */\r\nexport class VoronoiTreemap extends Hierarchy {\r\n\r\n\tdeclare public _settings: IVoronoiTreemapSettings;\r\n\tdeclare public _privateSettings: IVoronoiTreemapPrivate;\r\n\tdeclare public _dataItemSettings: IVoronoiTreemapDataItem;\r\n\r\n\tprotected _tag: string = \"voronoitreemap\";\r\n\r\n\tpublic static className: string = \"VoronoiTreemap\";\r\n\tpublic static classNames: Array<string> = Hierarchy.classNames.concat([VoronoiTreemap.className]);\r\n\r\n\t/**\r\n\t * A list of node graphics elements in a [[VoronoiTreemap]] chart.\r\n\t *\r\n\t * @default new ListTemplate<RoundedRectangle>\r\n\t */\r\n\tpublic readonly polygons: ListTemplate<Polygon> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Polygon._new(this._root, {\r\n\t\t\tthemeTags: $utils.mergeTags(this.polygons.template.get(\"themeTags\", []), [this._tag, \"shape\"])\r\n\t\t}, [this.polygons.template])\r\n\t);\r\n\r\n\tpublic voronoi = voronoiTreemap();\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\tthis.nodesContainer.setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50\r\n\t\t})\r\n\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tconst width = this.innerWidth() / 2;\r\n\t\tconst height = this.innerHeight() / 2;\r\n\r\n\t\tlet node = this._rootNode;\r\n\t\tconst selectedDataItem = this.get(\"selectedDataItem\") as DataItem<IVoronoiTreemapDataItem>;\r\n\r\n\t\tif (selectedDataItem) {\r\n\t\t\tnode = selectedDataItem.get(\"d3HierarchyNode\")\r\n\t\t}\r\n\r\n\t\tthis.voronoi.convergenceRatio((this.get(\"convergenceRatio\", 0.005)));\r\n\t\tthis.voronoi.maxIterationCount((this.get(\"maxIterationCount\", 100)));\r\n\t\tthis.voronoi.minWeightRatio((this.get(\"minWeightRatio\", 0.005)));\r\n\r\n\t\tif (this.isDirty(\"type\")) {\r\n\t\t\tif (this.get(\"type\") == \"polygon\") {\r\n\t\t\t\tthis.voronoi.clip(this.getCirclePolygon(1));\r\n\t\t\t\tthis._updateVisuals();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._sizeDirty) {\r\n\t\t\tif (this.get(\"type\") == \"rectangle\") {\r\n\t\t\t\tthis.voronoi.prng(seedrandom(\"X\"));\r\n\t\t\t\tthis.voronoi.clip([[-width, -height], [-width, height], [width, height], [width, -height]])(node);\r\n\t\t\t\tthis._updateVisuals();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ((this._valuesDirty || this.isDirty(\"selectedDataItem\")) && node) {\r\n\t\t\tthis.voronoi.prng(seedrandom(\"X\"));\r\n\t\t\tthis.voronoi(node);\r\n\t\t\tthis._updateVisuals();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateNode(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tconst coords: any = (dataItem.get(\"d3HierarchyNode\") as any).polygon;\r\n\t\tconst polygon = dataItem.get(\"polygon\");\r\n\r\n\t\tif (coords && polygon) {\r\n\r\n\t\t\tlet coordinates: any = [];\r\n\r\n\t\t\tlet d = 1;\r\n\t\t\tif (this.get(\"type\") == \"polygon\") {\r\n\t\t\t\td = Math.min(this.innerWidth(), this.innerHeight()) / 2;\r\n\t\t\t}\r\n\r\n\t\t\tlet minX = Infinity;\r\n\t\t\tlet maxX = -Infinity;\r\n\r\n\t\t\tfor (let i = 0, len = coords.length; i < len; i++) {\r\n\t\t\t\tconst point: Array<number> = coords[i] as any;\r\n\t\t\t\tlet x = point[0] * d;\r\n\t\t\t\tlet y = point[1] * d;\r\n\r\n\t\t\t\tcoordinates.push([x, y]);\r\n\r\n\t\t\t\tminX = Math.min(minX, x);\r\n\t\t\t\tmaxX = Math.max(maxX, x);\r\n\t\t\t}\r\n\r\n\t\t\tpolygon.set(\"coordinates\", coordinates);\r\n\r\n\t\t\tconst fill = dataItem.get(\"fill\");\r\n\t\t\tpolygon._setDefault(\"fill\", fill);\r\n\r\n\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\tif (label) {\r\n\t\t\t\tconst site = coords.site;\r\n\r\n\t\t\t\tif (site) {\r\n\t\t\t\t\tlabel.setAll({\r\n\t\t\t\t\t\tx: site.x * d,\r\n\t\t\t\t\t\ty: site.y * d,\r\n\t\t\t\t\t\tmaxWidth: Math.abs(maxX - minX)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _handleSingle(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tconst parent = dataItem.get(\"parent\");\r\n\t\tif (parent) {\r\n\t\t\tconst children = parent.get(\"children\");\r\n\t\t\tif (children) {\r\n\t\t\t\t$array.each(children, (child) => {\r\n\t\t\t\t\tif (child != dataItem) {\r\n\t\t\t\t\t\tthis.disableDataItem(child);\r\n\t\t\t\t\t\tchild.get(\"node\").hide();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tthis._handleSingle(parent);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): HierarchyNode {\r\n\t\tconst node = super.makeNode(dataItem);\r\n\t\tthis._makeNode(dataItem, node);\r\n\t\treturn node;\r\n\t}\r\n\r\n\tprotected _makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, node: HierarchyNode) {\r\n\t\tconst polygon = node.children.moveValue(this.polygons.make(), 0);\r\n\t\tnode.setPrivate(\"tooltipTarget\", polygon);\r\n\t\tdataItem.setRaw(\"polygon\", polygon);\r\n\t\tpolygon._setDataItem(dataItem);\r\n\t}\r\n\r\n\tprotected getCirclePolygon(radius: number) {\r\n\t\tconst points = this.get(\"cornerCount\", 120);\r\n\t\tconst dAngle = Math.PI * 2 / points;\r\n\t\tconst polygon: Array<Array<number>> = [];\r\n\r\n\t\tfor (let i = 0; i < points; i++) {\r\n\t\t\tlet angle = i * dAngle;\r\n\t\t\tpolygon.push([radius * Math.cos(angle), radius * Math.sin(angle)])\r\n\t\t}\r\n\r\n\t\treturn polygon;\r\n\t}\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AA2BA,KAAC,SAAS,QAAQA,SAAQC,SAAQ;AAElC,eAAS,KAAK,MAAM;AAClB,YAAI,KAAK,MAAM,OAAO,KAAK;AAE3B,WAAG,OAAO,WAAW;AACnB,cAAI,IAAI,UAAU,GAAG,KAAK,GAAG,IAAI;AACjC,aAAG,KAAK,GAAG;AACX,aAAG,KAAK,GAAG;AACX,iBAAO,GAAG,KAAK,KAAK,GAAG,IAAI,IAAI;AAAA,QACjC;AAGA,WAAG,IAAI;AACP,WAAG,KAAK,KAAK,GAAG;AAChB,WAAG,KAAK,KAAK,GAAG;AAChB,WAAG,KAAK,KAAK,GAAG;AAChB,WAAG,MAAM,KAAK,IAAI;AAClB,YAAI,GAAG,KAAK,GAAG;AAAE,aAAG,MAAM;AAAA,QAAG;AAC7B,WAAG,MAAM,KAAK,IAAI;AAClB,YAAI,GAAG,KAAK,GAAG;AAAE,aAAG,MAAM;AAAA,QAAG;AAC7B,WAAG,MAAM,KAAK,IAAI;AAClB,YAAI,GAAG,KAAK,GAAG;AAAE,aAAG,MAAM;AAAA,QAAG;AAC7B,eAAO;AAAA,MACT;AAEA,eAAS,KAAK,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,KAAK,EAAE;AACT,UAAE,KAAK,EAAE;AACT,UAAE,KAAK,EAAE;AACT,eAAO;AAAA,MACT;AAEA,eAAS,KAAK,MAAM,MAAM;AACxB,YAAI,KAAK,IAAI,KAAK,IAAI,GAClB,QAAQ,QAAQ,KAAK,OACrB,OAAO,GAAG;AACd,aAAK,QAAQ,WAAW;AAAE,iBAAQ,GAAG,KAAK,IAAI,aAAe;AAAA,QAAG;AAChE,aAAK,SAAS,WAAW;AACvB,iBAAO,KAAK,KAAK,KAAK,IAAI,UAAW,KAAK;AAAA,QAC5C;AACA,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,OAAO,SAAU;AAAU,iBAAK,OAAO,EAAE;AAC7C,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,eAAS,OAAO;AACd,YAAI,IAAI;AAER,YAAI,OAAO,SAAS,MAAM;AACxB,iBAAO,OAAO,IAAI;AAClB,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,iBAAK,KAAK,WAAW,CAAC;AACtB,gBAAI,IAAI,sBAAsB;AAC9B,gBAAI,MAAM;AACV,iBAAK;AACL,iBAAK;AACL,gBAAI,MAAM;AACV,iBAAK;AACL,iBAAK,IAAI;AAAA,UACX;AACA,kBAAQ,MAAM,KAAK;AAAA,QACrB;AAEA,eAAO;AAAA,MACT;AAGA,UAAID,WAAUA,QAAO,SAAS;AAC5B,QAAAA,QAAO,UAAU;AAAA,MACnB,WAAWC,WAAUA,QAAO,KAAK;AAC/B,QAAAA,QAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,OAAO;AAAA,MACd;AAAA,IAEA;AAAA,MACE;AAAA,MACC,OAAO,UAAW,YAAY;AAAA;AAAA,MAC9B,OAAO,UAAW,cAAc;AAAA;AAAA,IACnC;AAAA;AAAA;;;AC/GA;AAAA;AAGA,KAAC,SAAS,QAAQC,SAAQC,SAAQ;AAElC,eAAS,OAAO,MAAM;AACpB,YAAI,KAAK,MAAM,UAAU;AAEzB,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI;AAGP,WAAG,OAAO,WAAW;AACnB,cAAI,IAAI,GAAG,IAAK,GAAG,KAAK;AACxB,aAAG,IAAI,GAAG;AACV,aAAG,IAAI,GAAG;AACV,aAAG,IAAI,GAAG;AACV,iBAAO,GAAG,KAAM,GAAG,MAAM,KAAM,IAAK,MAAM;AAAA,QAC5C;AAEA,YAAI,UAAU,OAAO,IAAI;AAEvB,aAAG,IAAI;AAAA,QACT,OAAO;AAEL,qBAAW;AAAA,QACb;AAGA,iBAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,IAAI,KAAK;AAC5C,aAAG,KAAK,QAAQ,WAAW,CAAC,IAAI;AAChC,aAAG,KAAK;AAAA,QACV;AAAA,MACF;AAEA,eAAS,KAAK,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,eAAO;AAAA,MACT;AAEA,eAAS,KAAK,MAAM,MAAM;AACxB,YAAI,KAAK,IAAI,OAAO,IAAI,GACpB,QAAQ,QAAQ,KAAK,OACrB,OAAO,WAAW;AAAE,kBAAQ,GAAG,KAAK,MAAM,KAAK;AAAA,QAAa;AAChE,aAAK,SAAS,WAAW;AACvB,aAAG;AACD,gBAAI,MAAM,GAAG,KAAK,MAAM,IACpB,OAAO,GAAG,KAAK,MAAM,KAAK,YAC1B,UAAU,MAAM,QAAQ,KAAK;AAAA,UACnC,SAAS,WAAW;AACpB,iBAAO;AAAA,QACT;AACA,aAAK,QAAQ,GAAG;AAChB,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,OAAO,SAAU;AAAU,iBAAK,OAAO,EAAE;AAC7C,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,UAAID,WAAUA,QAAO,SAAS;AAC5B,QAAAA,QAAO,UAAU;AAAA,MACnB,WAAWC,WAAUA,QAAO,KAAK;AAC/B,QAAAA,QAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,SAAS;AAAA,MAChB;AAAA,IAEA;AAAA,MACE;AAAA,MACC,OAAO,UAAW,YAAY;AAAA;AAAA,MAC9B,OAAO,UAAW,cAAc;AAAA;AAAA,IACnC;AAAA;AAAA;;;AC9EA;AAAA;AAGA,KAAC,SAAS,QAAQC,SAAQC,SAAQ;AAElC,eAAS,OAAO,MAAM;AACpB,YAAI,KAAK,MAAM,UAAU;AAGzB,WAAG,OAAO,WAAW;AACnB,cAAI,IAAK,GAAG,IAAK,GAAG,MAAM;AAC1B,aAAG,IAAI,GAAG;AAAG,aAAG,IAAI,GAAG;AAAG,aAAG,IAAI,GAAG;AAAG,aAAG,IAAI,GAAG;AACjD,kBAAQ,GAAG,IAAK,GAAG,IAAI,SAAS,MAC5B,GAAG,IAAK,GAAG,IAAK,GAAG,KAAK,KAAO,IAAK,KAAK,MAAO;AAAA,QACtD;AAEA,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI;AAEP,YAAI,UAAU,OAAO,IAAI;AAEvB,aAAG,IAAI;AAAA,QACT,OAAO;AAEL,qBAAW;AAAA,QACb;AAGA,iBAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,IAAI,KAAK;AAC5C,aAAG,KAAK,QAAQ,WAAW,CAAC,IAAI;AAChC,cAAI,KAAK,QAAQ,QAAQ;AACvB,eAAG,IAAI,GAAG,KAAK,KAAK,GAAG,MAAM;AAAA,UAC/B;AACA,aAAG,KAAK;AAAA,QACV;AAAA,MACF;AAEA,eAAS,KAAK,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,eAAO;AAAA,MACT;AAEA,eAAS,KAAK,MAAM,MAAM;AACxB,YAAI,KAAK,IAAI,OAAO,IAAI,GACpB,QAAQ,QAAQ,KAAK,OACrB,OAAO,WAAW;AAAE,kBAAQ,GAAG,KAAK,MAAM,KAAK;AAAA,QAAa;AAChE,aAAK,SAAS,WAAW;AACvB,aAAG;AACD,gBAAI,MAAM,GAAG,KAAK,MAAM,IACpB,OAAO,GAAG,KAAK,MAAM,KAAK,YAC1B,UAAU,MAAM,QAAQ,KAAK;AAAA,UACnC,SAAS,WAAW;AACpB,iBAAO;AAAA,QACT;AACA,aAAK,QAAQ,GAAG;AAChB,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,OAAO,SAAU;AAAU,iBAAK,OAAO,EAAE;AAC7C,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,UAAID,WAAUA,QAAO,SAAS;AAC5B,QAAAA,QAAO,UAAU;AAAA,MACnB,WAAWC,WAAUA,QAAO,KAAK;AAC/B,QAAAA,QAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,SAAS;AAAA,MAChB;AAAA,IAEA;AAAA,MACE;AAAA,MACC,OAAO,UAAW,YAAY;AAAA;AAAA,MAC9B,OAAO,UAAW,cAAc;AAAA;AAAA,IACnC;AAAA;AAAA;;;ACnFA;AAAA;AAKA,KAAC,SAAS,QAAQC,SAAQC,SAAQ;AAElC,eAAS,OAAO,MAAM;AACpB,YAAI,KAAK;AAGT,WAAG,OAAO,WAAW;AAEnB,cAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG;AAC9B,cAAI,EAAE,CAAC;AAAG,eAAM,MAAM;AAAI,cAAI,IAAK,KAAK;AACxC,cAAI,EAAG,IAAI,IAAK,CAAC;AAAG,eAAK,IAAK,MAAM;AACpC,cAAI,EAAG,IAAI,IAAK,CAAC;AAAG,eAAK,IAAK,MAAM;AACpC,cAAI,EAAG,IAAI,IAAK,CAAC;AAAG,eAAK,IAAK,KAAK;AACnC,cAAI,EAAG,IAAI,IAAK,CAAC;AAAG,cAAI,IAAK,KAAK;AAAK,eAAK,IAAK,KAAK;AACtD,YAAE,CAAC,IAAI;AACP,aAAG,IAAK,IAAI,IAAK;AACjB,iBAAO;AAAA,QACT;AAEA,iBAAS,KAAKC,KAAIC,OAAM;AACtB,cAAI,GAAG,GAAG,IAAI,CAAC;AAEf,cAAIA,WAAUA,QAAO,IAAI;AAEvB,gBAAI,EAAE,CAAC,IAAIA;AAAA,UACb,OAAO;AAEL,YAAAA,QAAO,KAAKA;AACZ,iBAAK,IAAI,GAAG,IAAIA,MAAK,QAAQ,EAAE,GAAG;AAChC,gBAAE,IAAI,CAAC,IAAK,EAAE,IAAI,CAAC,KAAK,KACnBA,MAAK,WAAW,CAAC,IAAI,EAAG,IAAI,IAAK,CAAC,KAAK;AAAA,YAC9C;AAAA,UACF;AAEA,iBAAO,EAAE,SAAS;AAAG,cAAE,KAAK,CAAC;AAC7B,eAAK,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC,MAAM,GAAG,EAAE;AAAE;AACrC,cAAI,KAAK;AAAG,gBAAI,EAAE,CAAC,IAAI;AAAA;AAAS,gBAAI,EAAE,CAAC;AAEvC,UAAAD,IAAG,IAAI;AACP,UAAAA,IAAG,IAAI;AAGP,eAAK,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG;AACxB,YAAAA,IAAG,KAAK;AAAA,UACV;AAAA,QACF;AAEA,aAAK,IAAI,IAAI;AAAA,MACf;AAEA,eAAS,KAAK,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE,EAAE,MAAM;AAChB,UAAE,IAAI,EAAE;AACR,eAAO;AAAA,MACT;AAEA,eAAS,KAAK,MAAM,MAAM;AACxB,YAAI,QAAQ;AAAM,iBAAO,CAAE,oBAAI;AAC/B,YAAI,KAAK,IAAI,OAAO,IAAI,GACpB,QAAQ,QAAQ,KAAK,OACrB,OAAO,WAAW;AAAE,kBAAQ,GAAG,KAAK,MAAM,KAAK;AAAA,QAAa;AAChE,aAAK,SAAS,WAAW;AACvB,aAAG;AACD,gBAAI,MAAM,GAAG,KAAK,MAAM,IACpB,OAAO,GAAG,KAAK,MAAM,KAAK,YAC1B,UAAU,MAAM,QAAQ,KAAK;AAAA,UACnC,SAAS,WAAW;AACpB,iBAAO;AAAA,QACT;AACA,aAAK,QAAQ,GAAG;AAChB,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,MAAM;AAAG,iBAAK,OAAO,EAAE;AAC3B,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,UAAIF,WAAUA,QAAO,SAAS;AAC5B,QAAAA,QAAO,UAAU;AAAA,MACnB,WAAWC,WAAUA,QAAO,KAAK;AAC/B,QAAAA,QAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,YAAY;AAAA,MACnB;AAAA,IAEA;AAAA,MACE;AAAA,MACC,OAAO,UAAW,YAAY;AAAA;AAAA,MAC9B,OAAO,UAAW,cAAc;AAAA;AAAA,IACnC;AAAA;AAAA;;;AC/FA;AAAA;AAyBA,KAAC,SAAS,QAAQG,SAAQC,SAAQ;AAElC,eAAS,OAAO,MAAM;AACpB,YAAI,KAAK;AAGT,WAAG,OAAO,WAAW;AACnB,cAAI,IAAI,GAAG,GACP,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG;AAE3B,aAAG,IAAI,IAAK,IAAI,aAAc;AAE9B,cAAI,EAAG,IAAI,KAAM,GAAG;AACpB,cAAI,EAAE,IAAM,IAAI,IAAK,GAAI;AACzB,eAAK,KAAK;AACV,eAAK,KAAK;AACV,eAAK,MAAM;AACX,eAAK,MAAM;AAEX,cAAI,EAAE,CAAC,IAAI,IAAI;AACf,aAAG,IAAI;AAEP,iBAAQ,KAAK,IAAK,MAAM,MAAQ;AAAA,QAClC;AAEA,iBAAS,KAAKC,KAAIC,OAAM;AACtB,cAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,QAAQ;AACnC,cAAIA,WAAUA,QAAO,IAAI;AAEvB,gBAAIA;AACJ,YAAAA,QAAO;AAAA,UACT,OAAO;AAEL,YAAAA,QAAOA,QAAO;AACd,gBAAI;AACJ,oBAAQ,KAAK,IAAI,OAAOA,MAAK,MAAM;AAAA,UACrC;AAEA,eAAK,IAAI,GAAG,IAAI,KAAK,IAAI,OAAO,EAAE,GAAG;AAEnC,gBAAIA;AAAM,mBAAKA,MAAK,YAAY,IAAI,MAAMA,MAAK,MAAM;AAErD,gBAAI,MAAM;AAAG,kBAAI;AACjB,iBAAK,KAAK;AACV,iBAAK,MAAM;AACX,iBAAK,KAAK;AACV,iBAAK,MAAM;AACX,gBAAI,KAAK,GAAG;AACV,kBAAK,IAAI,aAAc;AACvB,kBAAK,EAAE,IAAI,GAAG,KAAM,IAAI;AACxB,kBAAK,KAAK,IAAK,IAAI,IAAI;AAAA,YACzB;AAAA,UACF;AAEA,cAAI,KAAK,KAAK;AACZ,eAAGA,SAAQA,MAAK,UAAU,KAAK,GAAG,IAAI;AAAA,UACxC;AAIA,cAAI;AACJ,eAAK,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG;AAC5B,gBAAI,EAAG,IAAI,KAAM,GAAG;AACpB,gBAAI,EAAE,IAAM,IAAI,IAAK,GAAI;AACzB,iBAAK,KAAK;AACV,iBAAK,KAAK;AACV,iBAAK,MAAM;AACX,iBAAK,MAAM;AACX,cAAE,CAAC,IAAI,IAAI;AAAA,UACb;AAEA,UAAAD,IAAG,IAAI;AACP,UAAAA,IAAG,IAAI;AACP,UAAAA,IAAG,IAAI;AAAA,QACT;AAEA,aAAK,IAAI,IAAI;AAAA,MACf;AAEA,eAAS,KAAK,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE,EAAE,MAAM;AAChB,eAAO;AAAA,MACT;AAAC;AAED,eAAS,KAAK,MAAM,MAAM;AACxB,YAAI,QAAQ;AAAM,iBAAO,CAAE,oBAAI;AAC/B,YAAI,KAAK,IAAI,OAAO,IAAI,GACpB,QAAQ,QAAQ,KAAK,OACrB,OAAO,WAAW;AAAE,kBAAQ,GAAG,KAAK,MAAM,KAAK;AAAA,QAAa;AAChE,aAAK,SAAS,WAAW;AACvB,aAAG;AACD,gBAAI,MAAM,GAAG,KAAK,MAAM,IACpB,OAAO,GAAG,KAAK,MAAM,KAAK,YAC1B,UAAU,MAAM,QAAQ,KAAK;AAAA,UACnC,SAAS,WAAW;AACpB,iBAAO;AAAA,QACT;AACA,aAAK,QAAQ,GAAG;AAChB,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,MAAM;AAAG,iBAAK,OAAO,EAAE;AAC3B,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,UAAIF,WAAUA,QAAO,SAAS;AAC5B,QAAAA,QAAO,UAAU;AAAA,MACnB,WAAWC,WAAUA,QAAO,KAAK;AAC/B,QAAAA,QAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,UAAU;AAAA,MACjB;AAAA,IAEA;AAAA,MACE;AAAA;AAAA,MACC,OAAO,UAAW,YAAY;AAAA;AAAA,MAC9B,OAAO,UAAW,cAAc;AAAA;AAAA,IACnC;AAAA;AAAA;;;ACjJA;AAAA;AAIA,KAAC,SAAS,QAAQG,SAAQC,SAAQ;AAElC,eAAS,OAAO,MAAM;AACpB,YAAI,KAAK,MAAM,UAAU;AAGzB,WAAG,OAAO,WAAW;AACnB,cAAI,IAAI,GAAG,GAAGC,KAAI,GAAG,GAAG,IAAI,GAAG,GAAGC,KAAI,GAAG;AACzC,cAAK,KAAK,KAAO,MAAM,IAAKD;AAC5B,UAAAA,KAAKA,KAAI,IAAK;AACd,cAAK,KAAK,KAAO,MAAM,IAAKC;AAC5B,UAAAA,KAAKA,KAAI,IAAK;AACd,aAAG,IAAI,IAAK,KAAK,KAAO,MAAM,KAAMD;AACpC,aAAG,IAAIA,KAAKA,KAAI,IAAK;AACrB,aAAG,IAAK,KAAK,KAAOA,OAAM,KAAMC;AAChC,iBAAO,GAAG,IAAKA,KAAI,IAAK;AAAA,QAC1B;AAkBA,WAAG,IAAI;AACP,WAAG,IAAI;AACP,WAAG,IAAI,aAAa;AACpB,WAAG,IAAI;AAEP,YAAI,SAAS,KAAK,MAAM,IAAI,GAAG;AAE7B,aAAG,IAAK,OAAO,aAAe;AAC9B,aAAG,IAAI,OAAO;AAAA,QAChB,OAAO;AAEL,qBAAW;AAAA,QACb;AAGA,iBAAS,IAAI,GAAG,IAAI,QAAQ,SAAS,IAAI,KAAK;AAC5C,aAAG,KAAK,QAAQ,WAAW,CAAC,IAAI;AAChC,aAAG,KAAK;AAAA,QACV;AAAA,MACF;AAEA,eAAS,KAAK,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,eAAO;AAAA,MACT;AAAC;AAED,eAAS,KAAK,MAAM,MAAM;AACxB,YAAI,KAAK,IAAI,OAAO,IAAI,GACpB,QAAQ,QAAQ,KAAK,OACrB,OAAO,WAAW;AAAE,kBAAQ,GAAG,KAAK,MAAM,KAAK;AAAA,QAAa;AAChE,aAAK,SAAS,WAAW;AACvB,aAAG;AACD,gBAAI,MAAM,GAAG,KAAK,MAAM,IACpB,OAAO,GAAG,KAAK,MAAM,KAAK,YAC1B,UAAU,MAAM,QAAQ,KAAK;AAAA,UACnC,SAAS,WAAW;AACpB,iBAAO;AAAA,QACT;AACA,aAAK,QAAQ,GAAG;AAChB,aAAK,QAAQ;AACb,YAAI,OAAO;AACT,cAAI,OAAO,SAAU;AAAU,iBAAK,OAAO,EAAE;AAC7C,eAAK,QAAQ,WAAW;AAAE,mBAAO,KAAK,IAAI,CAAC,CAAC;AAAA,UAAG;AAAA,QACjD;AACA,eAAO;AAAA,MACT;AAEA,UAAIH,WAAUA,QAAO,SAAS;AAC5B,QAAAA,QAAO,UAAU;AAAA,MACnB,WAAWC,WAAUA,QAAO,KAAK;AAC/B,QAAAA,QAAO,WAAW;AAAE,iBAAO;AAAA,QAAM,CAAC;AAAA,MACpC,OAAO;AACL,aAAK,SAAS;AAAA,MAChB;AAAA,IAEA;AAAA,MACE;AAAA,MACC,OAAO,UAAW,YAAY;AAAA;AAAA,MAC9B,OAAO,UAAW,cAAc;AAAA;AAAA,IACnC;AAAA;AAAA;;;ACpGA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,0FAA0F,GAAG,qIAAqI;AAAA,QACjP;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAwBA,KAAC,SAAU,QAAQ,MAAM,MAAM;AAK/B,UAAI,QAAQ,KACR,SAAS,GACT,SAAS,IACT,UAAU,UACV,aAAa,KAAK,IAAI,OAAO,MAAM,GACnC,eAAe,KAAK,IAAI,GAAG,MAAM,GACjC,WAAW,eAAe,GAC1B,OAAO,QAAQ,GACf;AAMJ,eAASG,YAAW,MAAM,SAAS,UAAU;AAC3C,YAAI,MAAM,CAAC;AACX,kBAAW,WAAW,OAAQ,EAAE,SAAS,KAAK,IAAK,WAAW,CAAC;AAG/D,YAAI,YAAY,OAAO;AAAA,UACrB,QAAQ,UAAU,CAAC,MAAM,SAAS,IAAI,CAAC,IACtC,QAAQ,OAAQ,SAAS,IAAI;AAAA,UAAM;AAAA,QAAC,GAAG,GAAG;AAG7C,YAAI,OAAO,IAAI,KAAK,GAAG;AAIvB,YAAI,OAAO,WAAW;AACpB,cAAI,IAAI,KAAK,EAAE,MAAM,GACjB,IAAI,YACJC,KAAI;AACR,iBAAO,IAAI,cAAc;AACvB,iBAAK,IAAIA,MAAK;AACd,iBAAK;AACL,YAAAA,KAAI,KAAK,EAAE,CAAC;AAAA,UACd;AACA,iBAAO,KAAK,UAAU;AACpB,iBAAK;AACL,iBAAK;AACL,YAAAA,QAAO;AAAA,UACT;AACA,kBAAQ,IAAIA,MAAK;AAAA,QACnB;AAEA,aAAK,QAAQ,WAAW;AAAE,iBAAO,KAAK,EAAE,CAAC,IAAI;AAAA,QAAG;AAChD,aAAK,QAAQ,WAAW;AAAE,iBAAO,KAAK,EAAE,CAAC,IAAI;AAAA,QAAa;AAC1D,aAAK,SAAS;AAGd,eAAO,SAAS,KAAK,CAAC,GAAG,IAAI;AAG7B,gBAAQ,QAAQ,QAAQ,YACpB,SAASC,OAAMC,OAAM,cAAc,OAAO;AACxC,cAAI,OAAO;AAET,gBAAI,MAAM,GAAG;AAAE,mBAAK,OAAO,IAAI;AAAA,YAAG;AAElC,YAAAD,MAAK,QAAQ,WAAW;AAAE,qBAAO,KAAK,MAAM,CAAC,CAAC;AAAA,YAAG;AAAA,UACnD;AAIA,cAAI,cAAc;AAAE,iBAAK,OAAO,IAAIA;AAAM,mBAAOC;AAAA,UAAM;AAIlD,mBAAOD;AAAA,QACd;AAAA,UACJ;AAAA,UACA;AAAA,UACA,YAAY,UAAU,QAAQ,SAAU,QAAQ;AAAA,UAChD,QAAQ;AAAA,QAAK;AAAA,MACf;AAYA,eAAS,KAAK,KAAK;AACjB,YAAI,GAAG,SAAS,IAAI,QAChB,KAAK,MAAM,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAGvD,YAAI,CAAC,QAAQ;AAAE,gBAAM,CAAC,QAAQ;AAAA,QAAG;AAGjC,eAAO,IAAI,OAAO;AAChB,YAAE,CAAC,IAAI;AAAA,QACT;AACA,aAAK,IAAI,GAAG,IAAI,OAAO,KAAK;AAC1B,YAAE,CAAC,IAAI,EAAE,IAAI,OAAQ,IAAI,IAAI,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC,EAAG;AACtD,YAAE,CAAC,IAAI;AAAA,QACT;AAGA,SAAC,GAAG,IAAI,SAASE,QAAO;AAEtB,cAAIC,IAAG,IAAI,GACPC,KAAI,GAAG,GAAGC,KAAI,GAAG,GAAGC,KAAI,GAAG;AAC/B,iBAAOJ,UAAS;AACd,YAAAC,KAAIG,GAAEF,KAAI,OAAQA,KAAI,CAAE;AACxB,gBAAI,IAAI,QAAQE,GAAE,QAASA,GAAEF,EAAC,IAAIE,GAAED,KAAI,OAAQA,KAAIF,EAAE,MAAMG,GAAED,EAAC,IAAIF,GAAG;AAAA,UACxE;AACA,aAAG,IAAIC;AAAG,aAAG,IAAIC;AACjB,iBAAO;AAAA,QAIT,GAAG,KAAK;AAAA,MACV;AAMA,eAAS,KAAK,GAAG,GAAG;AAClB,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE;AACR,UAAE,IAAI,EAAE,EAAE,MAAM;AAChB,eAAO;AAAA,MACT;AAAC;AAMD,eAAS,QAAQ,KAAK,OAAO;AAC3B,YAAI,SAAS,CAAC,GAAG,MAAO,OAAO,KAAM;AACrC,YAAI,SAAS,OAAO,UAAU;AAC5B,eAAK,QAAQ,KAAK;AAChB,gBAAI;AAAE,qBAAO,KAAK,QAAQ,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC;AAAA,YAAG,SAAS,GAAG;AAAA,YAAC;AAAA,UACjE;AAAA,QACF;AACA,eAAQ,OAAO,SAAS,SAAS,OAAO,WAAW,MAAM,MAAM;AAAA,MACjE;AAOA,eAAS,OAAO,MAAM,KAAK;AACzB,YAAI,aAAa,OAAO,IAAI,OAAO,IAAI;AACvC,eAAO,IAAI,WAAW,QAAQ;AAC5B,cAAI,OAAO,CAAC,IACV,QAAS,SAAS,IAAI,OAAO,CAAC,IAAI,MAAM,WAAW,WAAW,GAAG;AAAA,QACrE;AACA,eAAO,SAAS,GAAG;AAAA,MACrB;AAOA,eAAS,WAAW;AAClB,YAAI;AACF,cAAIE;AACJ,cAAI,eAAeA,OAAM,WAAW,cAAc;AAEhD,YAAAA,OAAMA,KAAI,KAAK;AAAA,UACjB,OAAO;AACL,YAAAA,OAAM,IAAI,WAAW,KAAK;AAC1B,aAAC,OAAO,UAAU,OAAO,UAAU,gBAAgBA,IAAG;AAAA,UACxD;AACA,iBAAO,SAASA,IAAG;AAAA,QACrB,SAAS,GAAG;AACV,cAAI,UAAU,OAAO,WACjB,UAAU,WAAW,QAAQ;AACjC,iBAAO,CAAC,CAAC,oBAAI,QAAM,QAAQ,SAAS,OAAO,QAAQ,SAAS,IAAI,CAAC;AAAA,QACnE;AAAA,MACF;AAMA,eAAS,SAASC,IAAG;AACnB,eAAO,OAAO,aAAa,MAAM,GAAGA,EAAC;AAAA,MACvC;AASA,aAAO,KAAK,OAAO,GAAG,IAAI;AAM1B,UAAK,OAAO,UAAW,YAAY,OAAO,SAAS;AACjD,eAAO,UAAUV;AAEjB,YAAI;AACF,uBAAa;AAAA,QACf,SAAS,IAAI;AAAA,QAAC;AAAA,MAChB,WAAY,OAAO,UAAW,cAAc,OAAO,KAAK;AACtD,eAAO,WAAW;AAAE,iBAAOA;AAAA,QAAY,CAAC;AAAA,MAC1C,OAAO;AAEL,aAAK,SAAS,OAAO,IAAIA;AAAA,MAC3B;AAAA,IAIA;AAAA;AAAA;AAAA,MAGG,OAAO,SAAS,cAAe,OAAO;AAAA,MACvC,CAAC;AAAA;AAAA,MACD;AAAA;AAAA,IACF;AAAA;AAAA;;;AC5PA,IAAAW,sBAAA;AAAA;AAYA,QAAI,OAAO;AAKX,QAAI,SAAS;AAKb,QAAI,SAAS;AAQb,QAAI,YAAY;AAShB,QAAI,UAAU;AAOd,QAAI,SAAS;AAIb,QAAI,KAAK;AAET,OAAG,OAAO;AACV,OAAG,SAAS;AACZ,OAAG,SAAS;AACZ,OAAG,YAAY;AACf,OAAG,UAAU;AACb,OAAG,SAAS;AAEZ,WAAO,UAAU;AAAA;AAAA;;;AChDX,IAAO,wBAAP,cAAqC,MAAK;EACrC,oBAAiB;AAC1B,UAAM,kBAAiB;AAEvB,UAAM,KAAK,KAAK,MAAM;AACtB,UAAM,aAAa,KAAK,MAAM;AAC9B,UAAM,IAAI,KAAK,KAAK,KAAK,IAAI;AAQ7B,MAAE,WAAW,EAAE,OAAO;MACrB,iBAAiB;MACjB,iBAAiB;MACjB,OAAO;MACP,QAAQ;MACR,QAAQ,SAAS,IAAI,KAAK,OAAO,EAAE,MAAM,EAAC,CAAE;MAC5C,WAAW;MACX,cAAc;MACd,kBAAkB;MAClB,aAAa;MACb,iBAAuB,IAAU,KAAK;KACtC;AAED,MAAE,eAAe,EAAE,OAAO;MACzB,WAAW;MACX,oBAAoB;MACpB,UAAU;MACV,YAAY;MACZ,iBAAiB;MACjB,aAAa;KACb;AAED,MAAE,iBAAiB,CAAC,MAAM,CAAC,EAAE,OAAO;MACnC,iBAAiB;KACjB;AAED;AACC,YAAM,OAAO,EAAE,SAAS,CAAC,aAAa,MAAM,CAAC;AAE7C,WAAK,OAAO;QACX,SAAS;QACT,SAAS;QACT,UAAU;QACV,eAAe;QACf,YAAY;QACZ,cAAc;QACd,aAAa;QACb,MAAM;QACN,cAAc;QACd,mBAAmB;QACnB,UAAU;OACV;AAED,eAAS,MAAM,QAAQ,IAAI,iBAAiB;;AAG7C;AACC,YAAM,OAAO,EAAE,eAAe;AAE9B,WAAK,OAAO;QACX,YAAY;QACZ,UAAU;QACV,aAAa;QACb,eAAe;QACf,UAAU;QACV,UAAU;OACV;AAED,eAAS,MAAM,UAAU,IAAI,MAAM;;AAGpC,MAAE,UAAU,CAAC,mBAAmB,OAAO,CAAC,EAAE,OAAO;MAChD,UAAU;MACV,aAAa;MACb,eAAe;MACf,QAAQ;MACR,UAAU;KACV;AAED,MAAE,UAAU,CAAC,mBAAmB,SAAS,OAAO,CAAC,EAAE,OAAO;MACzD,UAAU;MACV,SAAS;MACT,aAAa;MACb,iBAAiB;MACjB,eAAe;MACf,QAAQ;MACR,OAAO;MACP,aAAa;KACb;AAED,MAAE,UAAU,CAAC,mBAAmB,SAAS,OAAO,CAAC,EAAE,OAAO,OAAO,YAAY,EAAE,SAAS,GAAG,OAAO,KAAK,iBAAiB,EAAC,CAAE;AAC3H,MAAE,UAAU,CAAC,mBAAmB,SAAS,OAAO,CAAC,EAAE,OAAO,OAAO,iBAAiB,EAAE,OAAO,KAAK,SAAS,GAAG,iBAAiB,EAAC,CAAE;AAChI,MAAE,UAAU,CAAC,mBAAmB,SAAS,OAAO,CAAC,EAAE,OAAO,OAAO,SAAS,EAAE,OAAO,MAAM,iBAAiB,EAAC,CAAE;AAC7G,MAAE,UAAU,CAAC,mBAAmB,SAAS,OAAO,CAAC,EAAE,OAAO,OAAO,UAAU,EAAE,SAAS,GAAG,iBAAiB,EAAC,CAAE;AAS7G,MAAE,eAAe,EAAE,OAAO;MACzB,aAAa;MACb,QAAQ;KACR;AAED;AACC,YAAM,OAAO,EAAE,SAAS,CAAC,YAAY,CAAC;AAEtC,WAAK,OAAO;QACX,cAAc;QACd,aAAa;QACb,iBAAiB;QACjB,cAAc;QACd,MAAM;OACN;AAED,eAAS,MAAM,QAAQ,IAAI,eAAe;;AAG3C;AACC,YAAM,OAAO,EAAE,SAAS,CAAC,YAAY,CAAC,EAAE,OAAO,OAAO,SAAS,CAAA,CAAE;AACjE,eAAS,MAAM,QAAQ,IAAI,oBAAoB;;AAGhD;AACC,YAAM,OAAO,EAAE,SAAS,CAAC,YAAY,CAAC,EAAE,OAAO,OAAO,QAAQ,EAAE,wBAAwB,EAAC,CAAE;AAC3F,eAAS,MAAM,QAAQ,IAAI,mBAAmB;;AAG/C;AACC,YAAM,OAAO,EAAE,SAAS,CAAC,cAAc,MAAM,CAAC;AAE9C,WAAK,OAAO;QACX,cAAc;QACd,MAAM;QACN,YAAY;QACZ,iBAAiB;OACjB;AAED,eAAS,MAAM,QAAQ,IAAI,eAAe;;AAG3C;AACC,YAAM,OAAO,EAAE,oBAAoB,CAAC,cAAc,SAAS,YAAY,CAAC;AAExE,WAAK,OAAO;QACX,aAAa;OACb;AAED,eAAS,MAAM,QAAQ,IAAI,YAAY;;AAUxC,MAAE,WAAW,EAAE,OAAO;MACrB,WAAW;MACX,SAAS;MACT,cAAc;KACd;AAED,MAAE,iBAAiB,CAAC,WAAW,CAAC,EAAE,OAAO;MACxC,oBAAoB;KACpB;AAED,MAAE,iBAAiB,CAAC,WAAW,CAAC,EAAE,OAAO,OAAO,UAAU;MACzD,SAAS;MACT,SAAS;KACT;AAED;AACC,YAAM,OAAO,EAAE,SAAS,CAAC,aAAa,MAAM,CAAC;AAE7C,WAAK,OAAO;QACX,GAAG;QACH,GAAG;QACH,SAAS;QACT,SAAS;QACT,eAAe;QACf,YAAY;QACZ,aAAa;QACb,cAAc;QACd,UAAU;QACV,cAAc;QACd,MAAM;QACN,mBAAmB;QACnB,UAAU;OACV;AAED,eAAS,MAAM,QAAQ,IAAI,iBAAiB;;AAG7C,MAAE,SAAS,CAAC,cAAc,aAAa,MAAM,CAAC,EAAE,OAAO;MACtD,UAAU;KACV;AAED;AACC,YAAM,OAAO,EAAE,oBAAoB,CAAC,aAAa,QAAQ,OAAO,CAAC;AAEjE,WAAK,OAAO;QACX,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;OAChB;AAED,eAAS,MAAM,UAAU,IAAI,YAAY;;AAG1C,MAAE,oBAAoB,CAAC,aAAa,QAAQ,SAAS,MAAM,CAAC,EAAE,OAAO;MACpE,aAAa;KACb;AASD,MAAE,UAAU,EAAE,OAAO;MACpB,kBAAkB;KAClB;AAED,MAAE,iBAAiB,CAAC,UAAU,CAAC,EAAE,OAAO;MACvC,oBAAoB;KACpB;AAED,MAAE,iBAAiB,CAAC,UAAU,CAAC,EAAE,OAAO,OAAO,UAAU;MACxD,SAAS;MACT,SAAS;KACT;AAED;AACC,YAAM,OAAO,EAAE,SAAS,CAAC,YAAY,QAAQ,OAAO,CAAC;AAErD,WAAK,OAAO;QACX,eAAe;QACf,aAAa;QACb,cAAc;OACd;AAED,eAAS,MAAM,UAAU,IAAI,YAAY;;AAG1C,MAAE,SAAS,CAAC,YAAY,QAAQ,SAAS,MAAM,CAAC,EAAE,OAAO;MACxD,aAAa;KACb;AAED;AACC,YAAM,OAAO,EAAE,eAAe,CAAC,YAAY,MAAM,CAAC;AAElD,WAAK,OAAO;QACX,GAAG;QACH,GAAG;QACH,UAAU;QACV,eAAe;QACf,YAAY;QACZ,aAAa;QACb,cAAc;QACd,SAAS;QACT,cAAc;QACd,MAAM;QACN,mBAAmB;QACnB,UAAU;QACV,YAAY;QACZ,UAAU;OACV;AAED,eAAS,MAAM,QAAQ,IAAI,iBAAiB;;AAU7C,MAAE,eAAe,EAAE,OAAO;MACzB,WAAW,QAAQ,CAAC;MACpB,WAAW,QAAQ,CAAC;MACpB,eAAe;MACf,gBAAgB;MAChB,kBAAkB;MAClB,eAAe;MACf,kBAAkB;MAClB,aAAa;MACb,kBAAkB;MAClB,SAAS;MACT,WAAW;MACX,cAAc;MACd,UAAU;KACV;AASD,MAAE,MAAM,EAAE,OAAO;MAChB,aAAa;MACb,aAAa;MACb,cAAc;MACd,YAAY;MACZ,eAAe;MACf,kBAAkB;MAClB,SAAS;MACT,WAAW;MACX,cAAc;MACd,UAAU;KACV;AASD,MAAE,MAAM,EAAE,OAAO;MAChB,aAAa;MACb,YAAY;MACZ,eAAe;MACf,cAAc;MACd,aAAa;KACb;AAED;AACC,YAAM,OAAO,EAAE,SAAS,CAAC,QAAQ,MAAM,CAAC;AAExC,WAAK,OAAO;QACX,SAAS;QACT,SAAS;QACT,eAAe;QACf,YAAY;QACZ,aAAa;QACb,cAAc;QACd,cAAc;QACd,MAAM;QACN,mBAAmB;QACnB,UAAU;OACV;AAED,eAAS,MAAM,QAAQ,IAAI,iBAAiB;;AAG7C;AACC,YAAM,OAAO,EAAE,UAAU,CAAC,QAAQ,QAAQ,OAAO,CAAC;AAElD,WAAK,OAAO;QACX,eAAe;QACf,aAAa;QACb,aAAa;OACb;AAED,eAAS,MAAM,UAAU,IAAI,YAAY;;AAI1C,MAAE,qBAAqB,EAAE,OAAO;MAC/B,WAAW;KACX;AAED,MAAE,qBAAqB,EAAE,OAAO,OAAO,UAAU,EAAE,OAAO,GAAG,SAAS,GAAG,SAAS,MAAK,CAAE;AASzF,MAAE,SAAS,EAAE,OAAO;MACnB,SAAS;MACT,iBAAiB;KACjB;AAED;AACC,YAAM,OAAO,EAAE,SAAS,CAAC,WAAW,MAAM,CAAC;AAE3C,WAAK,OAAO;QACX,GAAG;QACH,GAAG;QACH,SAAS;QACT,SAAS;QACT,eAAe;QACf,YAAY;QACZ,aAAa;QACb,cAAc;QACd,cAAc;QACd,MAAM;QACN,mBAAmB;QACnB,UAAU;OACV;AAED,eAAS,MAAM,QAAQ,IAAI,iBAAiB;;AAG7C,MAAE,iBAAiB,CAAC,WAAW,MAAM,CAAC,EAAE,OAAO;MAC9C,UAAU,QAAQ,EAAE;MACpB,YAAY;MACZ,UAAU;KACV;AAED;AACC,YAAM,OAAO,EAAE,oBAAoB,CAAC,WAAW,QAAQ,OAAO,CAAC;AAE/D,WAAK,OAAO;QACX,eAAe;QACf,aAAa;QACb,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,gBAAgB;QAChB,aAAa;OACb;AAED,eAAS,MAAM,UAAU,IAAI,YAAY;;AAU1C;AACC,QAAE,gBAAgB,EAAE,OAAO;QAC1B,MAAM;QACN,gBAAgB;QAChB,kBAAkB;QAClB,mBAAmB;QACnB,kBAAkB;OAClB;;AAGF;AACC,YAAM,OAAO,EAAE,YAAY,CAAC,kBAAkB,QAAQ,OAAO,CAAC;AAE9D,WAAK,OAAO;QACX,eAAe;QACf,aAAa;QACb,aAAa;OACb;AAED,eAAS,MAAM,UAAU,IAAI,YAAY;;AAG1C;AACC,QAAE,WAAW,CAAC,aAAa,QAAQ,SAAS,QAAQ,CAAC,EAAE,OAAO;QAC7D,aAAa;OACb;;AAGF;AACC,YAAM,OAAO,EAAE,SAAS,CAAC,gBAAgB,CAAC;AAE1C,WAAK,OAAO;QACX,SAAS;QACT,SAAS;QACT,eAAe;QACf,YAAY;QACZ,aAAa;QACb,cAAc;QACd,cAAc;QACd,MAAM;QACN,mBAAmB;QACnB,UAAU;QACV,OAAO;OACP;AAED,eAAS,MAAM,QAAQ,IAAI,iBAAiB;;EAG9C;;;;ACndK,IAAO,gBAAP,cAA6B,UAAS;EAA5C,cAAA;;AA6BC,WAAA,eAAA,MAAA,UAAA;;;;aAA8C,IAAI,aACjD,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,MAAM,KAAK,KAAK,OAAO;QAC5B,WAAkB,UAAU,KAAK,OAAO,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,OAAO,CAAC;QAChF,YAAY,iBAAiB,IAAI,KAAK,OAAO;UAC5C,WAAW,CAAC,YAAY;SACxB;SACC,CAAC,KAAK,OAAO,QAAQ,CAAC,CAAC;;AAU3B,WAAA,eAAA,MAAA,aAAA;;;;;;EA+CD;;;;EAxFQ,UAAU,UAAsC;AACtD,UAAM,QAAQ,KAAK,OAAO,KAAI;AAC9B,UAAM,aAAa,QAAQ;AAC3B,UAAM,OAAO,OAAO,SAAS,CAAA,CAAE;AAC/B,UAAM,OAAO,OAAO,QAAQ,CAAA,CAAE;AAC9B,UAAM,OAAO,GAAG,SAAS,MAAK;AAC7B,YAAM,SAAS,KAAK,IAAI,QAAQ;AAChC,UAAI,QAAQ;AACX,eAAO,eAAe,QAAQ;;IAEhC,CAAC;AAED,SAAK,OAAO,KAAK,KAAK;AAEtB,WAAO;EACR;EA4BU,YAAS;AAClB,SAAK,eAAe,KAAK,sBAAsB,IAAI,KAAK,KAAK,CAAC;AAC9D,SAAK,UAAU,YAAmB,UAAU,KAAK,UAAU,WAAW,CAAC,YAAY,CAAC;AAEpF,UAAM,UAAS;EAChB;EAEO,WAAQ;AACd,UAAM,SAAQ;AACd,QAAI,KAAK,QAAQ,QAAQ,GAAG;AAC3B,YAAM,SAAS,KAAK,IAAI,QAAQ;AAChC,YAAM,WAAW,KAAK,cAAc;AACpC,UAAI,UAAU,UAAU;AACvB,aAAK,YAAY,OAAO,OAAO,GAAG,oBAAoB,CAAC,UAAS;AAC/D,eAAK,gBAAgB,MAAM,QAAQ;QACpC,CAAC;iBAEO,UAAU;AAClB,YAAI,KAAK,WAAW;AACnB,eAAK,UAAU,QAAO;;;AAIxB,WAAK,gBAAgB,OAAO,IAAI,kBAAkB,CAAC;;EAErD;EAEU,gBAAgB,UAAkD;AAC3E,SAAK,IAAI,aAAa,KAAK,OAAM,CAAE;AACnC,SAAK,SAAS,MAAK;AACnB,SAAK,OAAO,MAAK;AAEjB,QAAI,UAAU;AACb,UAAI,SAAS;AAEb,aAAO,QAAQ;AACd,YAAI,QAAQ,KAAK,UAAU,MAAM;AACjC,YAAI,UAAU,UAAU;AACvB,gBAAM,OAAO,MAAM;;AAEpB,aAAK,SAAS,UAAU,OAAO,CAAC;AAChC,iBAAS,OAAO,IAAI,QAAQ;;;EAG/B;;AArDA,OAAA,eAAA,eAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,eAAA,cAAA;;;;SAA0C,UAAU,WAAW,OAAO,CAAC,cAAc,SAAS,CAAC;;;;AC3D1F,IAAO,gBAAP,cAA6B,UAAS;EAA5C,cAAA;;AAKC,WAAA,eAAA,MAAA,UAAA;;;;;;AAUA,WAAA,eAAA,MAAA,kBAAA;;;;;;EAuDD;EArDW,YAAS;AAClB,UAAM,UAAS;AAEf,SAAK,OAAO,OAAO,YAAY,CAAA,CAAE;AACjC,SAAK,OAAO,OAAO,SAAS,CAAA,CAAE;AAC9B,SAAK,OAAO,OAAO,iBAAiB,CAAA,CAAE;AAEtC,SAAK,GAAG,YAAY,MAAK;AACxB,YAAM,WAAW,KAAK;AACtB,UAAI,CAAC,SAAS,IAAI,UAAU,GAAG;AAC9B,aAAK,IAAI,YAAY,IAAI;AACzB;;AAGD,YAAM,WAAW,KAAK,IAAI,UAAU;AACpC,YAAM,SAAS,KAAK;AAEpB,UAAI,YAAY,QAAQ;AACvB,YAAI,SAAS,IAAI,UAAU,KAAK,UAAU;AACzC,cAAI,UAAU;AACb,mBAAO,gBAAgB,QAAQ;iBAE3B;AACJ,mBAAO,eAAe,UAAU,OAAO,IAAI,aAAa,CAAC,GAAG,CAAC;;;;IAIjE,CAAC;EACF;EAEO,WAAQ;AACd,UAAM,SAAQ;AAEd,QAAI,KAAK,QAAQ,WAAW,GAAG;AAC9B,YAAM,YAAY,KAAK,IAAI,WAAW;AAEtC,UAAI,aAAa,YAAY;AAC5B,aAAK,iBAAiB,KAAK,OAAO,GAAG,SAAS,MAAK;AAClD,cAAI,CAAC,KAAK,aAAa;AACtB,gBAAI,SAAS,KAAK;AAClB,gBAAI,QAAQ;AACX,qBAAO,eAAe,KAAK,QAAwC;;;QAGtE,CAAC;aAEG;AACJ,YAAI,KAAK,gBAAgB;AACxB,eAAK,eAAe,QAAO;;;;EAI/B;;AA3DA,OAAA,eAAA,eAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,eAAA,cAAA;;;;SAA0C,UAAU,WAAW,OAAO,CAAC,cAAc,SAAS,CAAC;;;;AC1BhG,SAAS,MAAM,MAAM;AACnB,MAAIC,OAAM,GACN,WAAW,KAAK,UAChB,IAAI,YAAY,SAAS;AAC7B,MAAI,CAAC;AAAG,IAAAA,OAAM;AAAA;AACT,WAAO,EAAE,KAAK;AAAG,MAAAA,QAAO,SAAS,CAAC,EAAE;AACzC,OAAK,QAAQA;AACf;AAEe,SAAR,gBAAmB;AACxB,SAAO,KAAK,UAAU,KAAK;AAC7B;;;ACXe,SAAR,aAAiB,UAAU,MAAM;AACtC,MAAIC,SAAQ;AACZ,aAAW,QAAQ,MAAM;AACvB,aAAS,KAAK,MAAM,MAAM,EAAEA,QAAO,IAAI;AAAA,EACzC;AACA,SAAO;AACT;;;ACNe,SAAR,mBAAiB,UAAU,MAAM;AACtC,MAAI,OAAO,MAAM,QAAQ,CAAC,IAAI,GAAG,UAAU,GAAGC,SAAQ;AACtD,SAAO,OAAO,MAAM,IAAI,GAAG;AACzB,aAAS,KAAK,MAAM,MAAM,EAAEA,QAAO,IAAI;AACvC,QAAI,WAAW,KAAK,UAAU;AAC5B,WAAK,IAAI,SAAS,SAAS,GAAG,KAAK,GAAG,EAAE,GAAG;AACzC,cAAM,KAAK,SAAS,CAAC,CAAC;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;;;ACXe,SAAR,kBAAiB,UAAU,MAAM;AACtC,MAAI,OAAO,MAAM,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,UAAU,GAAG,GAAGC,SAAQ;AACpE,SAAO,OAAO,MAAM,IAAI,GAAG;AACzB,SAAK,KAAK,IAAI;AACd,QAAI,WAAW,KAAK,UAAU;AAC5B,WAAK,IAAI,GAAG,IAAI,SAAS,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC3C,cAAM,KAAK,SAAS,CAAC,CAAC;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AACA,SAAO,OAAO,KAAK,IAAI,GAAG;AACxB,aAAS,KAAK,MAAM,MAAM,EAAEA,QAAO,IAAI;AAAA,EACzC;AACA,SAAO;AACT;;;ACde,SAAR,aAAiB,UAAU,MAAM;AACtC,MAAIC,SAAQ;AACZ,aAAW,QAAQ,MAAM;AACvB,QAAI,SAAS,KAAK,MAAM,MAAM,EAAEA,QAAO,IAAI,GAAG;AAC5C,aAAO;AAAA,IACT;AAAA,EACF;AACF;;;ACPe,SAAR,YAAiB,OAAO;AAC7B,SAAO,KAAK,UAAU,SAAS,MAAM;AACnC,QAAIC,OAAM,CAAC,MAAM,KAAK,IAAI,KAAK,GAC3B,WAAW,KAAK,UAChB,IAAI,YAAY,SAAS;AAC7B,WAAO,EAAE,KAAK;AAAG,MAAAA,QAAO,SAAS,CAAC,EAAE;AACpC,SAAK,QAAQA;AAAA,EACf,CAAC;AACH;;;ACRe,SAAR,aAAiB,SAAS;AAC/B,SAAO,KAAK,WAAW,SAAS,MAAM;AACpC,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,KAAK,OAAO;AAAA,IAC5B;AAAA,EACF,CAAC;AACH;;;ACNe,SAAR,aAAiB,KAAK;AAC3B,MAAI,QAAQ,MACR,WAAW,oBAAoB,OAAO,GAAG,GACzC,QAAQ,CAAC,KAAK;AAClB,SAAO,UAAU,UAAU;AACzB,YAAQ,MAAM;AACd,UAAM,KAAK,KAAK;AAAA,EAClB;AACA,MAAI,IAAI,MAAM;AACd,SAAO,QAAQ,UAAU;AACvB,UAAM,OAAO,GAAG,GAAG,GAAG;AACtB,UAAM,IAAI;AAAA,EACZ;AACA,SAAO;AACT;AAEA,SAAS,oBAAoBC,IAAG,GAAG;AACjC,MAAIA,OAAM;AAAG,WAAOA;AACpB,MAAI,SAASA,GAAE,UAAU,GACrB,SAAS,EAAE,UAAU,GACrBC,KAAI;AACR,EAAAD,KAAI,OAAO,IAAI;AACf,MAAI,OAAO,IAAI;AACf,SAAOA,OAAM,GAAG;AACd,IAAAC,KAAID;AACJ,IAAAA,KAAI,OAAO,IAAI;AACf,QAAI,OAAO,IAAI;AAAA,EACjB;AACA,SAAOC;AACT;;;AC7Be,SAAR,oBAAmB;AACxB,MAAI,OAAO,MAAM,QAAQ,CAAC,IAAI;AAC9B,SAAO,OAAO,KAAK,QAAQ;AACzB,UAAM,KAAK,IAAI;AAAA,EACjB;AACA,SAAO;AACT;;;ACNe,SAAR,sBAAmB;AACxB,SAAO,MAAM,KAAK,IAAI;AACxB;;;ACFe,SAAR,iBAAmB;AACxB,MAAI,SAAS,CAAC;AACd,OAAK,WAAW,SAAS,MAAM;AAC7B,QAAI,CAAC,KAAK,UAAU;AAClB,aAAO,KAAK,IAAI;AAAA,IAClB;AAAA,EACF,CAAC;AACD,SAAO;AACT;;;ACRe,SAAR,gBAAmB;AACxB,MAAI,OAAO,MAAM,QAAQ,CAAC;AAC1B,OAAK,KAAK,SAAS,MAAM;AACvB,QAAI,SAAS,MAAM;AACjB,YAAM,KAAK,EAAC,QAAQ,KAAK,QAAQ,QAAQ,KAAI,CAAC;AAAA,IAChD;AAAA,EACF,CAAC;AACD,SAAO;AACT;;;ACRe,UAAR,mBAAoB;AACzB,MAAI,OAAO,MAAM,SAAS,OAAO,CAAC,IAAI,GAAG,UAAU,GAAG;AACtD,KAAG;AACD,cAAU,KAAK,QAAQ,GAAG,OAAO,CAAC;AAClC,WAAO,OAAO,QAAQ,IAAI,GAAG;AAC3B,YAAM;AACN,UAAI,WAAW,KAAK,UAAU;AAC5B,aAAK,IAAI,GAAG,IAAI,SAAS,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC3C,eAAK,KAAK,SAAS,CAAC,CAAC;AAAA,QACvB;AAAA,MACF;AAAA,IACF;AAAA,EACF,SAAS,KAAK;AAChB;;;ACCe,SAAR,UAA2B,MAAM,UAAU;AAChD,MAAI,gBAAgB,KAAK;AACvB,WAAO,CAAC,QAAW,IAAI;AACvB,QAAI,aAAa;AAAW,iBAAW;AAAA,EACzC,WAAW,aAAa,QAAW;AACjC,eAAW;AAAA,EACb;AAEA,MAAI,OAAO,IAAI,KAAK,IAAI,GACpB,MACA,QAAQ,CAAC,IAAI,GACb,OACA,QACA,GACA;AAEJ,SAAO,OAAO,MAAM,IAAI,GAAG;AACzB,SAAK,SAAS,SAAS,KAAK,IAAI,OAAO,KAAK,SAAS,MAAM,KAAK,MAAM,GAAG,SAAS;AAChF,WAAK,WAAW;AAChB,WAAK,IAAI,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AAC3B,cAAM,KAAK,QAAQ,OAAO,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;AAClD,cAAM,SAAS;AACf,cAAM,QAAQ,KAAK,QAAQ;AAAA,MAC7B;AAAA,IACF;AAAA,EACF;AAEA,SAAO,KAAK,WAAW,aAAa;AACtC;AAEA,SAAS,YAAY;AACnB,SAAO,UAAU,IAAI,EAAE,WAAW,QAAQ;AAC5C;AAEA,SAAS,eAAe,GAAG;AACzB,SAAO,EAAE;AACX;AAEA,SAAS,YAAY,GAAG;AACtB,SAAO,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI;AACnC;AAEA,SAAS,SAAS,MAAM;AACtB,MAAI,KAAK,KAAK,UAAU;AAAW,SAAK,QAAQ,KAAK,KAAK;AAC1D,OAAK,OAAO,KAAK,KAAK;AACxB;AAEO,SAAS,cAAc,MAAM;AAClC,MAAI,SAAS;AACb;AAAG,SAAK,SAAS;AAAA,UACT,OAAO,KAAK,WAAY,KAAK,SAAS,EAAE;AAClD;AAEO,SAAS,KAAK,MAAM;AACzB,OAAK,OAAO;AACZ,OAAK,QACL,KAAK,SAAS;AACd,OAAK,SAAS;AAChB;AAEA,KAAK,YAAY,UAAU,YAAY;AAAA,EACrC,aAAa;AAAA,EACb,OAAO;AAAA,EACP,MAAM;AAAA,EACN,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,WAAW;AAAA,EACX,aAAa;AAAA,EACb,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,MAAM;AAAA,EACN,CAAC,OAAO,QAAQ,GAAG;AACrB;;;AC1FO,SAAS,SAAS,GAAG;AAC1B,SAAO,KAAK,OAAO,OAAO,SAAS,CAAC;AACtC;AAEO,SAAS,SAAS,GAAG;AAC1B,MAAI,OAAO,MAAM;AAAY,UAAM,IAAI;AACvC,SAAO;AACT;;;ACPO,SAAS,eAAe;AAC7B,SAAO;AACT;AAEe,SAAR,iBAAiBC,IAAG;AACzB,SAAO,WAAW;AAChB,WAAOA;AAAA,EACT;AACF;;;ACPA,IAAM,IAAI;AACV,IAAM,IAAI;AACV,IAAM,IAAI;AAEK,SAAR,cAAmB;AACxB,MAAI,IAAI;AACR,SAAO,OAAO,KAAK,IAAI,IAAI,KAAK,KAAK;AACvC;;;ACRe,SAAR,cAAiBC,IAAG;AACzB,SAAO,OAAOA,OAAM,YAAY,YAAYA,KACxCA,KACA,MAAM,KAAKA,EAAC;AAClB;AAEO,SAAS,QAAQC,QAAO,QAAQ;AACrC,MAAIC,KAAID,OAAM,QACV,GACA;AAEJ,SAAOC,IAAG;AACR,QAAI,OAAO,IAAIA,OAAM;AACrB,QAAID,OAAMC,EAAC;AACX,IAAAD,OAAMC,EAAC,IAAID,OAAM,CAAC;AAClB,IAAAA,OAAM,CAAC,IAAI;AAAA,EACb;AAEA,SAAOA;AACT;;;ACZO,SAAS,kBAAkB,SAAS,QAAQ;AACjD,MAAI,IAAI,GAAG,KAAK,UAAU,QAAQ,MAAM,KAAK,OAAO,GAAG,MAAM,GAAG,QAAQ,IAAI,CAAC,GAAG,GAAG;AAEnF,SAAO,IAAI,GAAG;AACZ,QAAI,QAAQ,CAAC;AACb,QAAI,KAAK,aAAa,GAAG,CAAC;AAAG,QAAE;AAAA;AAC1B,UAAI,aAAa,IAAI,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI;AAAA,EACpD;AAEA,SAAO;AACT;AAEA,SAAS,YAAY,GAAG,GAAG;AACzB,MAAI,GAAG;AAEP,MAAI,gBAAgB,GAAG,CAAC;AAAG,WAAO,CAAC,CAAC;AAGpC,OAAK,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,GAAG;AAC7B,QAAI,YAAY,GAAG,EAAE,CAAC,CAAC,KAChB,gBAAgB,cAAc,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACjD,aAAO,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,IACjB;AAAA,EACF;AAGA,OAAK,IAAI,GAAG,IAAI,EAAE,SAAS,GAAG,EAAE,GAAG;AACjC,SAAK,IAAI,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,GAAG;AACjC,UAAI,YAAY,cAAc,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,KACrC,YAAY,cAAc,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,KACxC,YAAY,cAAc,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,KACxC,gBAAgB,cAAc,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;AACvD,eAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;AAAA,MACvB;AAAA,IACF;AAAA,EACF;AAGA,QAAM,IAAI;AACZ;AAEA,SAAS,YAAYE,IAAG,GAAG;AACzB,MAAI,KAAKA,GAAE,IAAI,EAAE,GAAG,KAAK,EAAE,IAAIA,GAAE,GAAG,KAAK,EAAE,IAAIA,GAAE;AACjD,SAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C;AAEA,SAAS,aAAaA,IAAG,GAAG;AAC1B,MAAI,KAAKA,GAAE,IAAI,EAAE,IAAI,KAAK,IAAIA,GAAE,GAAG,EAAE,GAAG,CAAC,IAAI,MAAM,KAAK,EAAE,IAAIA,GAAE,GAAG,KAAK,EAAE,IAAIA,GAAE;AAChF,SAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C;AAEA,SAAS,gBAAgBA,IAAG,GAAG;AAC7B,WAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,GAAG;AACjC,QAAI,CAAC,aAAaA,IAAG,EAAE,CAAC,CAAC,GAAG;AAC1B,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEA,SAAS,aAAa,GAAG;AACvB,UAAQ,EAAE,QAAQ;AAAA,IAChB,KAAK;AAAG,aAAO,cAAc,EAAE,CAAC,CAAC;AAAA,IACjC,KAAK;AAAG,aAAO,cAAc,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAAA,IACvC,KAAK;AAAG,aAAO,cAAc,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAAA,EAC/C;AACF;AAEA,SAAS,cAAcA,IAAG;AACxB,SAAO;AAAA,IACL,GAAGA,GAAE;AAAA,IACL,GAAGA,GAAE;AAAA,IACL,GAAGA,GAAE;AAAA,EACP;AACF;AAEA,SAAS,cAAcA,IAAG,GAAG;AAC3B,MAAI,KAAKA,GAAE,GAAG,KAAKA,GAAE,GAAG,KAAKA,GAAE,GAC3BC,MAAK,EAAE,GAAGC,MAAK,EAAE,GAAG,KAAK,EAAE,GAC3B,MAAMD,MAAK,IAAI,MAAMC,MAAK,IAAI,MAAM,KAAK,IACzC,IAAI,KAAK,KAAK,MAAM,MAAM,MAAM,GAAG;AACvC,SAAO;AAAA,IACL,IAAI,KAAKD,MAAK,MAAM,IAAI,OAAO;AAAA,IAC/B,IAAI,KAAKC,MAAK,MAAM,IAAI,OAAO;AAAA,IAC/B,IAAI,IAAI,KAAK,MAAM;AAAA,EACrB;AACF;AAEA,SAAS,cAAcF,IAAG,GAAGG,IAAG;AAC9B,MAAI,KAAKH,GAAE,GAAG,KAAKA,GAAE,GAAG,KAAKA,GAAE,GAC3BC,MAAK,EAAE,GAAGC,MAAK,EAAE,GAAG,KAAK,EAAE,GAC3B,KAAKC,GAAE,GAAG,KAAKA,GAAE,GAAG,KAAKA,GAAE,GAC3BC,MAAK,KAAKH,KACVI,MAAK,KAAK,IACV,KAAK,KAAKH,KACV,KAAK,KAAK,IACVI,MAAK,KAAK,IACVC,MAAK,KAAK,IACV,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAC9B,KAAK,KAAKN,MAAKA,MAAKC,MAAKA,MAAK,KAAK,IACnC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IACnC,KAAKG,MAAK,KAAKD,MAAK,IACpB,MAAM,KAAK,KAAK,KAAK,OAAO,KAAK,KAAK,IACtC,MAAM,KAAKE,MAAK,KAAKC,OAAM,IAC3B,MAAMF,MAAK,KAAKD,MAAK,OAAO,KAAK,KAAK,IACtC,MAAMA,MAAKG,MAAKF,MAAKC,OAAM,IAC3B,IAAI,KAAK,KAAK,KAAK,KAAK,GACxB,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAC7B,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,IAC7B,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,QAAQ,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,IAAI;AAClF,SAAO;AAAA,IACL,GAAG,KAAK,KAAK,KAAK;AAAA,IAClB,GAAG,KAAK,KAAK,KAAK;AAAA,IAClB;AAAA,EACF;AACF;;;ACtHA,SAAS,MAAM,GAAGE,IAAGC,IAAG;AACtB,MAAI,KAAK,EAAE,IAAID,GAAE,GAAGE,IAAGC,KACnB,KAAK,EAAE,IAAIH,GAAE,GAAGI,IAAG,IACnB,KAAK,KAAK,KAAK,KAAK;AACxB,MAAI,IAAI;AACN,IAAAD,MAAKH,GAAE,IAAIC,GAAE,GAAGE,OAAMA;AACtB,SAAK,EAAE,IAAIF,GAAE,GAAG,MAAM;AACtB,QAAIE,MAAK,IAAI;AACX,MAAAD,MAAK,KAAK,KAAKC,QAAO,IAAI;AAC1B,MAAAC,KAAI,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,KAAKF,KAAIA,EAAC,CAAC;AAC1C,MAAAD,GAAE,IAAI,EAAE,IAAIC,KAAI,KAAKE,KAAI;AACzB,MAAAH,GAAE,IAAI,EAAE,IAAIC,KAAI,KAAKE,KAAI;AAAA,IAC3B,OAAO;AACL,MAAAF,MAAK,KAAKC,MAAK,OAAO,IAAI;AAC1B,MAAAC,KAAI,KAAK,KAAK,KAAK,IAAI,GAAGD,MAAK,KAAKD,KAAIA,EAAC,CAAC;AAC1C,MAAAD,GAAE,IAAID,GAAE,IAAIE,KAAI,KAAKE,KAAI;AACzB,MAAAH,GAAE,IAAID,GAAE,IAAIE,KAAI,KAAKE,KAAI;AAAA,IAC3B;AAAA,EACF,OAAO;AACL,IAAAH,GAAE,IAAID,GAAE,IAAIC,GAAE;AACd,IAAAA,GAAE,IAAID,GAAE;AAAA,EACV;AACF;AAEA,SAAS,WAAWA,IAAG,GAAG;AACxB,MAAI,KAAKA,GAAE,IAAI,EAAE,IAAI,MAAM,KAAK,EAAE,IAAIA,GAAE,GAAG,KAAK,EAAE,IAAIA,GAAE;AACxD,SAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAC5C;AAEA,SAAS,MAAM,MAAM;AACnB,MAAIA,KAAI,KAAK,GACT,IAAI,KAAK,KAAK,GACd,KAAKA,GAAE,IAAI,EAAE,GACb,MAAMA,GAAE,IAAI,EAAE,IAAI,EAAE,IAAIA,GAAE,KAAK,IAC/B,MAAMA,GAAE,IAAI,EAAE,IAAI,EAAE,IAAIA,GAAE,KAAK;AACnC,SAAO,KAAK,KAAK,KAAK;AACxB;AAEA,SAASK,MAAK,QAAQ;AACpB,OAAK,IAAI;AACT,OAAK,OAAO;AACZ,OAAK,WAAW;AAClB;AAEO,SAAS,mBAAmB,SAAS,QAAQ;AAClD,MAAI,EAAE,KAAK,UAAU,cAAM,OAAO,GAAG;AAAS,WAAO;AAErD,MAAIL,IAAG,GAAGC,IAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI;AAGrC,EAAAD,KAAI,QAAQ,CAAC,GAAGA,GAAE,IAAI,GAAGA,GAAE,IAAI;AAC/B,MAAI,EAAE,IAAI;AAAI,WAAOA,GAAE;AAGvB,MAAI,QAAQ,CAAC,GAAGA,GAAE,IAAI,CAAC,EAAE,GAAG,EAAE,IAAIA,GAAE,GAAG,EAAE,IAAI;AAC7C,MAAI,EAAE,IAAI;AAAI,WAAOA,GAAE,IAAI,EAAE;AAG7B,QAAM,GAAGA,IAAGC,KAAI,QAAQ,CAAC,CAAC;AAG1B,EAAAD,KAAI,IAAIK,MAAKL,EAAC,GAAG,IAAI,IAAIK,MAAK,CAAC,GAAGJ,KAAI,IAAII,MAAKJ,EAAC;AAChD,EAAAD,GAAE,OAAOC,GAAE,WAAW;AACtB,IAAE,OAAOD,GAAE,WAAWC;AACtB,EAAAA,GAAE,OAAO,EAAE,WAAWD;AAGtB;AAAM,SAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC5B,YAAMA,GAAE,GAAG,EAAE,GAAGC,KAAI,QAAQ,CAAC,CAAC,GAAGA,KAAI,IAAII,MAAKJ,EAAC;AAK/C,UAAI,EAAE,MAAM,IAAID,GAAE,UAAU,KAAK,EAAE,EAAE,GAAG,KAAKA,GAAE,EAAE;AACjD,SAAG;AACD,YAAI,MAAM,IAAI;AACZ,cAAI,WAAW,EAAE,GAAGC,GAAE,CAAC,GAAG;AACxB,gBAAI,GAAGD,GAAE,OAAO,GAAG,EAAE,WAAWA,IAAG,EAAE;AACrC,qBAAS;AAAA,UACX;AACA,gBAAM,EAAE,EAAE,GAAG,IAAI,EAAE;AAAA,QACrB,OAAO;AACL,cAAI,WAAW,EAAE,GAAGC,GAAE,CAAC,GAAG;AACxB,YAAAD,KAAI,GAAGA,GAAE,OAAO,GAAG,EAAE,WAAWA,IAAG,EAAE;AACrC,qBAAS;AAAA,UACX;AACA,gBAAM,EAAE,EAAE,GAAG,IAAI,EAAE;AAAA,QACrB;AAAA,MACF,SAAS,MAAM,EAAE;AAGjB,MAAAC,GAAE,WAAWD,IAAGC,GAAE,OAAO,GAAGD,GAAE,OAAO,EAAE,WAAW,IAAIC;AAGtD,WAAK,MAAMD,EAAC;AACZ,cAAQC,KAAIA,GAAE,UAAU,GAAG;AACzB,aAAK,KAAK,MAAMA,EAAC,KAAK,IAAI;AACxB,UAAAD,KAAIC,IAAG,KAAK;AAAA,QACd;AAAA,MACF;AACA,UAAID,GAAE;AAAA,IACR;AAGA,EAAAA,KAAI,CAAC,EAAE,CAAC,GAAGC,KAAI;AAAG,UAAQA,KAAIA,GAAE,UAAU;AAAG,IAAAD,GAAE,KAAKC,GAAE,CAAC;AAAG,EAAAA,KAAI,kBAAkBD,IAAG,MAAM;AAGzF,OAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAG,IAAAA,KAAI,QAAQ,CAAC,GAAGA,GAAE,KAAKC,GAAE,GAAGD,GAAE,KAAKC,GAAE;AAE7D,SAAOA,GAAE;AACX;;;AC7GA,SAAS,cAAc,GAAG;AACxB,SAAO,KAAK,KAAK,EAAE,KAAK;AAC1B;AAEe,SAAR,eAAmB;AACxB,MAAI,SAAS,MACT,KAAK,GACL,KAAK,GACL,UAAU;AAEd,WAAS,KAAK,MAAM;AAClB,UAAM,SAAS,YAAI;AACnB,SAAK,IAAI,KAAK,GAAG,KAAK,IAAI,KAAK;AAC/B,QAAI,QAAQ;AACV,WAAK,WAAW,WAAW,MAAM,CAAC,EAC7B,UAAU,mBAAmB,SAAS,KAAK,MAAM,CAAC,EAClD,WAAW,eAAe,CAAC,CAAC;AAAA,IACnC,OAAO;AACL,WAAK,WAAW,WAAW,aAAa,CAAC,EACpC,UAAU,mBAAmB,cAAc,GAAG,MAAM,CAAC,EACrD,UAAU,mBAAmB,SAAS,KAAK,IAAI,KAAK,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,EACxE,WAAW,eAAe,KAAK,IAAI,IAAI,EAAE,KAAK,IAAI,KAAK,EAAE,CAAC;AAAA,IACjE;AACA,WAAO;AAAA,EACT;AAEA,OAAK,SAAS,SAASK,IAAG;AACxB,WAAO,UAAU,UAAU,SAAS,SAASA,EAAC,GAAG,QAAQ;AAAA,EAC3D;AAEA,OAAK,OAAO,SAASA,IAAG;AACtB,WAAO,UAAU,UAAU,KAAK,CAACA,GAAE,CAAC,GAAG,KAAK,CAACA,GAAE,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE;AAAA,EACpE;AAEA,OAAK,UAAU,SAASA,IAAG;AACzB,WAAO,UAAU,UAAU,UAAU,OAAOA,OAAM,aAAaA,KAAI,iBAAS,CAACA,EAAC,GAAG,QAAQ;AAAA,EAC3F;AAEA,SAAO;AACT;AAEA,SAAS,WAAW,QAAQ;AAC1B,SAAO,SAAS,MAAM;AACpB,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,IAAI,KAAK,IAAI,GAAG,CAAC,OAAO,IAAI,KAAK,CAAC;AAAA,IACzC;AAAA,EACF;AACF;AAEA,SAAS,mBAAmB,SAAS,GAAG,QAAQ;AAC9C,SAAO,SAAS,MAAM;AACpB,QAAI,WAAW,KAAK,UAAU;AAC5B,UAAI,UACA,GACA,IAAI,SAAS,QACb,IAAI,QAAQ,IAAI,IAAI,KAAK,GACzB;AAEJ,UAAI;AAAG,aAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAG,mBAAS,CAAC,EAAE,KAAK;AAChD,UAAI,mBAAmB,UAAU,MAAM;AACvC,UAAI;AAAG,aAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAG,mBAAS,CAAC,EAAE,KAAK;AAChD,WAAK,IAAI,IAAI;AAAA,IACf;AAAA,EACF;AACF;AAEA,SAAS,eAAe,GAAG;AACzB,SAAO,SAAS,MAAM;AACpB,QAAI,SAAS,KAAK;AAClB,SAAK,KAAK;AACV,QAAI,QAAQ;AACV,WAAK,IAAI,OAAO,IAAI,IAAI,KAAK;AAC7B,WAAK,IAAI,OAAO,IAAI,IAAI,KAAK;AAAA,IAC/B;AAAA,EACF;AACF;;;AChFe,SAAR,cAAiB,MAAM;AAC5B,OAAK,KAAK,KAAK,MAAM,KAAK,EAAE;AAC5B,OAAK,KAAK,KAAK,MAAM,KAAK,EAAE;AAC5B,OAAK,KAAK,KAAK,MAAM,KAAK,EAAE;AAC5B,OAAK,KAAK,KAAK,MAAM,KAAK,EAAE;AAC9B;;;ACLe,SAAR,aAAiB,QAAQ,IAAI,IAAI,IAAI,IAAI;AAC9C,MAAI,QAAQ,OAAO,UACf,MACA,IAAI,IACJ,IAAI,MAAM,QACV,IAAI,OAAO,UAAU,KAAK,MAAM,OAAO;AAE3C,SAAO,EAAE,IAAI,GAAG;AACd,WAAO,MAAM,CAAC,GAAG,KAAK,KAAK,IAAI,KAAK,KAAK;AACzC,SAAK,KAAK,IAAI,KAAK,KAAK,MAAM,KAAK,QAAQ;AAAA,EAC7C;AACF;;;ACRe,SAAR,oBAAmB;AACxB,MAAI,KAAK,GACL,KAAK,GACL,UAAU,GACVC,SAAQ;AAEZ,WAAS,UAAU,MAAM;AACvB,QAAI,IAAI,KAAK,SAAS;AACtB,SAAK,KACL,KAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK,KAAK;AACf,SAAK,WAAW,aAAa,IAAI,CAAC,CAAC;AACnC,QAAIA;AAAO,WAAK,WAAW,aAAS;AACpC,WAAO;AAAA,EACT;AAEA,WAAS,aAAaC,KAAI,GAAG;AAC3B,WAAO,SAAS,MAAM;AACpB,UAAI,KAAK,UAAU;AACjB,qBAAY,MAAM,KAAK,IAAIA,OAAM,KAAK,QAAQ,KAAK,GAAG,KAAK,IAAIA,OAAM,KAAK,QAAQ,KAAK,CAAC;AAAA,MAC1F;AACA,UAAI,KAAK,KAAK,IACV,KAAK,KAAK,IACV,KAAK,KAAK,KAAK,SACf,KAAK,KAAK,KAAK;AACnB,UAAI,KAAK;AAAI,aAAK,MAAM,KAAK,MAAM;AACnC,UAAI,KAAK;AAAI,aAAK,MAAM,KAAK,MAAM;AACnC,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,KAAK;AACV,WAAK,KAAK;AAAA,IACZ;AAAA,EACF;AAEA,YAAU,QAAQ,SAASC,IAAG;AAC5B,WAAO,UAAU,UAAUF,SAAQ,CAAC,CAACE,IAAG,aAAaF;AAAA,EACvD;AAEA,YAAU,OAAO,SAASE,IAAG;AAC3B,WAAO,UAAU,UAAU,KAAK,CAACA,GAAE,CAAC,GAAG,KAAK,CAACA,GAAE,CAAC,GAAG,aAAa,CAAC,IAAI,EAAE;AAAA,EACzE;AAEA,YAAU,UAAU,SAASA,IAAG;AAC9B,WAAO,UAAU,UAAU,UAAU,CAACA,IAAG,aAAa;AAAA,EACxD;AAEA,SAAO;AACT;;;ACjDA,SAAS,kBAAkBC,IAAG,GAAG;AAC/B,SAAOA,GAAE,WAAW,EAAE,SAAS,IAAI;AACrC;AAUA,SAAS,SAAS,GAAG;AACnB,MAAI,WAAW,EAAE;AACjB,SAAO,WAAW,SAAS,CAAC,IAAI,EAAE;AACpC;AAGA,SAAS,UAAU,GAAG;AACpB,MAAI,WAAW,EAAE;AACjB,SAAO,WAAW,SAAS,SAAS,SAAS,CAAC,IAAI,EAAE;AACtD;AAIA,SAAS,YAAY,IAAI,IAAI,OAAO;AAClC,MAAI,SAAS,SAAS,GAAG,IAAI,GAAG;AAChC,KAAG,KAAK;AACR,KAAG,KAAK;AACR,KAAG,KAAK;AACR,KAAG,KAAK;AACR,KAAG,KAAK;AACV;AAKA,SAAS,cAAc,GAAG;AACxB,MAAI,QAAQ,GACR,SAAS,GACT,WAAW,EAAE,UACb,IAAI,SAAS,QACb;AACJ,SAAO,EAAE,KAAK,GAAG;AACf,QAAI,SAAS,CAAC;AACd,MAAE,KAAK;AACP,MAAE,KAAK;AACP,aAAS,EAAE,KAAK,UAAU,EAAE;AAAA,EAC9B;AACF;AAIA,SAAS,aAAa,KAAK,GAAG,UAAU;AACtC,SAAO,IAAI,EAAE,WAAW,EAAE,SAAS,IAAI,IAAI;AAC7C;AAEA,SAAS,SAAS,MAAM,GAAG;AACzB,OAAK,IAAI;AACT,OAAK,SAAS;AACd,OAAK,WAAW;AAChB,OAAK,IAAI;AACT,OAAK,IAAI;AACT,OAAK,IAAI;AACT,OAAK,IAAI;AACT,OAAK,IAAI;AACT,OAAK,IAAI;AACT,OAAK,IAAI;AACT,OAAK,IAAI;AACX;AAEA,SAAS,YAAY,OAAO,OAAO,KAAK,SAAS;AAEjD,SAAS,SAAS,MAAM;AACtB,MAAI,OAAO,IAAI,SAAS,MAAM,CAAC,GAC3B,MACA,QAAQ,CAAC,IAAI,GACb,OACA,UACA,GACA;AAEJ,SAAO,OAAO,MAAM,IAAI,GAAG;AACzB,QAAI,WAAW,KAAK,EAAE,UAAU;AAC9B,WAAK,WAAW,IAAI,MAAM,IAAI,SAAS,MAAM;AAC7C,WAAK,IAAI,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AAC3B,cAAM,KAAK,QAAQ,KAAK,SAAS,CAAC,IAAI,IAAI,SAAS,SAAS,CAAC,GAAG,CAAC,CAAC;AAClE,cAAM,SAAS;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AAEA,GAAC,KAAK,SAAS,IAAI,SAAS,MAAM,CAAC,GAAG,WAAW,CAAC,IAAI;AACtD,SAAO;AACT;AAGe,SAAR,eAAmB;AACxB,MAAI,aAAa,mBACb,KAAK,GACL,KAAK,GACL,WAAW;AAEf,WAAS,KAAK,MAAM;AAClB,QAAI,IAAI,SAAS,IAAI;AAGrB,MAAE,UAAU,SAAS,GAAG,EAAE,OAAO,IAAI,CAAC,EAAE;AACxC,MAAE,WAAW,UAAU;AAGvB,QAAI;AAAU,WAAK,WAAW,QAAQ;AAAA,SAIjC;AACH,UAAI,OAAO,MACP,QAAQ,MACR,SAAS;AACb,WAAK,WAAW,SAAS,MAAM;AAC7B,YAAI,KAAK,IAAI,KAAK;AAAG,iBAAO;AAC5B,YAAI,KAAK,IAAI,MAAM;AAAG,kBAAQ;AAC9B,YAAI,KAAK,QAAQ,OAAO;AAAO,mBAAS;AAAA,MAC1C,CAAC;AACD,UAAI,IAAI,SAAS,QAAQ,IAAI,WAAW,MAAM,KAAK,IAAI,GACnD,KAAK,IAAI,KAAK,GACd,KAAK,MAAM,MAAM,IAAI,IAAI,KACzB,KAAK,MAAM,OAAO,SAAS;AAC/B,WAAK,WAAW,SAAS,MAAM;AAC7B,aAAK,KAAK,KAAK,IAAI,MAAM;AACzB,aAAK,IAAI,KAAK,QAAQ;AAAA,MACxB,CAAC;AAAA,IACH;AAEA,WAAO;AAAA,EACT;AAMA,WAAS,UAAU,GAAG;AACpB,QAAI,WAAW,EAAE,UACb,WAAW,EAAE,OAAO,UACpB,IAAI,EAAE,IAAI,SAAS,EAAE,IAAI,CAAC,IAAI;AAClC,QAAI,UAAU;AACZ,oBAAc,CAAC;AACf,UAAI,YAAY,SAAS,CAAC,EAAE,IAAI,SAAS,SAAS,SAAS,CAAC,EAAE,KAAK;AACnE,UAAI,GAAG;AACL,UAAE,IAAI,EAAE,IAAI,WAAW,EAAE,GAAG,EAAE,CAAC;AAC/B,UAAE,IAAI,EAAE,IAAI;AAAA,MACd,OAAO;AACL,UAAE,IAAI;AAAA,MACR;AAAA,IACF,WAAW,GAAG;AACZ,QAAE,IAAI,EAAE,IAAI,WAAW,EAAE,GAAG,EAAE,CAAC;AAAA,IACjC;AACA,MAAE,OAAO,IAAI,UAAU,GAAG,GAAG,EAAE,OAAO,KAAK,SAAS,CAAC,CAAC;AAAA,EACxD;AAGA,WAAS,WAAW,GAAG;AACrB,MAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO;AACvB,MAAE,KAAK,EAAE,OAAO;AAAA,EAClB;AAaA,WAAS,UAAU,GAAG,GAAG,UAAU;AACjC,QAAI,GAAG;AACL,UAAI,MAAM,GACN,MAAM,GACN,MAAM,GACN,MAAM,IAAI,OAAO,SAAS,CAAC,GAC3B,MAAM,IAAI,GACV,MAAM,IAAI,GACV,MAAM,IAAI,GACV,MAAM,IAAI,GACV;AACJ,aAAO,MAAM,UAAU,GAAG,GAAG,MAAM,SAAS,GAAG,GAAG,OAAO,KAAK;AAC5D,cAAM,SAAS,GAAG;AAClB,cAAM,UAAU,GAAG;AACnB,YAAI,IAAI;AACR,gBAAQ,IAAI,IAAI,MAAM,IAAI,IAAI,MAAM,WAAW,IAAI,GAAG,IAAI,CAAC;AAC3D,YAAI,QAAQ,GAAG;AACb,sBAAY,aAAa,KAAK,GAAG,QAAQ,GAAG,GAAG,KAAK;AACpD,iBAAO;AACP,iBAAO;AAAA,QACT;AACA,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AAAA,MACb;AACA,UAAI,OAAO,CAAC,UAAU,GAAG,GAAG;AAC1B,YAAI,IAAI;AACR,YAAI,KAAK,MAAM;AAAA,MACjB;AACA,UAAI,OAAO,CAAC,SAAS,GAAG,GAAG;AACzB,YAAI,IAAI;AACR,YAAI,KAAK,MAAM;AACf,mBAAW;AAAA,MACb;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAEA,WAAS,SAAS,MAAM;AACtB,SAAK,KAAK;AACV,SAAK,IAAI,KAAK,QAAQ;AAAA,EACxB;AAEA,OAAK,aAAa,SAASC,IAAG;AAC5B,WAAO,UAAU,UAAU,aAAaA,IAAG,QAAQ;AAAA,EACrD;AAEA,OAAK,OAAO,SAASA,IAAG;AACtB,WAAO,UAAU,UAAU,WAAW,OAAO,KAAK,CAACA,GAAE,CAAC,GAAG,KAAK,CAACA,GAAE,CAAC,GAAG,QAAS,WAAW,OAAO,CAAC,IAAI,EAAE;AAAA,EACzG;AAEA,OAAK,WAAW,SAASA,IAAG;AAC1B,WAAO,UAAU,UAAU,WAAW,MAAM,KAAK,CAACA,GAAE,CAAC,GAAG,KAAK,CAACA,GAAE,CAAC,GAAG,QAAS,WAAW,CAAC,IAAI,EAAE,IAAI;AAAA,EACrG;AAEA,SAAO;AACT;;;AC5Oe,SAAR,cAAiB,QAAQ,IAAI,IAAI,IAAI,IAAI;AAC9C,MAAI,QAAQ,OAAO,UACf,MACA,IAAI,IACJ,IAAI,MAAM,QACV,IAAI,OAAO,UAAU,KAAK,MAAM,OAAO;AAE3C,SAAO,EAAE,IAAI,GAAG;AACd,WAAO,MAAM,CAAC,GAAG,KAAK,KAAK,IAAI,KAAK,KAAK;AACzC,SAAK,KAAK,IAAI,KAAK,KAAK,MAAM,KAAK,QAAQ;AAAA,EAC7C;AACF;;;ACRO,IAAI,OAAO,IAAI,KAAK,KAAK,CAAC,KAAK;AAE/B,SAAS,cAAc,OAAO,QAAQ,IAAI,IAAI,IAAI,IAAI;AAC3D,MAAI,OAAO,CAAC,GACR,QAAQ,OAAO,UACf,KACA,WACA,KAAK,GACL,KAAK,GACL,IAAI,MAAM,QACV,IAAI,IACJ,QAAQ,OAAO,OACf,UACA,UACA,UACA,UACA,UACA,OACA;AAEJ,SAAO,KAAK,GAAG;AACb,SAAK,KAAK,IAAI,KAAK,KAAK;AAGxB;AAAG,iBAAW,MAAM,IAAI,EAAE;AAAA,WAAc,CAAC,YAAY,KAAK;AAC1D,eAAW,WAAW;AACtB,YAAQ,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE,KAAK,QAAQ;AAC9C,WAAO,WAAW,WAAW;AAC7B,eAAW,KAAK,IAAI,WAAW,MAAM,OAAO,QAAQ;AAGpD,WAAO,KAAK,GAAG,EAAE,IAAI;AACnB,kBAAY,YAAY,MAAM,EAAE,EAAE;AAClC,UAAI,YAAY;AAAU,mBAAW;AACrC,UAAI,YAAY;AAAU,mBAAW;AACrC,aAAO,WAAW,WAAW;AAC7B,iBAAW,KAAK,IAAI,WAAW,MAAM,OAAO,QAAQ;AACpD,UAAI,WAAW,UAAU;AAAE,oBAAY;AAAW;AAAA,MAAO;AACzD,iBAAW;AAAA,IACb;AAGA,SAAK,KAAK,MAAM,EAAC,OAAO,UAAU,MAAM,KAAK,IAAI,UAAU,MAAM,MAAM,IAAI,EAAE,EAAC,CAAC;AAC/E,QAAI,IAAI;AAAM,mBAAY,KAAK,IAAI,IAAI,IAAI,QAAQ,MAAM,KAAK,WAAW,QAAQ,EAAE;AAAA;AAC9E,oBAAa,KAAK,IAAI,IAAI,QAAQ,MAAM,KAAK,WAAW,QAAQ,IAAI,EAAE;AAC3E,aAAS,UAAU,KAAK;AAAA,EAC1B;AAEA,SAAO;AACT;AAEA,IAAO,mBAAS,SAAS,OAAO,OAAO;AAErC,WAAS,SAAS,QAAQ,IAAI,IAAI,IAAI,IAAI;AACxC,kBAAc,OAAO,QAAQ,IAAI,IAAI,IAAI,EAAE;AAAA,EAC7C;AAEA,WAAS,QAAQ,SAASC,IAAG;AAC3B,WAAO,QAAQA,KAAI,CAACA,MAAK,IAAIA,KAAI,CAAC;AAAA,EACpC;AAEA,SAAO;AACT,EAAG,GAAG;;;AC5DS,SAAR,kBAAmB;AACxB,MAAI,OAAO,kBACPC,SAAQ,OACR,KAAK,GACL,KAAK,GACL,eAAe,CAAC,CAAC,GACjB,eAAe,cACf,aAAa,cACb,eAAe,cACf,gBAAgB,cAChB,cAAc;AAElB,WAAS,QAAQ,MAAM;AACrB,SAAK,KACL,KAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,WAAW,YAAY;AAC5B,mBAAe,CAAC,CAAC;AACjB,QAAIA;AAAO,WAAK,WAAW,aAAS;AACpC,WAAO;AAAA,EACT;AAEA,WAAS,aAAa,MAAM;AAC1B,QAAI,IAAI,aAAa,KAAK,KAAK,GAC3B,KAAK,KAAK,KAAK,GACf,KAAK,KAAK,KAAK,GACf,KAAK,KAAK,KAAK,GACf,KAAK,KAAK,KAAK;AACnB,QAAI,KAAK;AAAI,WAAK,MAAM,KAAK,MAAM;AACnC,QAAI,KAAK;AAAI,WAAK,MAAM,KAAK,MAAM;AACnC,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AACV,QAAI,KAAK,UAAU;AACjB,UAAI,aAAa,KAAK,QAAQ,CAAC,IAAI,aAAa,IAAI,IAAI;AACxD,YAAM,YAAY,IAAI,IAAI;AAC1B,YAAM,WAAW,IAAI,IAAI;AACzB,YAAM,aAAa,IAAI,IAAI;AAC3B,YAAM,cAAc,IAAI,IAAI;AAC5B,UAAI,KAAK;AAAI,aAAK,MAAM,KAAK,MAAM;AACnC,UAAI,KAAK;AAAI,aAAK,MAAM,KAAK,MAAM;AACnC,WAAK,MAAM,IAAI,IAAI,IAAI,EAAE;AAAA,IAC3B;AAAA,EACF;AAEA,UAAQ,QAAQ,SAASC,IAAG;AAC1B,WAAO,UAAU,UAAUD,SAAQ,CAAC,CAACC,IAAG,WAAWD;AAAA,EACrD;AAEA,UAAQ,OAAO,SAASC,IAAG;AACzB,WAAO,UAAU,UAAU,KAAK,CAACA,GAAE,CAAC,GAAG,KAAK,CAACA,GAAE,CAAC,GAAG,WAAW,CAAC,IAAI,EAAE;AAAA,EACvE;AAEA,UAAQ,OAAO,SAASA,IAAG;AACzB,WAAO,UAAU,UAAU,OAAO,SAASA,EAAC,GAAG,WAAW;AAAA,EAC5D;AAEA,UAAQ,UAAU,SAASA,IAAG;AAC5B,WAAO,UAAU,SAAS,QAAQ,aAAaA,EAAC,EAAE,aAAaA,EAAC,IAAI,QAAQ,aAAa;AAAA,EAC3F;AAEA,UAAQ,eAAe,SAASA,IAAG;AACjC,WAAO,UAAU,UAAU,eAAe,OAAOA,OAAM,aAAaA,KAAI,iBAAS,CAACA,EAAC,GAAG,WAAW;AAAA,EACnG;AAEA,UAAQ,eAAe,SAASA,IAAG;AACjC,WAAO,UAAU,SAAS,QAAQ,WAAWA,EAAC,EAAE,aAAaA,EAAC,EAAE,cAAcA,EAAC,EAAE,YAAYA,EAAC,IAAI,QAAQ,WAAW;AAAA,EACvH;AAEA,UAAQ,aAAa,SAASA,IAAG;AAC/B,WAAO,UAAU,UAAU,aAAa,OAAOA,OAAM,aAAaA,KAAI,iBAAS,CAACA,EAAC,GAAG,WAAW;AAAA,EACjG;AAEA,UAAQ,eAAe,SAASA,IAAG;AACjC,WAAO,UAAU,UAAU,eAAe,OAAOA,OAAM,aAAaA,KAAI,iBAAS,CAACA,EAAC,GAAG,WAAW;AAAA,EACnG;AAEA,UAAQ,gBAAgB,SAASA,IAAG;AAClC,WAAO,UAAU,UAAU,gBAAgB,OAAOA,OAAM,aAAaA,KAAI,iBAAS,CAACA,EAAC,GAAG,WAAW;AAAA,EACpG;AAEA,UAAQ,cAAc,SAASA,IAAG;AAChC,WAAO,UAAU,UAAU,cAAc,OAAOA,OAAM,aAAaA,KAAI,iBAAS,CAACA,EAAC,GAAG,WAAW;AAAA,EAClG;AAEA,SAAO;AACT;;;AC7Fe,SAAR,eAAiB,QAAQ,IAAI,IAAI,IAAI,IAAI;AAC9C,MAAI,QAAQ,OAAO,UACf,GAAG,IAAI,MAAM,QACbC,MAAK,OAAO,IAAI,MAAM,IAAI,CAAC;AAE/B,OAAK,KAAK,CAAC,IAAIA,OAAM,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtC,SAAK,IAAI,CAAC,IAAIA,QAAO,MAAM,CAAC,EAAE;AAAA,EAChC;AAEA,YAAU,GAAG,GAAG,OAAO,OAAO,IAAI,IAAI,IAAI,EAAE;AAE5C,WAAS,UAAUC,IAAG,GAAG,OAAOC,KAAIC,KAAIC,KAAIC,KAAI;AAC9C,QAAIJ,MAAK,IAAI,GAAG;AACd,UAAI,OAAO,MAAMA,EAAC;AAClB,WAAK,KAAKC,KAAI,KAAK,KAAKC;AACxB,WAAK,KAAKC,KAAI,KAAK,KAAKC;AACxB;AAAA,IACF;AAEA,QAAI,cAAc,KAAKJ,EAAC,GACpB,cAAe,QAAQ,IAAK,aAC5B,IAAIA,KAAI,GACR,KAAK,IAAI;AAEb,WAAO,IAAI,IAAI;AACb,UAAI,MAAM,IAAI,OAAO;AACrB,UAAI,KAAK,GAAG,IAAI;AAAa,YAAI,MAAM;AAAA;AAClC,aAAK;AAAA,IACZ;AAEA,QAAK,cAAc,KAAK,IAAI,CAAC,IAAM,KAAK,CAAC,IAAI,eAAgBA,KAAI,IAAI;AAAG,QAAE;AAE1E,QAAI,YAAY,KAAK,CAAC,IAAI,aACtB,aAAa,QAAQ;AAEzB,QAAKG,MAAKF,MAAOG,MAAKF,KAAK;AACzB,UAAI,KAAK,SAASD,MAAK,aAAaE,MAAK,aAAa,QAAQA;AAC9D,gBAAUH,IAAG,GAAG,WAAWC,KAAIC,KAAI,IAAIE,GAAE;AACzC,gBAAU,GAAG,GAAG,YAAY,IAAIF,KAAIC,KAAIC,GAAE;AAAA,IAC5C,OAAO;AACL,UAAI,KAAK,SAASF,MAAK,aAAaE,MAAK,aAAa,QAAQA;AAC9D,gBAAUJ,IAAG,GAAG,WAAWC,KAAIC,KAAIC,KAAI,EAAE;AACzC,gBAAU,GAAG,GAAG,YAAYF,KAAI,IAAIE,KAAIC,GAAE;AAAA,IAC5C;AAAA,EACF;AACF;;;AC1Ce,SAAR,kBAAiB,QAAQ,IAAI,IAAI,IAAI,IAAI;AAC9C,GAAC,OAAO,QAAQ,IAAI,gBAAQ,cAAM,QAAQ,IAAI,IAAI,IAAI,EAAE;AAC1D;;;ACDA,IAAO,qBAAS,SAASC,QAAO,OAAO;AAErC,WAAS,WAAW,QAAQ,IAAI,IAAI,IAAI,IAAI;AAC1C,SAAK,OAAO,OAAO,cAAe,KAAK,UAAU,OAAQ;AACvD,UAAI,MACA,KACA,OACA,GACA,IAAI,IACJ,GACAC,KAAI,KAAK,QACT,QAAQ,OAAO;AAEnB,aAAO,EAAE,IAAIA,IAAG;AACd,cAAM,KAAK,CAAC,GAAG,QAAQ,IAAI;AAC3B,aAAK,IAAI,IAAI,QAAQ,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,EAAE;AAAG,cAAI,SAAS,MAAM,CAAC,EAAE;AAC5E,YAAI,IAAI;AAAM,uBAAY,KAAK,IAAI,IAAI,IAAI,QAAQ,OAAO,KAAK,MAAM,IAAI,QAAQ,QAAQ,EAAE;AAAA;AACtF,wBAAa,KAAK,IAAI,IAAI,QAAQ,OAAO,KAAK,MAAM,IAAI,QAAQ,QAAQ,IAAI,EAAE;AACnF,iBAAS,IAAI;AAAA,MACf;AAAA,IACF,OAAO;AACL,aAAO,YAAY,OAAO,cAAc,OAAO,QAAQ,IAAI,IAAI,IAAI,EAAE;AACrE,WAAK,QAAQ;AAAA,IACf;AAAA,EACF;AAEA,aAAW,QAAQ,SAASC,IAAG;AAC7B,WAAOF,SAAQE,KAAI,CAACA,MAAK,IAAIA,KAAI,CAAC;AAAA,EACpC;AAEA,SAAO;AACT,EAAG,GAAG;;;ACoMA,IAAgB,YAAhB,cAAkC,OAAM;EAA9C,cAAA;;AAcC,WAAA,eAAA,MAAA,kBAAA;;;;aAAiC,KAAK,SAAS,KAAK,UAAU,IAAI,KAAK,OAAO,EAAE,YAAY,MAAK,CAAE,CAAC;;AAEpG,WAAA,eAAA,MAAA,aAAA;;;;;;AAEA,WAAA,eAAA,MAAA,aAAA;;;;;;AAEA,WAAA,eAAA,MAAA,UAAA;;;;aAA2B;;AAE3B,WAAA,eAAA,MAAA,QAAA;;;;aAAyB;;AAOzB,WAAA,eAAA,MAAA,SAAA;;;;aAAqD,IAAI,aACxD,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,cAAc,IAAI,KAAK,OAAO;QACnC,WAAkB,UAAU,KAAK,MAAM,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,MAAM,aAAa,MAAM,CAAC;SACpG,KAAK,MAAM,QAAQ,CAAC;;AAuCxB,WAAA,eAAA,MAAA,UAAA;;;;aAA8C,IAAI,aACjD,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,MAAM,IAAI,KAAK,OAAO;QAC3B,WAAkB,UAAU,KAAK,OAAO,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,IAAI,CAAC;SAChF,KAAK,OAAO,QAAQ,CAAC;;AAGzB,WAAA,eAAA,MAAA,qBAAA;;;;;;EAsrBD;;;;EA9tBQ,SAAS,UAA6C;AAE5D,UAAM,YAAY,SAAS,IAAI,WAAW;AAE1C,UAAM,OAAO,KAAK,MAAM,KAAI;AAC5B,SAAK,SAAS;AACd,SAAK,aAAa,QAAQ;AAC1B,SAAK,MAAM,KAAK,IAAI;AACpB,aAAS,OAAO,QAAQ,IAAI;AAE5B,UAAM,QAAQ,KAAK,OAAO,KAAI;AAC9B,UAAM,aAAa,QAAQ;AAC3B,aAAS,OAAO,SAAS,KAAK;AAC9B,SAAK,OAAO,KAAK,KAAK;AAEtB,QAAI,CAAC,aAAa,UAAU,UAAU,GAAG;AACxC,WAAK,OAAO,MAAM;;AAGnB,UAAM,QAAQ,SAAS,IAAI,OAAO;AAClC,SAAK,OAAO,UAAU,KAAK;AAE3B,SAAK,eAAe,SAAS,KAAK,IAAI;AACtC,SAAK,SAAS,KAAK,KAAK;AAExB,WAAO;EACR;EAgBU,YAAS;AAClB,SAAK,eAAe,KAAK,sBAAsB,IAAI,KAAK,KAAK,CAAC;AAC9D,SAAK,OAAO,KAAK,YAAY,aAAa,YAAY,MAAM;AAC5D,SAAK,SAAS,KAAK,KAAK,gBAAgB;AAExC,UAAM,UAAS;EAChB;EAEO,mBAAgB;AACtB,UAAM,iBAAgB;AAEtB,QAAI,KAAK,cAAc;AACtB,WAAK,YAAY,CAAA;AAEjB,YAAM,QAAQ,KAAK,UAAU,CAAC;AAC9B,UAAI,OAAO;AACV,aAAK,mBAAmB,KAAK,WAAW,KAAK;AAC7C,aAAK,SAAS;AACd,aAAK,YAAyB,UAAU,KAAK,SAAS;AACtD,YAAI,KAAK,WAAW;AACnB,eAAK,UAAU,IAAI,CAAC,MAAK;AACxB,mBAAO,EAAE;UACV,CAAC;AACD,gBAAMC,QAAO,KAAK,IAAI,MAAM;AAC5B,cAAIA,SAAQ,cAAc;AACzB,iBAAK,UAAU,KAAK,CAACC,IAAG,MAAO,EAAE,QAAiBA,GAAE,KAAa;qBAEzDD,SAAQ,aAAa;AAC7B,iBAAK,UAAU,KAAK,CAACC,IAAG,MAAOA,GAAE,QAAiB,EAAE,KAAa;;AAElE,eAAK,cAAc,YAAY,QAAQ;AACvC,eAAK,cAAc,aAAa,SAAS;AACzC,eAAK,cAAc,YAAY,CAAC;AAChC,eAAK,cAAc,KAAK,SAAS;;;;AAKpC,QAAI,KAAK,gBAAgB,KAAK,YAAY;AACzC,WAAK,eAAc;;AAGpB,QAAI,KAAK,YAAY;AACpB,YAAM,WAAW,KAAK,IAAI,kBAAkB;AAC5C,UAAI,UAAU;AACb,aAAK,MAAM,QAAQ;;;EAGtB;EAEO,WAAQ;AACd,UAAM,SAAQ;AACd,QAAI,KAAK,QAAQ,kBAAkB,GAAG;AACrC,WAAK,gBAAgB,KAAK,IAAI,kBAAkB,CAAC;;EAEnD;EAEU,iBAAc;AACvB,QAAI,KAAK,WAAW;AACnB,WAAK,aAAa,KAAK,SAAS;;EAElC;EAEU,aAAa,eAA8D;AACpF,UAAM,WAAW,cAAc,KAAK;AAEpC,QAAI,UAAU;AACb,WAAK,YAAY,QAAQ;AAEzB,UAAI,KAAK,QAAQ,SAAS,KAAK,CAAC,SAAS,SAAS;AACjD,aAAK,aAAa,QAAQ;;AAG3B,YAAM,oBAAoB,cAAc;AACxC,UAAI,mBAAmB;AACtB,QAAO,KAAK,mBAAmB,CAAC,mBAAkB;AACjD,eAAK,aAAa,cAAc;QACjC,CAAC;;;EAGJ;EAEU,YAAY,WAA8C;EAEpE;;;;;;;EAQO,gBAAgB,IAAU;AAChC,WAAO,KAAK,iBAAiB,KAAK,WAAW,EAAE;EAChD;EAEO,iBAAiB,WAAuD,IAAU;AAExF,QAAI;AAEJ,IAAO,KAAK,WAAW,CAAC,aAAiB;AAExC,UAAI,SAAS,IAAI,IAAI,KAAK,IAAI;AAC7B,aAAK;;AAGN,YAAM,WAAW,SAAS,IAAI,UAAU;AACxC,UAAI,UAAU;AACb,YAAI,gBAAgB,KAAK,iBAAiB,UAAU,EAAE;AACtD,YAAI,eAAe;AAClB,eAAK;;;IAGR,CAAC;AAED,WAAO;EACR;EAEU,eAAe,WAAqD;AAC7E,IAAO,KAAK,WAAW,CAAC,aAAY;AACnC,YAAM,UAAU,SAAS;AACzB,UAAI,SAAS;AACZ,QAAO,KAAK,SAAS,CAAC,WAAU;AAC/B,iBAAO,QAAO;QACf,CAAC;AACD,iBAAS,UAAU;;AAGpB,YAAM,WAAW,SAAS,IAAI,UAAU;AAExC,UAAI,UAAU;AACb,aAAK,eAAe,QAAQ;;IAE9B,CAAC;AAED,SAAK,eAAc;EACpB;EAEU,eAAY;AACrB,UAAM,aAAY;AAClB,UAAM,SAAS,KAAK,IAAI,QAAQ;AAChC,QAAI,QAAQ;AACX,aAAO,MAAK;;EAEd;EAEU,gBAAgB,UAA6C;AACtE,UAAM,gBAAgB,QAAQ;AAE9B,UAAM,YAAY,SAAS,IAAI,WAAW;AAC1C,UAAM,SAAS,KAAK,IAAI,QAAQ;AAChC,UAAM,WAAW,KAAK,IAAI,YAAY,CAAC;AAEvC,QAAI,CAAC,SAAS,IAAI,QAAQ,GAAG;AAC5B,eAAS,OAAO,SAAS,CAAC;AAC1B,UAAI,UAAU,YAAY,KAAK,SAAS,IAAI,MAAM,KAAK,MAAM;AAC5D,iBAAS,OAAO,QAAQ,OAAO,KAAI,CAAE;;;AAIvC,QAAI,QAAQ,SAAS,IAAI,OAAO;AAChC,UAAM,eAAe,KAAK,IAAI,gBAAgB,CAAC;AAE/C,SAAK,SAAS,QAAQ;AACtB,SAAK,iBAAiB,QAAQ;AAE9B,QAAI,WAAW;AACd,YAAMC,YAAuD,CAAA;AAC7D,eAAS,OAAO,YAAYA,SAAQ;AAEpC,MAAO,KAAK,WAAW,CAAC,UAAS;AAChC,cAAM,gBAAgB,IAAI,SAAS,MAAM,OAAO,KAAK,cAAc,KAAK,CAAC;AAEzE,QAAAA,UAAS,KAAK,aAAa;AAE3B,sBAAc,OAAO,UAAU,QAAQ;AACvC,sBAAc,OAAO,SAAS,QAAQ,CAAC;AAEvC,YAAI,KAAK,UAAU,UAAU,KAAK,SAAS,GAAG;AAC7C,cAAI,UAAU,cAAc,IAAI,MAAM,KAAK,MAAM;AAChD,0BAAc,OAAO,QAAQ,OAAO,KAAI,CAAE;;eAGvC;AACJ,cAAI,cAAc,IAAI,MAAM,KAAK,MAAM;AACtC,0BAAc,OAAO,QAAQ,SAAS,IAAI,MAAM,CAAC;;;AAInD,aAAK,gBAAgB,aAAa;MACnC,CAAC;;AAGF,UAAM,WAAW,SAAS,IAAI,UAAU;AACxC,QAAI,CAAC,YAAY,SAAS,UAAU,GAAG;AACtC,YAAM,OAAO,SAAS,IAAI,MAAM;AAChC,WAAK,OAAO,EAAE,WAAW,OAAS,CAAE;;AAGrC,QAAI,SAAS,IAAI,UAAU,KAAK,MAAM;AACrC,UAAI,SAAS,WAAW,cAAc;AACrC,aAAK,gBAAgB,UAAU,CAAC;;;EAGnC;;;;;;;EAQO,aAAa,UAA+C,MAAgB;AAClF,UAAM,cAAc,SAAS;AAC7B,UAAM,iBAAiB,KAAK,IAAI,gBAAgB;AAEhD,QAAI,YAAY,YAAY,cAAc;AAC1C,QAAI,CAAC,WAAW;AACf,kBAAY;AACZ,kBAAY,cAAc,IAAI;WAE1B;AACJ,gBAAU,KAAK,GAAG,IAAI;;AAGvB,QAAI,WAAW,SAAS,IAAI,UAAU;AACtC,QAAI,CAAC,UAAU;AACd,iBAAW,CAAA;AACX,eAAS,IAAI,YAAY,QAAQ;;AAGlC,QAAI,QAAQ,SAAS,IAAI,OAAO;AAEhC,IAAO,KAAK,WAAW,CAAC,UAAS;AAChC,YAAM,gBAAgB,IAAI,SAAS,MAAM,OAAO,KAAK,cAAc,KAAK,CAAC;AAEzE,eAAS,KAAK,aAAa;AAE3B,oBAAc,OAAO,UAAU,QAAQ;AACvC,oBAAc,OAAO,SAAS,QAAQ,CAAC;AAEvC,UAAI,cAAc,IAAI,MAAM,KAAK,MAAM;AACtC,sBAAc,OAAO,QAAQ,SAAS,IAAI,MAAM,CAAC;;AAGlD,WAAK,gBAAgB,aAAa;IACnC,CAAC;EACF;EAEU,iBAAiB,WAA8C;EAEzE;EAEU,cAAc,iBAAgE;AACvF,UAAM,WAAW,gBAAgB,KAAK;AAEtC,QAAI,gBAAgB,QAAQ,KAAK,WAAW,UAAU,GAAG;AACxD,WAAK,cAAc,YAAY,gBAAgB,KAAK;;AAGrD,QAAI,UAAU;AACb,eAAS,OAAO,mBAAmB,eAAe;AAEjD,sBAAwB,QAAQ,KAAK;AAEtC,WAAK;AAEL,eAAS,IAAI,MAAM,EAAE,IAAI,YAAY,SAAS,IAAI,UAAU,CAAC;AAE7D,UAAI,YAAY,gBAAgB,KAAK;AACrC,UAAI,QAAQ,gBAAgB;AAE5B,UAAI,aAAa,MAAM;AACtB,gBAAQ;AACP,wBAAwB,OAAO,IAAI;;AAGrC,UAAU,SAAS,KAAK,GAAG;AAC1B,iBAAS,OAAO,OAAO,KAAK;AAC5B,iBAAS,OAAO,qBAAqB,QAAQ,KAAK,UAAU,CAAC,EAAE,IAAI,KAAK,IAAI,GAAG;AAE/E,YAAI,eAAe;AACnB,cAAM,SAAS,SAAS,IAAI,QAAQ;AACpC,YAAI,QAAQ;AACX,yBAAe,QAAQ,OAAO,IAAI,KAAK,IAAI;;AAE5C,iBAAS,IAAI,OAAO,EAAE,KAAK,cAAa;AACxC,iBAAS,OAAO,gBAAgB,YAAY;AAE5C,YAAI,KAAK,WAAW,UAAU,IAAI,OAAO;AACxC,eAAK,cAAc,YAAY,KAAK;;AAGrC,YAAI,KAAK,WAAW,WAAW,IAAI,OAAO;AACzC,eAAK,cAAc,aAAa,KAAK;;;AAIvC,WAAK,kBAAkB,QAAQ;;AAGhC,UAAM,oBAAoB,gBAAgB;AAC1C,QAAI,mBAAmB;AACtB,MAAO,KAAK,mBAAmB,CAAC,qBAAoB;AACnD,aAAK,cAAc,gBAAgB;MACpC,CAAC;;EAEH;EAEU,mBAAmB,MAA4B,UAAsC;AAC9F,SAAK,WAAW;AAEhB,UAAM,WAAW,SAAS,IAAI,UAAU;AACxC,QAAI,UAAU;AACb,YAAM,oBAAiD,CAAA;AACvD,WAAK,WAAW;AAChB,MAAO,KAAK,UAAU,CAAC,kBAAiB;AACvC,cAAM,YAAY,CAAA;AAClB,0BAAkB,KAAK,SAAS;AAChC,aAAK,mBAAmB,WAAW,aAAa;MACjD,CAAC;AAED,YAAM,QAAQ,SAAS,IAAI,cAAc;AACzC,UAAU,SAAS,KAAK,GAAG;AAC1B,aAAK,QAAQ;;WAGV;AACJ,YAAM,QAAQ,SAAS,IAAI,cAAc;AACzC,UAAU,SAAS,KAAK,GAAG;AAC1B,aAAK,QAAQ;;;EAGhB;;;;EAKO,gBAAgB,UAA6C;AACnE,UAAM,gBAAgB,QAAQ;AAC9B,UAAM,OAAO,SAAS,IAAI,MAAM;AAChC,QAAI,MAAM;AACT,WAAK,MAAM,YAAY,IAAI;AAC3B,WAAK,QAAO;;AAEb,UAAM,QAAQ,SAAS,IAAI,OAAO;AAClC,QAAI,OAAO;AACV,WAAK,OAAO,YAAY,KAAK;AAC7B,YAAM,QAAO;;AAGd,UAAM,WAAW,SAAS,IAAI,UAAU;AACxC,QAAI,UAAU;AACb,MAAO,KAAK,UAAU,CAAC,UAAS;AAC/B,aAAK,gBAAgB,KAAK;MAC3B,CAAC;;EAEH;;;;;;;;EASa,aAAa,UAA+C,UAAiB;;;;;AACzF,YAAM,WAAW,CAAC,OAAM,aAAY,KAAA,MAAC,UAAU,QAAQ,CAAA;AAEvD,YAAM,cAAc,KAAK,OAAO,OAAO,UAAU,CAAA,CAAE;AAEnD,UAAI,CAAO,SAAS,QAAQ,GAAG;AAC9B,cAAM,yBAAyB;AAC/B,mBAAW,YAAY,IAAI,wBAAwB,KAAK,IAAI,wBAAwB,CAAC,CAAC;;AAGvF,YAAM,uBAAuB;AAC7B,YAAM,SAAS,YAAY,IAAI,sBAAsB,KAAK,IAAI,oBAAoB,CAAC;AAEnF,YAAM,WAAW,SAAS,IAAI,UAAU;AAExC,WAAK,CAAC,YAAY,SAAS,UAAU,MAAY,SAAS,SAAS,IAAI,OAAO,CAAC,GAAG;AACjF,iBAAS,KAAK,SAAS,QAAQ,EAAE,KAAK,gBAAuB,IAAI,GAAG,UAAoB,OAAc,CAAE,EAAE,YAAW,CAAE;;AAGxH,YAAM,OAAO,SAAS,IAAI,MAAM;AAChC,WAAK,KAAI;AACT,WAAK,YAAW;AAEhB,UAAI,UAAU;AACb,QAAO,KAAK,UAAU,CAAC,kBAAiB;AACvC,mBAAS,KAAK,KAAK,aAAa,aAAa,CAAC;QAC/C,CAAC;;AAGF,YAAM,QAAQ,IAAI,QAAQ;IAC3B,CAAC;;;;;;;;;EASY,aAAa,UAA+C,UAAiB;;;;;AACzF,YAAM,WAAW,CAAC,OAAM,aAAY,KAAA,MAAC,UAAU,QAAQ,CAAA;AAEvD,UAAI,CAAO,SAAS,QAAQ,GAAG;AAC9B,mBAAW,KAAK,IAAI,0BAA0B,CAAC;;AAGhD,YAAM,SAAS,KAAK,IAAI,sBAAsB;AAE9C,YAAM,WAAW,SAAS,IAAI,UAAU;AAExC,WAAK,CAAC,YAAY,SAAS,UAAU,MAAY,SAAS,SAAS,IAAI,OAAO,CAAC,GAAG;AACjF,iBAAS,KAAK,SAAS,QAAQ,EAAE,KAAK,gBAAuB,IAAI,SAAS,IAAI,OAAO,GAAG,UAAoB,OAAc,CAAE,EAAE,YAAW,CAAE;;AAG5I,YAAM,OAAO,SAAS,IAAI,MAAM;AAChC,WAAK,KAAI;AAET,UAAI,UAAU;AACb,QAAO,KAAK,UAAU,CAAC,kBAAiB;AACvC,mBAAS,KAAK,KAAK,aAAa,aAAa,CAAC;QAC/C,CAAC;;AAGF,YAAM,QAAQ,IAAI,QAAQ;IAC3B,CAAC;;;;;;;;EAQM,eAAe,UAA+C,UAAmB,OAAgB,UAAiB;AACxH,QAAI,SAAS,MAAM;AAClB,cAAQ;;AAGT,QAAI,YAAY,MAAM;AACrB,iBAAW;;AAGZ,aAAS,IAAI,YAAY,KAAK;AAC9B,aAAS,IAAI,MAAM,EAAE,IAAI,YAAY,KAAK;AAE1C,QAAI,CAAC,SAAS,SAAQ,GAAI;AACzB,eAAS,IAAI,MAAM,EAAE,KAAK,QAAQ;;AAGnC,UAAM,WAAW,KAAK,IAAI,YAAY,CAAC;AACvC,QAAI,SAAS,IAAI,OAAO,IAAI,UAAU;AACrC,eAAS,IAAI,MAAM,EAAE,KAAK,CAAC;;AAG5B,QAAI,SAAS,GAAG;AACf,YAAM,UAAU,KAAK,IAAI,WAAW,QAAQ;AAC5C,UAAI,SAAS;AACb,UAAIC,SAAQ;AAEZ,aAAO,WAAW,QAAW;AAC5B,YAAIA,SAAQ,SAAS;AACpB,iBAAO,IAAI,MAAM,EAAE,KAAI;;AAExB,iBAAS,OAAO,IAAI,QAAQ;AAC5B,QAAAA;;;AAIF,QAAI,WAAW,SAAS,IAAI,UAAU;AACtC,QAAI,UAAU;AACb,UAAI,QAAQ,WAAW,GAAG;AACzB,QAAO,KAAK,UAAU,CAAC,UAAS;AAC/B,gBAAM,gBAAgB,KAAK,IAAI,eAAe;AAC9C,cAAI,eAAe;AAClB,kBAAM,cAAc,MAAM;AAC1B,gBAAI,YAAY,aAAa,KAAK,MAAM;AACvC,mBAAK,eAAe,OAAO,UAAU,QAAkB,GAAG,QAAQ;mBAE9D;AACJ,mBAAK,gBAAgB,KAAK;;iBAGvB;AACJ,iBAAK,eAAe,OAAO,UAAU,QAAkB,GAAG,QAAQ;;QAEpE,CAAC;aAEG;AACJ,QAAO,KAAK,UAAU,CAAC,UAAS;AAC/B,cAAI,CAAC,MAAM,SAAQ,GAAI;AACtB,kBAAM,IAAI,MAAM,EAAE,KAAK,QAAQ;AAC/B,kBAAM,IAAI,MAAM,EAAE,OAAO,aAAa,UAAU;AAChD,kBAAM,IAAI,YAAY,IAAI;AAE1B,iBAAK,gBAAgB,KAAK;;QAE5B,CAAC;;;EAGJ;;;;;;;EAQO,gBAAgB,UAA+C,UAAiB;AACtF,aAAS,IAAI,YAAY,IAAI;AAC7B,QAAI,WAAW,SAAS,IAAI,UAAU;AACtC,QAAI,UAAU;AACb,MAAO,KAAK,UAAU,CAAC,UAAS;AAC/B,aAAK,gBAAgB,OAAO,QAAQ;AACpC,cAAM,IAAI,MAAM,EAAE,KAAK,QAAQ;MAChC,CAAC;;EAEH;EAEU,gBAAgB,UAAgD,WAAoB,cAAsB;AACnH,QAAI,UAAU;AACb,UAAI,CAAC,cAAc;AAClB,cAAM,OAAO;AACb,aAAK,OAAO,SAAS,MAAM,EAAE,MAAY,QAAQ,MAAM,SAAkB,CAAE;;AAG5E,UAAI,WAAW,KAAK,WAAW,YAAY,CAAC;AAC5C,YAAM,WAAW,KAAK,IAAI,YAAY,CAAC;AAEvC,UAAI,aAAa,MAAM;AACtB,oBAAY,KAAK,IAAI,KAAK,IAAI,aAAa,CAAC,GAAG,WAAW,SAAS,IAAI,OAAO,CAAC;;AAGhF,UAAI,CAAC,KAAK,QAAQ;AACjB,oBAAY,KAAK,IAAI,KAAK,IAAI,gBAAgB,CAAC,GAAG,WAAW,QAAQ;;AAGtE,WAAK,oBAAoB;AAEzB,YAAM,gBAAgB,SAAS,IAAI,iBAAiB;AACpD,UAAI,eAAe,cAAc;AAEjC,UAAI,eAAe,YAAY,UAAU;AACxC,oBAAY,WAAW;;AAGxB,UAAI,eAAe,UAAU;AAC5B,qBAAa,WAAW;AACxB,uBAAe;;AAGhB,YAAM,WAAW,SAAS,IAAI,UAAU;AAExC,UAAI,YAAY,SAAS,SAAS,GAAG;AACpC,YAAI,YAAY,GAAG;AAClB,eAAK,eAAe,UAAU,SAAS;eAEnC;AACJ,mBAAS,IAAI,MAAM,EAAE,KAAI;AACzB,UAAO,KAAK,UAAU,CAAC,UAAS;AAC/B,kBAAM,IAAI,MAAM,EAAE,KAAI;UACvB,CAAC;;AAGF,YAAI,cAAc,QAAQ,UAAU;AACnC,mBAAS,IAAI,MAAM,EAAE,KAAK,CAAC;;AAG5B,YAAI,KAAK,IAAI,kBAAkB,GAAG;AACjC,eAAK,cAAc,QAAQ;;aAGxB;AACJ,aAAK,eAAe,KAAK,UAAU,CAAC,GAAG,WAAW,CAAC;;AAGpD,WAAK,MAAM,OAAO,KAAK,cAAc,MAAI;AACxC,aAAK,MAAM,QAAQ;MACpB,CAAC;;EAEH;EAEU,MAAM,WAA8C;EAC9D;EAEU,cAAc,UAA6C;AACpE,UAAM,SAAS,SAAS,IAAI,QAAQ;AACpC,QAAI,QAAQ;AACX,YAAM,WAAW,OAAO,IAAI,UAAU;AACtC,UAAI,UAAU;AACb,QAAO,KAAK,UAAU,CAAC,UAAS;AAC/B,cAAI,SAAS,UAAU;AACtB,iBAAK,gBAAgB,KAAK;;QAE5B,CAAC;;;EAGJ;;;;;;EAOO,eAAe,UAA6C;AAClE,UAAM,SAAS,SAAS,IAAI,QAAQ;AACpC,UAAM,WAAW,KAAK,WAAW,YAAY,CAAC;AAE9C,QAAI,KAAK,IAAI,kBAAkB,KAAK,UAAU;AAC7C,UAAI,QAAQ;AACX,aAAK,IAAI,oBAAoB,MAAM;aAE/B;AACJ,YAAI,QAAQ,KAAK,IAAI,KAAK,IAAI,aAAa,CAAC,GAAG,WAAW,SAAS,IAAI,OAAO,CAAC;AAE/E,YAAI,KAAK,qBAAqB,OAAO;AACpC,kBAAQ,KAAK,IAAI,KAAK,IAAI,gBAAgB,CAAC,GAAG,WAAW,KAAK,IAAI,YAAY,CAAC,CAAC;;AAGjF,aAAK,gBAAgB,UAAU,KAAK;;WAGjC;AACJ,WAAK,IAAI,oBAAoB,QAAQ;;EAEvC;EAGU,YAAY,UAA+C,gBAAmHC,QAAc;AACrM,UAAM,SAAS,MAAM,YAAY,UAAU,gBAAgBA,MAAK;AAChE,QAAI,QAAQ;AACX,YAAM,SAAS,OAAO,IAAI,QAAQ;AAClC,YAAM,OAAO,SAAS,IAAI,MAAM;AAEhC,UAAI,QAAQ;AACX,aAAK,SAAS,KAAK,MAAM;AACzB,aAAK,GAAG,SAAS,MAAK;AACrB,eAAK,gBAAgB,MAAM;QAC5B,CAAC;AACD,aAAK,GAAG,UAAU,MAAK;AACtB,eAAK,gBAAgB,MAAM;QAC5B,CAAC;;;AAGH,WAAO;EACR;EAEO,gBAAgB,QAAc;AAEpC,UAAM,SAAS,OAAO,IAAI,QAAQ;AAClC,QAAI,QAAQ;AACX,YAAM,WAAW,OAAO;AAExB,YAAM,YAAY,OAAO,IAAI,aAAa,GAAG;AAC7C,YAAM,YAAY,OAAO,IAAI,aAAa,GAAG;AAE7C,YAAM,OAAO,SAAS,IAAI,MAAM;AAEhC,aAAO,IAAI,KAAK,KAAK,MAAK,IAAK,SAAS;AACxC,aAAO,IAAI,KAAK,KAAK,OAAM,IAAK,SAAS;;EAE3C;;;;;;;EAQO,cAAc,UAA6C;AACjE,UAAM,OAAO,SAAS,IAAI,MAAM;AAChC,QAAI,QAAQ,CAAC,KAAK,SAAQ,GAAI;AAC7B,WAAK,MAAK;;EAEZ;;;;;;;EAQO,gBAAgB,UAA6C;AACnE,UAAM,OAAO,SAAS,IAAI,MAAM;AAChC,QAAI,MAAM;AACT,WAAK,QAAO;;EAEd;;AAnwBA,OAAA,eAAA,WAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,WAAA,cAAA;;;;SAA0C,OAAO,WAAW,OAAO,CAAC,UAAU,SAAS,CAAC;;;;ACzNnF,IAAO,sBAAP,cAAmC,cAAa;EAe3C,YAAS;AAClB,UAAM,UAAS;AAEf,SAAK,OAAO,OAAO,YAAY,CAAA,CAAE;AACjC,SAAK,OAAO,OAAO,SAAS,CAAA,CAAE;AAC9B,SAAK,OAAO,OAAO,iBAAiB,CAAA,CAAE;EACvC;EAGO,aAAa,UAAiB;AACpC,UAAM,WAAW,KAAK;AACtB,QAAI,UAAU;AACb,UAAI,QAAS,SAAgD,IAAI,OAAO;AAExE,MAAO,KAAK,OAAO,CAAC,SAAQ;AAC3B,YAAI,SAAS,KAAK,IAAI,QAAQ;AAC9B,YAAI,SAAS,KAAK,IAAI,QAAQ;AAE9B,YAAI,UAAU,QAAQ;AACrB,cAAI,OAAO,IAAI,MAAM,EAAE,SAAQ,KAAM,OAAO,IAAI,MAAM,EAAE,SAAQ,GAAI;AACnE,iBAAK,KAAK,QAAQ;iBAEd;AACJ,iBAAK,KAAK,QAAQ;;;MAGrB,CAAC;;EAEH;EAEO,mBAAgB;AACtB,UAAM,iBAAgB;AAEtB,QAAI,KAAK,QAAQ,UAAU,GAAG;AAC7B,WAAK,aAAY;;EAEnB;EAEU,QAAQ,UAAiB;AAClC,UAAM,QAAQ,QAAQ;AACtB,SAAK,aAAa,QAAQ;EAC3B;EAEU,QAAQ,UAAiB;AAClC,UAAM,QAAQ,QAAQ;AACtB,SAAK,aAAa,QAAQ;EAC3B;;AAnDA,OAAA,eAAA,qBAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,qBAAA,cAAA;;;;SAA0C,cAAc,WAAW,OAAO,CAAC,oBAAoB,SAAS,CAAC;;;;ACSpG,IAAO,gBAAP,cAA6B,SAAQ;EAOnC,WAAQ;AACd,UAAM,SAAQ;AACd,QAAI,KAAK,QAAQ;AAChB,UAAI,SAAS,KAAK,IAAI,QAAQ;AAC9B,UAAI,SAAS,KAAK,IAAI,QAAQ;AAC9B,UAAI,UAAU,QAAQ;AACrB,cAAM,aAAa,OAAO,IAAI,MAAM;AACpC,cAAM,aAAa,OAAO,IAAI,MAAM;AACpC,aAAK,SAAS,OAAO,WAAW,EAAC,GAAI,WAAW,EAAC,CAAE;AACnD,aAAK,SAAS,OAAO,WAAW,EAAC,GAAI,WAAW,EAAC,CAAE;;;EAGtD;EAEO,iBAAc;AACpB,UAAM,eAAc;AAEpB,QAAI,KAAK,QAAQ,QAAQ,GAAG;AAC3B,YAAM,SAAS,KAAK,IAAI,QAAQ;AAChC,UAAI,QAAQ;AACX,cAAM,aAAa,OAAO,IAAI,MAAM;AACpC,mBAAW,OAAO,GAAG,mBAAmB,MAAK;AAC5C,eAAK,cAAc,QAAQ;QAC5B,CAAC;;;AAGH,QAAI,KAAK,QAAQ,QAAQ,GAAG;AAC3B,YAAM,SAAS,KAAK,IAAI,QAAQ;AAChC,UAAI,QAAQ;AACX,cAAM,aAAa,OAAO,IAAI,MAAM;AACpC,mBAAW,OAAO,GAAG,mBAAmB,MAAK;AAC5C,eAAK,cAAc,QAAQ;QAC5B,CAAC;;;EAGJ;;AAtCA,OAAA,eAAA,eAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,eAAA,cAAA;;;;SAA0C,SAAS,WAAW,OAAO,CAAC,cAAc,SAAS,CAAC;;;;ACwDzF,IAAgB,kBAAhB,cAAwC,UAAS;EAAvD,cAAA;;AAqBC,WAAA,eAAA,MAAA,SAAA;;;;aAA2D,IAAI,aAC9D,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,oBAAoB,KAAK,KAAK,OAAO;QAC1C,WAAkB,UAAU,KAAK,MAAM,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,MAAM,mBAAmB,aAAa,MAAM,CAAC;QACzH,GAAG,KAAK,MAAK,IAAK;QAClB,GAAG,KAAK,OAAM,IAAK;SACjB,CAAC,KAAK,MAAM,QAAQ,CAAC,CAAC;;AAQ1B,WAAA,eAAA,MAAA,WAAA;;;;aAAgD,IAAI,aACnD,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,OAAO,KAAK,KAAK,OAAO;QAC7B,WAAkB,UAAU,KAAK,QAAQ,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,MAAM,OAAO,CAAC;SAC1F,CAAC,KAAK,QAAQ,QAAQ,CAAC,CAAC;;AAQ5B,WAAA,eAAA,MAAA,gBAAA;;;;aAAqD,IAAI,aACxD,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,OAAO,KAAK,KAAK,OAAO;QAC7B,WAAkB,UAAU,KAAK,aAAa,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,MAAM,SAAS,OAAO,CAAC;SACxG,CAAC,KAAK,aAAa,QAAQ,CAAC,CAAC;;AAQjC,WAAA,eAAA,MAAA,SAAA;;;;aAAqD,IAAI,aACxD,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,cAAc,KAAK,KAAK,OAAO;QACpC,WAAkB,UAAU,KAAK,MAAM,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,MAAM,mBAAmB,aAAa,MAAM,CAAC;SACvH,CAAC,KAAK,MAAM,QAAQ,CAAC,CAAC;;AAQ1B,WAAA,eAAA,MAAA,kBAAA;;;;aAAiC,KAAK,SAAS,UAAU,UAAU,IAAI,KAAK,OAAO,CAAA,CAAE,GAAG,CAAC;;EA6S1F;EA1WW,YAAS;AAClB,SAAK,OAAO,KAAK,YAAY,KAAK,GAAG;AAErC,UAAM,UAAS;EAChB;;;;EA8DO,SAAS,UAA6C;AAC5D,UAAM,OAAO,MAAM,SAAS,QAAQ;AAEpC,UAAM,SAAS,KAAK,SAAS,UAAU,KAAK,QAAQ,KAAI,GAAI,CAAC;AAC7D,SAAK,QAAQ,KAAK,MAAM;AACxB,SAAK,WAAW,iBAAiB,MAAM;AACvC,aAAS,OAAO,UAAU,MAAM;AAEhC,UAAM,cAAc,KAAK,SAAS,UAAU,KAAK,aAAa,KAAI,GAAI,CAAC;AACvE,SAAK,aAAa,KAAK,WAAW;AAClC,aAAS,OAAO,eAAe,WAAW;AAE1C,UAAM,QAAQ,SAAS,IAAI,OAAO;AAElC,WAAO,GAAG,UAAU,MAAK;AACxB,YAAMC,KAAI,OAAO,IAAI,UAAU,KAAK,MAAK,CAAE,IAAI;AAC/C,YAAM,OAAO,EAAE,UAAUA,IAAG,WAAWA,GAAC,CAAE;AAC1C,kBAAY,IAAI,UAAUA,KAAI,CAAC;AAE/B,WAAK,oBAAmB;IACzB,CAAC;AAED,UAAM,IAAI,OAAO,IAAI,UAAU,KAAK,MAAK,CAAE,IAAI;AAC/C,UAAM,OAAO,EAAE,UAAU,GAAG,WAAW,EAAC,CAAE;AAE1C,WAAO,aAAa,QAAQ;AAC5B,gBAAY,aAAa,QAAQ;AAEjC,WAAO;EACR;EAEO,sBAAmB;EAE1B;EAEU,gBAAgB,UAA6C;AACtE,aAAS,OAAO,cAAc,CAAA,CAAE;AAChC,aAAS,OAAO,SAAS,CAAA,CAAE;AAC3B,UAAM,gBAAgB,QAAQ;EAC/B;EAEU,iBAAiB,UAA6C;AACvE,UAAM,iBAAiB,QAAQ;AAE/B,UAAM,iBAAiB,SAAS,IAAI,QAAQ;AAC5C,QAAI,kBAAkB,eAAe,IAAI,OAAO,KAAK,KAAK,IAAI,UAAU,GAAG;AAC1E,YAAM,OAAO,KAAK,cAAc,gBAAgB,QAAQ;AACxD,eAAS,OAAO,cAAc,IAAI;;AAGnC,UAAM,OAAO,SAAS,IAAI,MAAM;AAChC,SAAK,eAAe,KAAK,SAAS;AAClC,SAAK,aAAa,CAAC;EACpB;;;;EAKO,eAAe,WAAqD;AAC1E,IAAO,KAAK,WAAW,CAAC,aAAY;AACnC,YAAM,WAAW,SAAS,IAAI,UAAU;AACxC,UAAI,UAAU;AACb,QAAO,KAAK,UAAU,CAAC,OAAM;AAC5B,gBAAM,mBAAmB,KAAK,iBAAiB,KAAK,WAAW,EAAE;AAEjE,cAAI,kBAAkB;AACrB,iBAAK,cAAc,UAAU,gBAAgB;;QAE/C,CAAC;;AAGF,YAAM,WAAW,SAAS,IAAI,UAAU;AACxC,UAAI,UAAU;AACb,aAAK,eAAe,QAAQ;;IAE9B,CAAC;EACF;EAEU,UAAU,eAA2D;AAC9E,WAAO,EAAE,GAAG,cAAc,GAAG,GAAG,cAAc,EAAC;EAChD;EAEU,kBAAkB,UAA6C;AACxE,UAAM,OAAO,SAAS,IAAI,MAAM;AAChC,UAAM,gBAAgB,SAAS,IAAI,iBAAiB;AAEpD,UAAM,QAAQ,KAAK,UAAU,aAAa;AAE1C,UAAM,WAAW,KAAK,IAAI,qBAAqB,CAAC;AAChD,UAAM,SAAS,KAAK,IAAI,iBAAiB;AAEzC,SAAK,QAAQ,EAAE,KAAK,KAAK,IAAI,MAAM,GAAG,UAAoB,OAAc,CAAE;AAC1E,SAAK,QAAQ,EAAE,KAAK,KAAK,IAAI,MAAM,GAAG,UAAoB,OAAc,CAAE;EAC3E;EAEU,YAAY,UAA6C;AAClE,UAAM,YAAY,QAAQ;AAE1B,SAAK,kBAAkB,QAAQ;AAE/B,UAAM,gBAAgB,SAAS,IAAI,iBAAiB;AAEpD,UAAM,oBAAoB,cAAc;AACxC,QAAI,mBAAmB;AACtB,MAAO,KAAK,mBAAmB,CAAC,mBAAkB;AACjD,aAAK,aAAa,cAAc;MACjC,CAAC;;AAGF,UAAM,OAAO,SAAS,IAAI,MAAM;AAChC,UAAM,SAAS,SAAS,IAAI,QAAQ;AACpC,UAAM,WAAW,SAAS,IAAI,UAAU;AAExC,QAAI,QAAQ;AACX,aAAO,YAAY,QAAQ,IAAI;AAC/B,aAAO,YAAY,UAAU,IAAI;;AAGlC,UAAM,cAAc,SAAS,IAAI,aAAa;AAC9C,QAAI,aAAa;AAChB,kBAAY,YAAY,QAAQ,IAAI;AACpC,kBAAY,YAAY,UAAU,IAAI;AAEtC,UAAI,CAAC,YAAY,SAAS,UAAU,GAAG;AACtC,oBAAY,WAAW,WAAW,KAAK;;;EAG1C;;;;;;;;;EAUO,cAAc,QAA6C,QAA6C,UAAiB;AAE/H,QAAI;AAEJ,UAAM,cAAc,OAAO,IAAI,OAAO;AAEtC,QAAI,aAAa;AAChB,MAAO,KAAK,aAAa,CAAC,QAAO;AAChC,YAAI,IAAI,IAAI,QAAQ,KAAK,QAAQ;AAChC,iBAAO;;MAET,CAAC;;AAGF,UAAM,cAAc,OAAO,IAAI,OAAO;AAEtC,QAAI,aAAa;AAChB,MAAO,KAAK,aAAa,CAAC,QAAO;AAChC,YAAI,IAAI,IAAI,QAAQ,KAAK,QAAQ;AAChC,iBAAO;;MAET,CAAC;;AAGF,QAAI,CAAC,MAAM;AACV,aAAO,KAAK,MAAM,KAAI;AACtB,WAAK,MAAM,KAAK,IAAI;AACpB,WAAK,eAAe,SAAS,KAAK,IAAI;AACtC,WAAK,IAAI,UAAU,MAAM;AACzB,WAAK,IAAI,UAAU,MAAM;AACzB,WAAK,aAAa,MAAM;AACxB,WAAK,IAAI,UAAU,OAAO,IAAI,MAAM,CAAC;AACrC,UAAI,YAAY,MAAM;AACrB,aAAK,IAAI,YAAY,QAAQ;;AAG9B,aAAO,IAAI,YAAY,EAAE,KAAK,IAAI;AAElC,MAAO,KAAK,OAAO,IAAI,OAAO,GAAG,IAAI;AACrC,MAAO,KAAK,OAAO,IAAI,OAAO,GAAG,IAAI;AAErC,WAAK,aAAa,MAAM,QAAQ,MAAM;;AAGvC,WAAO;EACR;;;;;;;EASO,gBAAgB,QAA6C,QAA2C;AAE9G,QAAI;AAEJ,UAAM,cAAc,OAAO,IAAI,OAAO;AAEtC,QAAI,aAAa;AAChB,MAAO,KAAK,aAAa,CAAC,QAAO;AAChC,YAAI,OAAO,IAAI,IAAI,QAAQ,KAAK,QAAQ;AACvC,iBAAO;AACP,UAAO,OAAO,aAAa,IAAI;;MAEjC,CAAC;;AAGF,UAAM,cAAc,OAAO,IAAI,OAAO;AAEtC,QAAI,aAAa;AAChB,MAAO,KAAK,aAAa,CAAC,QAAO;AAChC,YAAI,OAAO,IAAI,IAAI,QAAQ,KAAK,QAAQ;AACvC,iBAAO;AACP,UAAO,OAAO,aAAa,IAAI;;MAEjC,CAAC;;AAGF,QAAI,MAAM;AACT,WAAK,aAAa,IAAI;;AAGvB,SAAK,cAAa;EACnB;EAEU,gBAAa;EAEvB;EAEU,aAAa,MAAmB;AACzC,SAAK,MAAM,YAAY,IAAI;AAC3B,SAAK,QAAO;EACb;;;;EAKO,UAAU,QAA6C,QAA2C;AACxG,UAAM,cAAc,OAAO,IAAI,OAAO;AACtC,QAAI,SAAS;AACb,QAAI,aAAa;AAChB,MAAO,KAAK,aAAa,CAAC,QAAO;AAChC,YAAI,IAAI,IAAI,QAAQ,KAAK,QAAQ;AAChC,mBAAS;;MAEX,CAAC;;AAGF,UAAM,cAAc,OAAO,IAAI,OAAO;AAEtC,QAAI,aAAa;AAChB,MAAO,KAAK,aAAa,CAAC,QAAO;AAChC,YAAI,IAAI,IAAI,QAAQ,KAAK,QAAQ;AAChC,mBAAS;;MAEX,CAAC;;AAGF,WAAO;EACR;EAEU,aAAa,OAAsB,SAA8C,SAA4C;EAEvI;;;;EAKO,gBAAgB,UAA6C;AACnE,UAAM,gBAAgB,QAAQ;AAC9B,UAAM,QAAQ,SAAS,IAAI,OAAO;AAClC,QAAI,OAAO;AACV,MAAO,KAAK,OAAO,CAAC,SAAQ;AAC3B,aAAK,aAAa,IAAI;MACvB,CAAC;;EAEH;;;;;EAMO,eAAe,UAA6C;AAClE,UAAM,SAAS,SAAS,IAAI,QAAQ;AAEpC,QAAI,CAAC,SAAS,IAAI,UAAU,GAAG;AAC9B,WAAK,IAAI,oBAAoB,QAAQ;WAEjC;AACJ,UAAI,QAAQ;AACX,aAAK,OAAO,oBAAoB,MAAM;AACtC,cAAM,OAAO;AACb,aAAK,OAAO,SAAS,MAAM,EAAE,MAAY,QAAQ,MAAM,UAAU,OAAM,CAAE;AACzE,aAAK,gBAAgB,QAAQ;;;EAGhC;;AAjXA,OAAA,eAAA,iBAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,iBAAA,cAAA;;;;SAA0C,UAAU,WAAW,OAAO,CAAC,gBAAgB,SAAS,CAAC;;;;ACpGnF,SAAR,YAAiB,GAAG;AACzB,QAAMC,KAAI,CAAC,KAAK,GAAG,KAAK,MAAM,CAAC,GAC3BC,KAAI,CAAC,KAAK,GAAG,KAAK,MAAM,CAAC;AAC7B,SAAO,IAAI,KAAK,MAAMD,IAAGC,EAAC,GAAGD,IAAGC,IAAG,CAAC;AACtC;AAEA,SAAS,IAAI,MAAMD,IAAGC,IAAG,GAAG;AAC1B,MAAI,MAAMD,EAAC,KAAK,MAAMC,EAAC;AAAG,WAAO;AAEjC,MAAI,QACA,OAAO,KAAK,OACZ,OAAO,EAAC,MAAM,EAAC,GACf,KAAK,KAAK,KACV,KAAK,KAAK,KACV,KAAK,KAAK,KACV,KAAK,KAAK,KACV,IACA,IACA,IACA,IACA,OACA,QACA,GACA;AAGJ,MAAI,CAAC;AAAM,WAAO,KAAK,QAAQ,MAAM;AAGrC,SAAO,KAAK,QAAQ;AAClB,QAAI,QAAQD,OAAM,MAAM,KAAK,MAAM;AAAI,WAAK;AAAA;AAAS,WAAK;AAC1D,QAAI,SAASC,OAAM,MAAM,KAAK,MAAM;AAAI,WAAK;AAAA;AAAS,WAAK;AAC3D,QAAI,SAAS,MAAM,EAAE,OAAO,KAAK,IAAI,UAAU,IAAI,KAAK;AAAI,aAAO,OAAO,CAAC,IAAI,MAAM;AAAA,EACvF;AAGA,OAAK,CAAC,KAAK,GAAG,KAAK,MAAM,KAAK,IAAI;AAClC,OAAK,CAAC,KAAK,GAAG,KAAK,MAAM,KAAK,IAAI;AAClC,MAAID,OAAM,MAAMC,OAAM;AAAI,WAAO,KAAK,OAAO,MAAM,SAAS,OAAO,CAAC,IAAI,OAAO,KAAK,QAAQ,MAAM;AAGlG,KAAG;AACD,aAAS,SAAS,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,MAAM,CAAC;AACrE,QAAI,QAAQD,OAAM,MAAM,KAAK,MAAM;AAAI,WAAK;AAAA;AAAS,WAAK;AAC1D,QAAI,SAASC,OAAM,MAAM,KAAK,MAAM;AAAI,WAAK;AAAA;AAAS,WAAK;AAAA,EAC7D,UAAU,IAAI,UAAU,IAAI,YAAY,KAAK,MAAM,OAAO,IAAK,MAAM;AACrE,SAAO,OAAO,CAAC,IAAI,MAAM,OAAO,CAAC,IAAI,MAAM;AAC7C;AAEO,SAAS,OAAO,MAAM;AAC3B,MAAI,GAAG,GAAG,IAAI,KAAK,QACfD,IACAC,IACA,KAAK,IAAI,MAAM,CAAC,GAChB,KAAK,IAAI,MAAM,CAAC,GAChB,KAAK,UACL,KAAK,UACL,KAAK,WACL,KAAK;AAGT,OAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtB,QAAI,MAAMD,KAAI,CAAC,KAAK,GAAG,KAAK,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,MAAMC,KAAI,CAAC,KAAK,GAAG,KAAK,MAAM,CAAC,CAAC;AAAG;AACtF,OAAG,CAAC,IAAID;AACR,OAAG,CAAC,IAAIC;AACR,QAAID,KAAI;AAAI,WAAKA;AACjB,QAAIA,KAAI;AAAI,WAAKA;AACjB,QAAIC,KAAI;AAAI,WAAKA;AACjB,QAAIA,KAAI;AAAI,WAAKA;AAAA,EACnB;AAGA,MAAI,KAAK,MAAM,KAAK;AAAI,WAAO;AAG/B,OAAK,MAAM,IAAI,EAAE,EAAE,MAAM,IAAI,EAAE;AAG/B,OAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtB,QAAI,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,EACjC;AAEA,SAAO;AACT;;;ACnFe,SAAR,cAAiBC,IAAGC,IAAG;AAC5B,MAAI,MAAMD,KAAI,CAACA,EAAC,KAAK,MAAMC,KAAI,CAACA,EAAC;AAAG,WAAO;AAE3C,MAAI,KAAK,KAAK,KACV,KAAK,KAAK,KACV,KAAK,KAAK,KACV,KAAK,KAAK;AAKd,MAAI,MAAM,EAAE,GAAG;AACb,UAAM,KAAK,KAAK,MAAMD,EAAC,KAAK;AAC5B,UAAM,KAAK,KAAK,MAAMC,EAAC,KAAK;AAAA,EAC9B,OAGK;AACH,QAAI,IAAI,KAAK,MAAM,GACf,OAAO,KAAK,OACZ,QACA;AAEJ,WAAO,KAAKD,MAAKA,MAAK,MAAM,KAAKC,MAAKA,MAAK,IAAI;AAC7C,WAAKA,KAAI,OAAO,IAAKD,KAAI;AACzB,eAAS,IAAI,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,MAAM,OAAO,QAAQ,KAAK;AAC7D,cAAQ,GAAG;AAAA,QACT,KAAK;AAAG,eAAK,KAAK,GAAG,KAAK,KAAK;AAAG;AAAA,QAClC,KAAK;AAAG,eAAK,KAAK,GAAG,KAAK,KAAK;AAAG;AAAA,QAClC,KAAK;AAAG,eAAK,KAAK,GAAG,KAAK,KAAK;AAAG;AAAA,QAClC,KAAK;AAAG,eAAK,KAAK,GAAG,KAAK,KAAK;AAAG;AAAA,MACpC;AAAA,IACF;AAEA,QAAI,KAAK,SAAS,KAAK,MAAM;AAAQ,WAAK,QAAQ;AAAA,EACpD;AAEA,OAAK,MAAM;AACX,OAAK,MAAM;AACX,OAAK,MAAM;AACX,OAAK,MAAM;AACX,SAAO;AACT;;;AC1Ce,SAAR,eAAmB;AACxB,MAAI,OAAO,CAAC;AACZ,OAAK,MAAM,SAAS,MAAM;AACxB,QAAI,CAAC,KAAK;AAAQ;AAAG,aAAK,KAAK,KAAK,IAAI;AAAA,aAAU,OAAO,KAAK;AAAA,EAChE,CAAC;AACD,SAAO;AACT;;;ACNe,SAAR,eAAiB,GAAG;AACzB,SAAO,UAAU,SACX,KAAK,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IACvD,MAAM,KAAK,GAAG,IAAI,SAAY,CAAC,CAAC,KAAK,KAAK,KAAK,GAAG,GAAG,CAAC,KAAK,KAAK,KAAK,GAAG,CAAC;AACjF;;;ACJe,SAAR,aAAiB,MAAM,IAAI,IAAI,IAAI,IAAI;AAC5C,OAAK,OAAO;AACZ,OAAK,KAAK;AACV,OAAK,KAAK;AACV,OAAK,KAAK;AACV,OAAK,KAAK;AACZ;;;ACJe,SAARE,cAAiBC,IAAGC,IAAG,QAAQ;AACpC,MAAI,MACA,KAAK,KAAK,KACV,KAAK,KAAK,KACV,IACA,IACAC,KACAC,KACAC,MAAK,KAAK,KACVC,MAAK,KAAK,KACV,QAAQ,CAAC,GACT,OAAO,KAAK,OACZ,GACA;AAEJ,MAAI;AAAM,UAAM,KAAK,IAAI,aAAK,MAAM,IAAI,IAAID,KAAIC,GAAE,CAAC;AACnD,MAAI,UAAU;AAAM,aAAS;AAAA,OACxB;AACH,SAAKL,KAAI,QAAQ,KAAKC,KAAI;AAC1B,IAAAG,MAAKJ,KAAI,QAAQK,MAAKJ,KAAI;AAC1B,cAAU;AAAA,EACZ;AAEA,SAAO,IAAI,MAAM,IAAI,GAAG;AAGtB,QAAI,EAAE,OAAO,EAAE,UACP,KAAK,EAAE,MAAMG,QACb,KAAK,EAAE,MAAMC,QACbH,MAAK,EAAE,MAAM,OACbC,MAAK,EAAE,MAAM;AAAI;AAGzB,QAAI,KAAK,QAAQ;AACf,UAAI,MAAM,KAAKD,OAAM,GACjB,MAAM,KAAKC,OAAM;AAErB,YAAM;AAAA,QACJ,IAAI,aAAK,KAAK,CAAC,GAAG,IAAI,IAAID,KAAIC,GAAE;AAAA,QAChC,IAAI,aAAK,KAAK,CAAC,GAAG,IAAI,IAAI,IAAIA,GAAE;AAAA,QAChC,IAAI,aAAK,KAAK,CAAC,GAAG,IAAI,IAAID,KAAI,EAAE;AAAA,QAChC,IAAI,aAAK,KAAK,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE;AAAA,MAClC;AAGA,UAAI,KAAKD,MAAK,OAAO,IAAKD,MAAK,IAAK;AAClC,YAAI,MAAM,MAAM,SAAS,CAAC;AAC1B,cAAM,MAAM,SAAS,CAAC,IAAI,MAAM,MAAM,SAAS,IAAI,CAAC;AACpD,cAAM,MAAM,SAAS,IAAI,CAAC,IAAI;AAAA,MAChC;AAAA,IACF,OAGK;AACH,UAAI,KAAKA,KAAI,CAAC,KAAK,GAAG,KAAK,MAAM,KAAK,IAAI,GACtC,KAAKC,KAAI,CAAC,KAAK,GAAG,KAAK,MAAM,KAAK,IAAI,GACtC,KAAK,KAAK,KAAK,KAAK;AACxB,UAAI,KAAK,QAAQ;AACf,YAAI,IAAI,KAAK,KAAK,SAAS,EAAE;AAC7B,aAAKD,KAAI,GAAG,KAAKC,KAAI;AACrB,QAAAG,MAAKJ,KAAI,GAAGK,MAAKJ,KAAI;AACrB,eAAO,KAAK;AAAA,MACd;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;;;ACrEe,SAAR,eAAiB,GAAG;AACzB,MAAI,MAAMK,KAAI,CAAC,KAAK,GAAG,KAAK,MAAM,CAAC,CAAC,KAAK,MAAMC,KAAI,CAAC,KAAK,GAAG,KAAK,MAAM,CAAC,CAAC;AAAG,WAAO;AAEnF,MAAI,QACA,OAAO,KAAK,OACZ,UACA,UACA,MACA,KAAK,KAAK,KACV,KAAK,KAAK,KACV,KAAK,KAAK,KACV,KAAK,KAAK,KACVD,IACAC,IACA,IACA,IACA,OACA,QACA,GACA;AAGJ,MAAI,CAAC;AAAM,WAAO;AAIlB,MAAI,KAAK;AAAQ,WAAO,MAAM;AAC5B,UAAI,QAAQD,OAAM,MAAM,KAAK,MAAM;AAAI,aAAK;AAAA;AAAS,aAAK;AAC1D,UAAI,SAASC,OAAM,MAAM,KAAK,MAAM;AAAI,aAAK;AAAA;AAAS,aAAK;AAC3D,UAAI,EAAE,SAAS,MAAM,OAAO,KAAK,IAAI,UAAU,IAAI,KAAK;AAAI,eAAO;AACnE,UAAI,CAAC,KAAK;AAAQ;AAClB,UAAI,OAAQ,IAAI,IAAK,CAAC,KAAK,OAAQ,IAAI,IAAK,CAAC,KAAK,OAAQ,IAAI,IAAK,CAAC;AAAG,mBAAW,QAAQ,IAAI;AAAA,IAChG;AAGA,SAAO,KAAK,SAAS;AAAG,QAAI,EAAE,WAAW,MAAM,OAAO,KAAK;AAAO,aAAO;AACzE,MAAI,OAAO,KAAK;AAAM,WAAO,KAAK;AAGlC,MAAI;AAAU,WAAQ,OAAO,SAAS,OAAO,OAAO,OAAO,SAAS,MAAO;AAG3E,MAAI,CAAC;AAAQ,WAAO,KAAK,QAAQ,MAAM;AAGvC,SAAO,OAAO,CAAC,IAAI,OAAO,OAAO,OAAO,CAAC;AAGzC,OAAK,OAAO,OAAO,CAAC,KAAK,OAAO,CAAC,KAAK,OAAO,CAAC,KAAK,OAAO,CAAC,MACpD,UAAU,OAAO,CAAC,KAAK,OAAO,CAAC,KAAK,OAAO,CAAC,KAAK,OAAO,CAAC,MACzD,CAAC,KAAK,QAAQ;AACnB,QAAI;AAAU,eAAS,CAAC,IAAI;AAAA;AACvB,WAAK,QAAQ;AAAA,EACpB;AAEA,SAAO;AACT;AAEO,SAAS,UAAU,MAAM;AAC9B,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,GAAG,EAAE;AAAG,SAAK,OAAO,KAAK,CAAC,CAAC;AAChE,SAAO;AACT;;;AC7De,SAAR,eAAmB;AACxB,SAAO,KAAK;AACd;;;ACFe,SAAR,eAAmB;AACxB,MAAI,OAAO;AACX,OAAK,MAAM,SAAS,MAAM;AACxB,QAAI,CAAC,KAAK;AAAQ;AAAG,UAAE;AAAA,aAAa,OAAO,KAAK;AAAA,EAClD,CAAC;AACD,SAAO;AACT;;;ACJe,SAAR,cAAiB,UAAU;AAChC,MAAI,QAAQ,CAAC,GAAG,GAAG,OAAO,KAAK,OAAO,OAAO,IAAI,IAAI,IAAI;AACzD,MAAI;AAAM,UAAM,KAAK,IAAI,aAAK,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AAC3E,SAAO,IAAI,MAAM,IAAI,GAAG;AACtB,QAAI,CAAC,SAAS,OAAO,EAAE,MAAM,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,EAAE,KAAK,KAAK,QAAQ;AACvF,UAAI,MAAM,KAAK,MAAM,GAAG,MAAM,KAAK,MAAM;AACzC,UAAI,QAAQ,KAAK,CAAC;AAAG,cAAM,KAAK,IAAI,aAAK,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC;AAC/D,UAAI,QAAQ,KAAK,CAAC;AAAG,cAAM,KAAK,IAAI,aAAK,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC;AAC/D,UAAI,QAAQ,KAAK,CAAC;AAAG,cAAM,KAAK,IAAI,aAAK,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC;AAC/D,UAAI,QAAQ,KAAK,CAAC;AAAG,cAAM,KAAK,IAAI,aAAK,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC;AAAA,IACjE;AAAA,EACF;AACA,SAAO;AACT;;;ACbe,SAAR,mBAAiB,UAAU;AAChC,MAAI,QAAQ,CAAC,GAAG,OAAO,CAAC,GAAG;AAC3B,MAAI,KAAK;AAAO,UAAM,KAAK,IAAI,aAAK,KAAK,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,CAAC;AACvF,SAAO,IAAI,MAAM,IAAI,GAAG;AACtB,QAAI,OAAO,EAAE;AACb,QAAI,KAAK,QAAQ;AACf,UAAI,OAAO,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,KAAK,MAAM,GAAG,MAAM,KAAK,MAAM;AAC5F,UAAI,QAAQ,KAAK,CAAC;AAAG,cAAM,KAAK,IAAI,aAAK,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC;AAC/D,UAAI,QAAQ,KAAK,CAAC;AAAG,cAAM,KAAK,IAAI,aAAK,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC;AAC/D,UAAI,QAAQ,KAAK,CAAC;AAAG,cAAM,KAAK,IAAI,aAAK,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC;AAC/D,UAAI,QAAQ,KAAK,CAAC;AAAG,cAAM,KAAK,IAAI,aAAK,OAAO,IAAI,IAAI,IAAI,EAAE,CAAC;AAAA,IACjE;AACA,SAAK,KAAK,CAAC;AAAA,EACb;AACA,SAAO,IAAI,KAAK,IAAI,GAAG;AACrB,aAAS,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;AAAA,EACzC;AACA,SAAO;AACT;;;ACpBO,SAAS,SAAS,GAAG;AAC1B,SAAO,EAAE,CAAC;AACZ;AAEe,SAAR,UAAiB,GAAG;AACzB,SAAO,UAAU,UAAU,KAAK,KAAK,GAAG,QAAQ,KAAK;AACvD;;;ACNO,SAAS,SAAS,GAAG;AAC1B,SAAO,EAAE,CAAC;AACZ;AAEe,SAAR,UAAiB,GAAG;AACzB,SAAO,UAAU,UAAU,KAAK,KAAK,GAAG,QAAQ,KAAK;AACvD;;;ACOe,SAAR,SAA0B,OAAOC,IAAGC,IAAG;AAC5C,MAAI,OAAO,IAAI,SAASD,MAAK,OAAO,WAAWA,IAAGC,MAAK,OAAO,WAAWA,IAAG,KAAK,KAAK,KAAK,GAAG;AAC9F,SAAO,SAAS,OAAO,OAAO,KAAK,OAAO,KAAK;AACjD;AAEA,SAAS,SAASD,IAAGC,IAAG,IAAI,IAAI,IAAI,IAAI;AACtC,OAAK,KAAKD;AACV,OAAK,KAAKC;AACV,OAAK,MAAM;AACX,OAAK,MAAM;AACX,OAAK,MAAM;AACX,OAAK,MAAM;AACX,OAAK,QAAQ;AACf;AAEA,SAAS,UAAU,MAAM;AACvB,MAAI,OAAO,EAAC,MAAM,KAAK,KAAI,GAAG,OAAO;AACrC,SAAO,OAAO,KAAK;AAAM,WAAO,KAAK,OAAO,EAAC,MAAM,KAAK,KAAI;AAC5D,SAAO;AACT;AAEA,IAAI,YAAY,SAAS,YAAY,SAAS;AAE9C,UAAU,OAAO,WAAW;AAC1B,MAAI,OAAO,IAAI,SAAS,KAAK,IAAI,KAAK,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG,GAC5E,OAAO,KAAK,OACZ,OACA;AAEJ,MAAI,CAAC;AAAM,WAAO;AAElB,MAAI,CAAC,KAAK;AAAQ,WAAO,KAAK,QAAQ,UAAU,IAAI,GAAG;AAEvD,UAAQ,CAAC,EAAC,QAAQ,MAAM,QAAQ,KAAK,QAAQ,IAAI,MAAM,CAAC,EAAC,CAAC;AAC1D,SAAO,OAAO,MAAM,IAAI,GAAG;AACzB,aAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,UAAI,QAAQ,KAAK,OAAO,CAAC,GAAG;AAC1B,YAAI,MAAM;AAAQ,gBAAM,KAAK,EAAC,QAAQ,OAAO,QAAQ,KAAK,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC,EAAC,CAAC;AAAA;AAC9E,eAAK,OAAO,CAAC,IAAI,UAAU,KAAK;AAAA,MACvC;AAAA,IACF;AAAA,EACF;AAEA,SAAO;AACT;AAEA,UAAU,MAAM;AAChB,UAAU,SAAS;AACnB,UAAU,QAAQ;AAClB,UAAU,OAAO;AACjB,UAAU,SAAS;AACnB,UAAU,OAAOC;AACjB,UAAU,SAAS;AACnB,UAAU,YAAY;AACtB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB,UAAU,QAAQ;AAClB,UAAU,aAAa;AACvB,UAAU,IAAI;AACd,UAAU,IAAI;;;ACxEC,SAARC,kBAAiBC,IAAG;AACzB,SAAO,WAAW;AAChB,WAAOA;AAAA,EACT;AACF;;;ACJe,SAAR,eAAiB,QAAQ;AAC9B,UAAQ,OAAO,IAAI,OAAO;AAC5B;;;ACEA,SAAS,EAAE,GAAG;AACZ,SAAO,EAAE,IAAI,EAAE;AACjB;AAEA,SAAS,EAAE,GAAG;AACZ,SAAO,EAAE,IAAI,EAAE;AACjB;AAEe,SAAR,gBAAiB,QAAQ;AAC9B,MAAI,OACA,OACA,QACA,WAAW,GACX,aAAa;AAEjB,MAAI,OAAO,WAAW;AAAY,aAASC,kBAAS,UAAU,OAAO,IAAI,CAAC,MAAM;AAEhF,WAAS,QAAQ;AACf,QAAI,GAAG,IAAI,MAAM,QACb,MACA,MACA,IACA,IACA,IACA;AAEJ,aAAS,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AACnC,aAAO,SAAS,OAAO,GAAG,CAAC,EAAE,WAAW,OAAO;AAC/C,WAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtB,eAAO,MAAM,CAAC;AACd,aAAK,MAAM,KAAK,KAAK,GAAG,MAAM,KAAK;AACnC,aAAK,KAAK,IAAI,KAAK;AACnB,aAAK,KAAK,IAAI,KAAK;AACnB,aAAK,MAAM,KAAK;AAAA,MAClB;AAAA,IACF;AAEA,aAAS,MAAM,MAAM,IAAI,IAAI,IAAI,IAAI;AACnC,UAAI,OAAO,KAAK,MAAM,KAAK,KAAK,GAAG,IAAI,KAAK;AAC5C,UAAI,MAAM;AACR,YAAI,KAAK,QAAQ,KAAK,OAAO;AAC3B,cAAIC,KAAI,KAAK,KAAK,IAAI,KAAK,IACvBC,KAAI,KAAK,KAAK,IAAI,KAAK,IACvB,IAAID,KAAIA,KAAIC,KAAIA;AACpB,cAAI,IAAI,IAAI,GAAG;AACb,gBAAID,OAAM;AAAG,cAAAA,KAAI,eAAO,MAAM,GAAG,KAAKA,KAAIA;AAC1C,gBAAIC,OAAM;AAAG,cAAAA,KAAI,eAAO,MAAM,GAAG,KAAKA,KAAIA;AAC1C,iBAAK,KAAK,IAAI,KAAK,KAAK,CAAC,MAAM,IAAI;AACnC,iBAAK,OAAOD,MAAK,MAAM,KAAK,MAAM,OAAO,MAAM;AAC/C,iBAAK,OAAOC,MAAK,KAAK;AACtB,iBAAK,MAAMD,MAAK,IAAI,IAAI;AACxB,iBAAK,MAAMC,KAAI;AAAA,UACjB;AAAA,QACF;AACA;AAAA,MACF;AACA,aAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAAA,IAChE;AAAA,EACF;AAEA,WAAS,QAAQ,MAAM;AACrB,QAAI,KAAK;AAAM,aAAO,KAAK,IAAI,MAAM,KAAK,KAAK,KAAK;AACpD,aAAS,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACnC,UAAI,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE,IAAI,KAAK,GAAG;AACjC,aAAK,IAAI,KAAK,CAAC,EAAE;AAAA,MACnB;AAAA,IACF;AAAA,EACF;AAEA,WAAS,aAAa;AACpB,QAAI,CAAC;AAAO;AACZ,QAAI,GAAG,IAAI,MAAM,QAAQ;AACzB,YAAQ,IAAI,MAAM,CAAC;AACnB,SAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAG,aAAO,MAAM,CAAC,GAAG,MAAM,KAAK,KAAK,IAAI,CAAC,OAAO,MAAM,GAAG,KAAK;AAAA,EACrF;AAEA,QAAM,aAAa,SAAS,QAAQ,SAAS;AAC3C,YAAQ;AACR,aAAS;AACT,eAAW;AAAA,EACb;AAEA,QAAM,aAAa,SAAS,GAAG;AAC7B,WAAO,UAAU,UAAU,aAAa,CAAC,GAAG,SAAS;AAAA,EACvD;AAEA,QAAM,WAAW,SAAS,GAAG;AAC3B,WAAO,UAAU,UAAU,WAAW,CAAC,GAAG,SAAS;AAAA,EACrD;AAEA,QAAM,SAAS,SAAS,GAAG;AACzB,WAAO,UAAU,UAAU,SAAS,OAAO,MAAM,aAAa,IAAIF,kBAAS,CAAC,CAAC,GAAG,WAAW,GAAG,SAAS;AAAA,EACzG;AAEA,SAAO;AACT;;;AChGA,SAAS,MAAM,GAAG;AAChB,SAAO,EAAE;AACX;AAEA,SAAS,KAAK,UAAU,QAAQ;AAC9B,MAAI,OAAO,SAAS,IAAI,MAAM;AAC9B,MAAI,CAAC;AAAM,UAAM,IAAI,MAAM,qBAAqB,MAAM;AACtD,SAAO;AACT;AAEe,SAAR,aAAiB,OAAO;AAC7B,MAAI,KAAK,OACL,WAAW,iBACX,WACA,WAAWG,kBAAS,EAAE,GACtB,WACA,OACAC,QACA,MACA,QACA,aAAa;AAEjB,MAAI,SAAS;AAAM,YAAQ,CAAC;AAE5B,WAAS,gBAAgB,MAAM;AAC7B,WAAO,IAAI,KAAK,IAAIA,OAAM,KAAK,OAAO,KAAK,GAAGA,OAAM,KAAK,OAAO,KAAK,CAAC;AAAA,EACxE;AAEA,WAAS,MAAM,OAAO;AACpB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,YAAY,EAAE,GAAG;AACrD,eAAS,IAAI,GAAG,MAAM,QAAQ,QAAQC,IAAGC,IAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAG;AAC5D,eAAO,MAAM,CAAC,GAAG,SAAS,KAAK,QAAQ,SAAS,KAAK;AACrD,QAAAD,KAAI,OAAO,IAAI,OAAO,KAAK,OAAO,IAAI,OAAO,MAAM,eAAO,MAAM;AAChE,QAAAC,KAAI,OAAO,IAAI,OAAO,KAAK,OAAO,IAAI,OAAO,MAAM,eAAO,MAAM;AAChE,YAAI,KAAK,KAAKD,KAAIA,KAAIC,KAAIA,EAAC;AAC3B,aAAK,IAAI,UAAU,CAAC,KAAK,IAAI,QAAQ,UAAU,CAAC;AAChD,QAAAD,MAAK,GAAGC,MAAK;AACb,eAAO,MAAMD,MAAK,IAAI,KAAK,CAAC;AAC5B,eAAO,MAAMC,KAAI;AACjB,eAAO,MAAMD,MAAK,IAAI,IAAI;AAC1B,eAAO,MAAMC,KAAI;AAAA,MACnB;AAAA,IACF;AAAA,EACF;AAEA,WAAS,aAAa;AACpB,QAAI,CAAC;AAAO;AAEZ,QAAI,GACA,IAAI,MAAM,QACVC,KAAI,MAAM,QACV,WAAW,IAAI,IAAI,MAAM,IAAI,CAAC,GAAGC,OAAM,CAAC,GAAG,GAAGA,IAAG,KAAK,GAAG,CAAC,CAAC,CAAC,GAC5D;AAEJ,SAAK,IAAI,GAAGJ,SAAQ,IAAI,MAAM,CAAC,GAAG,IAAIG,IAAG,EAAE,GAAG;AAC5C,aAAO,MAAM,CAAC,GAAG,KAAK,QAAQ;AAC9B,UAAI,OAAO,KAAK,WAAW;AAAU,aAAK,SAAS,KAAK,UAAU,KAAK,MAAM;AAC7E,UAAI,OAAO,KAAK,WAAW;AAAU,aAAK,SAAS,KAAK,UAAU,KAAK,MAAM;AAC7E,MAAAH,OAAM,KAAK,OAAO,KAAK,KAAKA,OAAM,KAAK,OAAO,KAAK,KAAK,KAAK;AAC7D,MAAAA,OAAM,KAAK,OAAO,KAAK,KAAKA,OAAM,KAAK,OAAO,KAAK,KAAK,KAAK;AAAA,IAC/D;AAEA,SAAK,IAAI,GAAG,OAAO,IAAI,MAAMG,EAAC,GAAG,IAAIA,IAAG,EAAE,GAAG;AAC3C,aAAO,MAAM,CAAC,GAAG,KAAK,CAAC,IAAIH,OAAM,KAAK,OAAO,KAAK,KAAKA,OAAM,KAAK,OAAO,KAAK,IAAIA,OAAM,KAAK,OAAO,KAAK;AAAA,IAC3G;AAEA,gBAAY,IAAI,MAAMG,EAAC,GAAG,mBAAmB;AAC7C,gBAAY,IAAI,MAAMA,EAAC,GAAG,mBAAmB;AAAA,EAC/C;AAEA,WAAS,qBAAqB;AAC5B,QAAI,CAAC;AAAO;AAEZ,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC5C,gBAAU,CAAC,IAAI,CAAC,SAAS,MAAM,CAAC,GAAG,GAAG,KAAK;AAAA,IAC7C;AAAA,EACF;AAEA,WAAS,qBAAqB;AAC5B,QAAI,CAAC;AAAO;AAEZ,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC5C,gBAAU,CAAC,IAAI,CAAC,SAAS,MAAM,CAAC,GAAG,GAAG,KAAK;AAAA,IAC7C;AAAA,EACF;AAEA,QAAM,aAAa,SAAS,QAAQ,SAAS;AAC3C,YAAQ;AACR,aAAS;AACT,eAAW;AAAA,EACb;AAEA,QAAM,QAAQ,SAAS,GAAG;AACxB,WAAO,UAAU,UAAU,QAAQ,GAAG,WAAW,GAAG,SAAS;AAAA,EAC/D;AAEA,QAAM,KAAK,SAAS,GAAG;AACrB,WAAO,UAAU,UAAU,KAAK,GAAG,SAAS;AAAA,EAC9C;AAEA,QAAM,aAAa,SAAS,GAAG;AAC7B,WAAO,UAAU,UAAU,aAAa,CAAC,GAAG,SAAS;AAAA,EACvD;AAEA,QAAM,WAAW,SAAS,GAAG;AAC3B,WAAO,UAAU,UAAU,WAAW,OAAO,MAAM,aAAa,IAAIJ,kBAAS,CAAC,CAAC,GAAG,mBAAmB,GAAG,SAAS;AAAA,EACnH;AAEA,QAAM,WAAW,SAAS,GAAG;AAC3B,WAAO,UAAU,UAAU,WAAW,OAAO,MAAM,aAAa,IAAIA,kBAAS,CAAC,CAAC,GAAG,mBAAmB,GAAG,SAAS;AAAA,EACnH;AAEA,SAAO;AACT;;;ACpHA,IAAI,OAAO,EAAC,OAAO,MAAM;AAAC,EAAC;AAE3B,SAAS,WAAW;AAClB,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,GAAG;AAC3D,QAAI,EAAE,IAAI,UAAU,CAAC,IAAI,OAAQ,KAAK,KAAM,QAAQ,KAAK,CAAC;AAAG,YAAM,IAAI,MAAM,mBAAmB,CAAC;AACjG,MAAE,CAAC,IAAI,CAAC;AAAA,EACV;AACA,SAAO,IAAI,SAAS,CAAC;AACvB;AAEA,SAAS,SAAS,GAAG;AACnB,OAAK,IAAI;AACX;AAEA,SAAS,eAAe,WAAW,OAAO;AACxC,SAAO,UAAU,KAAK,EAAE,MAAM,OAAO,EAAE,IAAI,SAAS,GAAG;AACrD,QAAI,OAAO,IAAI,IAAI,EAAE,QAAQ,GAAG;AAChC,QAAI,KAAK;AAAG,aAAO,EAAE,MAAM,IAAI,CAAC,GAAG,IAAI,EAAE,MAAM,GAAG,CAAC;AACnD,QAAI,KAAK,CAAC,MAAM,eAAe,CAAC;AAAG,YAAM,IAAI,MAAM,mBAAmB,CAAC;AACvE,WAAO,EAAC,MAAM,GAAG,KAAU;AAAA,EAC7B,CAAC;AACH;AAEA,SAAS,YAAY,SAAS,YAAY;AAAA,EACxC,aAAa;AAAA,EACb,IAAI,SAAS,UAAU,UAAU;AAC/B,QAAI,IAAI,KAAK,GACT,IAAI,eAAe,WAAW,IAAI,CAAC,GACnC,GACA,IAAI,IACJ,IAAI,EAAE;AAGV,QAAI,UAAU,SAAS,GAAG;AACxB,aAAO,EAAE,IAAI;AAAG,aAAK,KAAK,WAAW,EAAE,CAAC,GAAG,UAAU,IAAI,IAAI,EAAE,CAAC,GAAG,SAAS,IAAI;AAAI,iBAAO;AAC3F;AAAA,IACF;AAIA,QAAI,YAAY,QAAQ,OAAO,aAAa;AAAY,YAAM,IAAI,MAAM,uBAAuB,QAAQ;AACvG,WAAO,EAAE,IAAI,GAAG;AACd,UAAI,KAAK,WAAW,EAAE,CAAC,GAAG;AAAM,UAAE,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,SAAS,MAAM,QAAQ;AAAA,eAC/D,YAAY;AAAM,aAAK,KAAK;AAAG,YAAE,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,SAAS,MAAM,IAAI;AAAA,IAC9E;AAEA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,WAAW;AACf,QAAI,OAAO,CAAC,GAAG,IAAI,KAAK;AACxB,aAAS,KAAK;AAAG,WAAK,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM;AACtC,WAAO,IAAI,SAAS,IAAI;AAAA,EAC1B;AAAA,EACA,MAAM,SAAS,MAAM,MAAM;AACzB,SAAK,IAAI,UAAU,SAAS,KAAK;AAAG,eAAS,OAAO,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE;AAAG,aAAK,CAAC,IAAI,UAAU,IAAI,CAAC;AACpH,QAAI,CAAC,KAAK,EAAE,eAAe,IAAI;AAAG,YAAM,IAAI,MAAM,mBAAmB,IAAI;AACzE,SAAK,IAAI,KAAK,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,EAAE;AAAG,QAAE,CAAC,EAAE,MAAM,MAAM,MAAM,IAAI;AAAA,EACrF;AAAA,EACA,OAAO,SAAS,MAAM,MAAM,MAAM;AAChC,QAAI,CAAC,KAAK,EAAE,eAAe,IAAI;AAAG,YAAM,IAAI,MAAM,mBAAmB,IAAI;AACzE,aAAS,IAAI,KAAK,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,EAAE;AAAG,QAAE,CAAC,EAAE,MAAM,MAAM,MAAM,IAAI;AAAA,EACzF;AACF;AAEA,SAAS,IAAI,MAAM,MAAM;AACvB,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQM,IAAG,IAAI,GAAG,EAAE,GAAG;AAC9C,SAAKA,KAAI,KAAK,CAAC,GAAG,SAAS,MAAM;AAC/B,aAAOA,GAAE;AAAA,IACX;AAAA,EACF;AACF;AAEA,SAAS,IAAI,MAAM,MAAM,UAAU;AACjC,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC3C,QAAI,KAAK,CAAC,EAAE,SAAS,MAAM;AACzB,WAAK,CAAC,IAAI,MAAM,OAAO,KAAK,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK,MAAM,IAAI,CAAC,CAAC;AAChE;AAAA,IACF;AAAA,EACF;AACA,MAAI,YAAY;AAAM,SAAK,KAAK,EAAC,MAAY,OAAO,SAAQ,CAAC;AAC7D,SAAO;AACT;AAEA,IAAO,mBAAQ;;;ACnFf,IAAI,QAAQ;AAAZ,IACI,UAAU;AADd,IAEI,WAAW;AAFf,IAGI,YAAY;AAHhB,IAII;AAJJ,IAKI;AALJ,IAMI,YAAY;AANhB,IAOI,WAAW;AAPf,IAQI,YAAY;AARhB,IASI,QAAQ,OAAO,gBAAgB,YAAY,YAAY,MAAM,cAAc;AAT/E,IAUI,WAAW,OAAO,WAAW,YAAY,OAAO,wBAAwB,OAAO,sBAAsB,KAAK,MAAM,IAAI,SAAS,GAAG;AAAE,aAAW,GAAG,EAAE;AAAG;AAElJ,SAAS,MAAM;AACpB,SAAO,aAAa,SAAS,QAAQ,GAAG,WAAW,MAAM,IAAI,IAAI;AACnE;AAEA,SAAS,WAAW;AAClB,aAAW;AACb;AAEO,SAAS,QAAQ;AACtB,OAAK,QACL,KAAK,QACL,KAAK,QAAQ;AACf;AAEA,MAAM,YAAY,MAAM,YAAY;AAAA,EAClC,aAAa;AAAA,EACb,SAAS,SAAS,UAAU,OAAO,MAAM;AACvC,QAAI,OAAO,aAAa;AAAY,YAAM,IAAI,UAAU,4BAA4B;AACpF,YAAQ,QAAQ,OAAO,IAAI,IAAI,CAAC,SAAS,SAAS,OAAO,IAAI,CAAC;AAC9D,QAAI,CAAC,KAAK,SAAS,aAAa,MAAM;AACpC,UAAI;AAAU,iBAAS,QAAQ;AAAA;AAC1B,mBAAW;AAChB,iBAAW;AAAA,IACb;AACA,SAAK,QAAQ;AACb,SAAK,QAAQ;AACb,UAAM;AAAA,EACR;AAAA,EACA,MAAM,WAAW;AACf,QAAI,KAAK,OAAO;AACd,WAAK,QAAQ;AACb,WAAK,QAAQ;AACb,YAAM;AAAA,IACR;AAAA,EACF;AACF;AAEO,SAAS,MAAM,UAAU,OAAO,MAAM;AAC3C,MAAI,IAAI,IAAI;AACZ,IAAE,QAAQ,UAAU,OAAO,IAAI;AAC/B,SAAO;AACT;AAEO,SAAS,aAAa;AAC3B,MAAI;AACJ,IAAE;AACF,MAAI,IAAI,UAAU;AAClB,SAAO,GAAG;AACR,SAAK,IAAI,WAAW,EAAE,UAAU;AAAG,QAAE,MAAM,KAAK,QAAW,CAAC;AAC5D,QAAI,EAAE;AAAA,EACR;AACA,IAAE;AACJ;AAEA,SAAS,OAAO;AACd,cAAY,YAAY,MAAM,IAAI,KAAK;AACvC,UAAQ,UAAU;AAClB,MAAI;AACF,eAAW;AAAA,EACb,UAAE;AACA,YAAQ;AACR,QAAI;AACJ,eAAW;AAAA,EACb;AACF;AAEA,SAAS,OAAO;AACd,MAAIC,OAAM,MAAM,IAAI,GAAG,QAAQA,OAAM;AACrC,MAAI,QAAQ;AAAW,iBAAa,OAAO,YAAYA;AACzD;AAEA,SAAS,MAAM;AACb,MAAI,IAAI,KAAK,UAAU,IAAI,OAAO;AAClC,SAAO,IAAI;AACT,QAAI,GAAG,OAAO;AACZ,UAAI,OAAO,GAAG;AAAO,eAAO,GAAG;AAC/B,WAAK,IAAI,KAAK,GAAG;AAAA,IACnB,OAAO;AACL,WAAK,GAAG,OAAO,GAAG,QAAQ;AAC1B,WAAK,KAAK,GAAG,QAAQ,KAAK,WAAW;AAAA,IACvC;AAAA,EACF;AACA,aAAW;AACX,QAAM,IAAI;AACZ;AAEA,SAAS,MAAM,MAAM;AACnB,MAAI;AAAO;AACX,MAAI;AAAS,cAAU,aAAa,OAAO;AAC3C,MAAI,QAAQ,OAAO;AACnB,MAAI,QAAQ,IAAI;AACd,QAAI,OAAO;AAAU,gBAAU,WAAW,MAAM,OAAO,MAAM,IAAI,IAAI,SAAS;AAC9E,QAAI;AAAU,iBAAW,cAAc,QAAQ;AAAA,EACjD,OAAO;AACL,QAAI,CAAC;AAAU,kBAAY,MAAM,IAAI,GAAG,WAAW,YAAY,MAAM,SAAS;AAC9E,YAAQ,GAAG,SAAS,IAAI;AAAA,EAC1B;AACF;;;AC5GA,IAAMC,KAAI;AACV,IAAMC,KAAI;AACV,IAAMC,KAAI;AAEK,SAARC,eAAmB;AACxB,MAAI,IAAI;AACR,SAAO,OAAO,KAAKH,KAAI,IAAIC,MAAKC,MAAKA;AACvC;;;ACJO,SAASE,GAAE,GAAG;AACnB,SAAO,EAAE;AACX;AAEO,SAASC,GAAE,GAAG;AACnB,SAAO,EAAE;AACX;AAEA,IAAI,gBAAgB;AAApB,IACI,eAAe,KAAK,MAAM,IAAI,KAAK,KAAK,CAAC;AAE9B,SAAR,mBAAiB,OAAO;AAC7B,MAAI,YACA,QAAQ,GACR,WAAW,MACX,aAAa,IAAI,KAAK,IAAI,UAAU,IAAI,GAAG,GAC3C,cAAc,GACd,gBAAgB,KAChB,SAAS,oBAAI,IAAI,GACjB,UAAU,MAAM,IAAI,GACpB,QAAQ,iBAAS,QAAQ,KAAK,GAC9B,SAASC,aAAI;AAEjB,MAAI,SAAS;AAAM,YAAQ,CAAC;AAE5B,WAAS,OAAO;AACd,SAAK;AACL,UAAM,KAAK,QAAQ,UAAU;AAC7B,QAAI,QAAQ,UAAU;AACpB,cAAQ,KAAK;AACb,YAAM,KAAK,OAAO,UAAU;AAAA,IAC9B;AAAA,EACF;AAEA,WAAS,KAAK,YAAY;AACxB,QAAI,GAAG,IAAI,MAAM,QAAQ;AAEzB,QAAI,eAAe;AAAW,mBAAa;AAE3C,aAAS,IAAI,GAAG,IAAI,YAAY,EAAE,GAAG;AACnC,gBAAU,cAAc,SAAS;AAEjC,aAAO,QAAQ,SAAS,OAAO;AAC7B,cAAM,KAAK;AAAA,MACb,CAAC;AAED,WAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtB,eAAO,MAAM,CAAC;AACd,YAAI,KAAK,MAAM;AAAM,eAAK,KAAK,KAAK,MAAM;AAAA;AACrC,eAAK,IAAI,KAAK,IAAI,KAAK,KAAK;AACjC,YAAI,KAAK,MAAM;AAAM,eAAK,KAAK,KAAK,MAAM;AAAA;AACrC,eAAK,IAAI,KAAK,IAAI,KAAK,KAAK;AAAA,MACnC;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAEA,WAAS,kBAAkB;AACzB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,MAAM,IAAI,GAAG,EAAE,GAAG;AAClD,aAAO,MAAM,CAAC,GAAG,KAAK,QAAQ;AAC9B,UAAI,KAAK,MAAM;AAAM,aAAK,IAAI,KAAK;AACnC,UAAI,KAAK,MAAM;AAAM,aAAK,IAAI,KAAK;AACnC,UAAI,MAAM,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,GAAG;AAClC,YAAI,SAAS,gBAAgB,KAAK,KAAK,MAAM,CAAC,GAAG,QAAQ,IAAI;AAC7D,aAAK,IAAI,SAAS,KAAK,IAAI,KAAK;AAChC,aAAK,IAAI,SAAS,KAAK,IAAI,KAAK;AAAA,MAClC;AACA,UAAI,MAAM,KAAK,EAAE,KAAK,MAAM,KAAK,EAAE,GAAG;AACpC,aAAK,KAAK,KAAK,KAAK;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AAEA,WAAS,gBAAgB,OAAO;AAC9B,QAAI,MAAM;AAAY,YAAM,WAAW,OAAO,MAAM;AACpD,WAAO;AAAA,EACT;AAEA,kBAAgB;AAEhB,SAAO,aAAa;AAAA,IAClB;AAAA,IAEA,SAAS,WAAW;AAClB,aAAO,QAAQ,QAAQ,IAAI,GAAG;AAAA,IAChC;AAAA,IAEA,MAAM,WAAW;AACf,aAAO,QAAQ,KAAK,GAAG;AAAA,IACzB;AAAA,IAEA,OAAO,SAAS,GAAG;AACjB,aAAO,UAAU,UAAU,QAAQ,GAAG,gBAAgB,GAAG,OAAO,QAAQ,eAAe,GAAG,cAAc;AAAA,IAC1G;AAAA,IAEA,OAAO,SAAS,GAAG;AACjB,aAAO,UAAU,UAAU,QAAQ,CAAC,GAAG,cAAc;AAAA,IACvD;AAAA,IAEA,UAAU,SAAS,GAAG;AACpB,aAAO,UAAU,UAAU,WAAW,CAAC,GAAG,cAAc;AAAA,IAC1D;AAAA,IAEA,YAAY,SAAS,GAAG;AACtB,aAAO,UAAU,UAAU,aAAa,CAAC,GAAG,cAAc,CAAC;AAAA,IAC7D;AAAA,IAEA,aAAa,SAAS,GAAG;AACvB,aAAO,UAAU,UAAU,cAAc,CAAC,GAAG,cAAc;AAAA,IAC7D;AAAA,IAEA,eAAe,SAAS,GAAG;AACzB,aAAO,UAAU,UAAU,gBAAgB,IAAI,GAAG,cAAc,IAAI;AAAA,IACtE;AAAA,IAEA,cAAc,SAAS,GAAG;AACxB,aAAO,UAAU,UAAU,SAAS,GAAG,OAAO,QAAQ,eAAe,GAAG,cAAc;AAAA,IACxF;AAAA,IAEA,OAAO,SAAS,MAAM,GAAG;AACvB,aAAO,UAAU,SAAS,KAAM,KAAK,OAAO,OAAO,OAAO,IAAI,IAAI,OAAO,IAAI,MAAM,gBAAgB,CAAC,CAAC,GAAI,cAAc,OAAO,IAAI,IAAI;AAAA,IACxI;AAAA,IAEA,MAAM,SAASF,IAAGC,IAAG,QAAQ;AAC3B,UAAI,IAAI,GACJ,IAAI,MAAM,QACV,IACA,IACA,IACA,MACA;AAEJ,UAAI,UAAU;AAAM,iBAAS;AAAA;AACxB,kBAAU;AAEf,WAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtB,eAAO,MAAM,CAAC;AACd,aAAKD,KAAI,KAAK;AACd,aAAKC,KAAI,KAAK;AACd,aAAK,KAAK,KAAK,KAAK;AACpB,YAAI,KAAK;AAAQ,oBAAU,MAAM,SAAS;AAAA,MAC5C;AAEA,aAAO;AAAA,IACT;AAAA,IAEA,IAAI,SAAS,MAAM,GAAG;AACpB,aAAO,UAAU,SAAS,KAAK,MAAM,GAAG,MAAM,CAAC,GAAG,cAAc,MAAM,GAAG,IAAI;AAAA,IAC/E;AAAA,EACF;AACF;;;ACtJe,SAAR,mBAAmB;AACxB,MAAI,OACA,MACA,QACA,OACA,WAAWE,kBAAS,GAAG,GACvB,WACA,eAAe,GACf,eAAe,UACf,SAAS;AAEb,WAAS,MAAM,GAAG;AAChB,QAAI,GAAG,IAAI,MAAM,QAAQ,OAAO,SAAS,OAAOC,IAAGC,EAAC,EAAE,WAAW,UAAU;AAC3E,SAAK,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAAG,aAAO,MAAM,CAAC,GAAG,KAAK,MAAM,KAAK;AAAA,EACtE;AAEA,WAAS,aAAa;AACpB,QAAI,CAAC;AAAO;AACZ,QAAI,GAAG,IAAI,MAAM,QAAQC;AACzB,gBAAY,IAAI,MAAM,CAAC;AACvB,SAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAG,MAAAA,QAAO,MAAM,CAAC,GAAG,UAAUA,MAAK,KAAK,IAAI,CAAC,SAASA,OAAM,GAAG,KAAK;AAAA,EAC3F;AAEA,WAAS,WAAW,MAAM;AACxB,QAAIC,YAAW,GAAG,GAAGC,IAAG,SAAS,GAAGJ,IAAGC,IAAG;AAG1C,QAAI,KAAK,QAAQ;AACf,WAAKD,KAAIC,KAAI,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC9B,aAAK,IAAI,KAAK,CAAC,OAAOG,KAAI,KAAK,IAAI,EAAE,KAAK,IAAI;AAC5C,UAAAD,aAAY,EAAE,OAAO,UAAUC,IAAGJ,MAAKI,KAAI,EAAE,GAAGH,MAAKG,KAAI,EAAE;AAAA,QAC7D;AAAA,MACF;AACA,WAAK,IAAIJ,KAAI;AACb,WAAK,IAAIC,KAAI;AAAA,IACf,OAGK;AACH,UAAI;AACJ,QAAE,IAAI,EAAE,KAAK;AACb,QAAE,IAAI,EAAE,KAAK;AACb;AAAG,QAAAE,aAAY,UAAU,EAAE,KAAK,KAAK;AAAA,aAC9B,IAAI,EAAE;AAAA,IACf;AAEA,SAAK,QAAQA;AAAA,EACf;AAEA,WAAS,MAAM,MAAM,IAAI,GAAGE,KAAI;AAC9B,QAAI,CAAC,KAAK;AAAO,aAAO;AAExB,QAAIL,KAAI,KAAK,IAAI,KAAK,GAClBC,KAAI,KAAK,IAAI,KAAK,GAClB,IAAII,MAAK,IACT,IAAIL,KAAIA,KAAIC,KAAIA;AAIpB,QAAI,IAAI,IAAI,SAAS,GAAG;AACtB,UAAI,IAAI,cAAc;AACpB,YAAID,OAAM;AAAG,UAAAA,KAAI,eAAO,MAAM,GAAG,KAAKA,KAAIA;AAC1C,YAAIC,OAAM;AAAG,UAAAA,KAAI,eAAO,MAAM,GAAG,KAAKA,KAAIA;AAC1C,YAAI,IAAI;AAAc,cAAI,KAAK,KAAK,eAAe,CAAC;AACpD,aAAK,MAAMD,KAAI,KAAK,QAAQ,QAAQ;AACpC,aAAK,MAAMC,KAAI,KAAK,QAAQ,QAAQ;AAAA,MACtC;AACA,aAAO;AAAA,IACT,WAGS,KAAK,UAAU,KAAK;AAAc;AAG3C,QAAI,KAAK,SAAS,QAAQ,KAAK,MAAM;AACnC,UAAID,OAAM;AAAG,QAAAA,KAAI,eAAO,MAAM,GAAG,KAAKA,KAAIA;AAC1C,UAAIC,OAAM;AAAG,QAAAA,KAAI,eAAO,MAAM,GAAG,KAAKA,KAAIA;AAC1C,UAAI,IAAI;AAAc,YAAI,KAAK,KAAK,eAAe,CAAC;AAAA,IACtD;AAEA;AAAG,UAAI,KAAK,SAAS,MAAM;AACzB,YAAI,UAAU,KAAK,KAAK,KAAK,IAAI,QAAQ;AACzC,aAAK,MAAMD,KAAI;AACf,aAAK,MAAMC,KAAI;AAAA,MACjB;AAAA,WAAS,OAAO,KAAK;AAAA,EACvB;AAEA,QAAM,aAAa,SAAS,QAAQ,SAAS;AAC3C,YAAQ;AACR,aAAS;AACT,eAAW;AAAA,EACb;AAEA,QAAM,WAAW,SAAS,GAAG;AAC3B,WAAO,UAAU,UAAU,WAAW,OAAO,MAAM,aAAa,IAAIF,kBAAS,CAAC,CAAC,GAAG,WAAW,GAAG,SAAS;AAAA,EAC3G;AAEA,QAAM,cAAc,SAAS,GAAG;AAC9B,WAAO,UAAU,UAAU,eAAe,IAAI,GAAG,SAAS,KAAK,KAAK,YAAY;AAAA,EAClF;AAEA,QAAM,cAAc,SAAS,GAAG;AAC9B,WAAO,UAAU,UAAU,eAAe,IAAI,GAAG,SAAS,KAAK,KAAK,YAAY;AAAA,EAClF;AAEA,QAAM,QAAQ,SAAS,GAAG;AACxB,WAAO,UAAU,UAAU,SAAS,IAAI,GAAG,SAAS,KAAK,KAAK,MAAM;AAAA,EACtE;AAEA,SAAO;AACT;;;ACjHe,SAARO,WAAiBC,IAAG;AACzB,MAAI,WAAWC,kBAAS,GAAG,GACvB,OACA,WACA;AAEJ,MAAI,OAAOD,OAAM;AAAY,IAAAA,KAAIC,kBAASD,MAAK,OAAO,IAAI,CAACA,EAAC;AAE5D,WAAS,MAAM,OAAO;AACpB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,MAAM,IAAI,GAAG,EAAE,GAAG;AAClD,aAAO,MAAM,CAAC,GAAG,KAAK,OAAO,GAAG,CAAC,IAAI,KAAK,KAAK,UAAU,CAAC,IAAI;AAAA,IAChE;AAAA,EACF;AAEA,WAAS,aAAa;AACpB,QAAI,CAAC;AAAO;AACZ,QAAI,GAAG,IAAI,MAAM;AACjB,gBAAY,IAAI,MAAM,CAAC;AACvB,SAAK,IAAI,MAAM,CAAC;AAChB,SAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtB,gBAAU,CAAC,IAAI,MAAM,GAAG,CAAC,IAAI,CAACA,GAAE,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,MAAM,CAAC,GAAG,GAAG,KAAK;AAAA,IACzF;AAAA,EACF;AAEA,QAAM,aAAa,SAAS,GAAG;AAC7B,YAAQ;AACR,eAAW;AAAA,EACb;AAEA,QAAM,WAAW,SAAS,GAAG;AAC3B,WAAO,UAAU,UAAU,WAAW,OAAO,MAAM,aAAa,IAAIC,kBAAS,CAAC,CAAC,GAAG,WAAW,GAAG,SAAS;AAAA,EAC3G;AAEA,QAAM,IAAI,SAAS,GAAG;AACpB,WAAO,UAAU,UAAUD,KAAI,OAAO,MAAM,aAAa,IAAIC,kBAAS,CAAC,CAAC,GAAG,WAAW,GAAG,SAASD;AAAA,EACpG;AAEA,SAAO;AACT;;;ACtCe,SAARE,WAAiBC,IAAG;AACzB,MAAI,WAAWC,kBAAS,GAAG,GACvB,OACA,WACA;AAEJ,MAAI,OAAOD,OAAM;AAAY,IAAAA,KAAIC,kBAASD,MAAK,OAAO,IAAI,CAACA,EAAC;AAE5D,WAAS,MAAM,OAAO;AACpB,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,MAAM,IAAI,GAAG,EAAE,GAAG;AAClD,aAAO,MAAM,CAAC,GAAG,KAAK,OAAO,GAAG,CAAC,IAAI,KAAK,KAAK,UAAU,CAAC,IAAI;AAAA,IAChE;AAAA,EACF;AAEA,WAAS,aAAa;AACpB,QAAI,CAAC;AAAO;AACZ,QAAI,GAAG,IAAI,MAAM;AACjB,gBAAY,IAAI,MAAM,CAAC;AACvB,SAAK,IAAI,MAAM,CAAC;AAChB,SAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtB,gBAAU,CAAC,IAAI,MAAM,GAAG,CAAC,IAAI,CAACA,GAAE,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,MAAM,CAAC,GAAG,GAAG,KAAK;AAAA,IACzF;AAAA,EACF;AAEA,QAAM,aAAa,SAAS,GAAG;AAC7B,YAAQ;AACR,eAAW;AAAA,EACb;AAEA,QAAM,WAAW,SAAS,GAAG;AAC3B,WAAO,UAAU,UAAU,WAAW,OAAO,MAAM,aAAa,IAAIC,kBAAS,CAAC,CAAC,GAAG,WAAW,GAAG,SAAS;AAAA,EAC3G;AAEA,QAAM,IAAI,SAAS,GAAG;AACpB,WAAO,UAAU,UAAUD,KAAI,OAAO,MAAM,aAAa,IAAIC,kBAAS,CAAC,CAAC,GAAG,WAAW,GAAG,SAASD;AAAA,EACpG;AAEA,SAAO;AACT;;;AC0HM,IAAO,gBAAP,cAA6B,gBAAe;EAAlD,cAAA;;AAEC,WAAA,eAAA,MAAA,QAAA;;;;aAAyB;;AAKzB,WAAA,eAAA,MAAA,qBAAA;;;;aAA8H,mBAAe;;AAK7I,WAAA,eAAA,MAAA,kBAAA;;;;aAA4F,gBAAa,EAAE;;AAK3G,WAAA,eAAA,MAAA,aAAA;;;;aAAqI,aAAS;;AAU9I,WAAA,eAAA,MAAA,UAAA;;;;aAA+B,CAAA;;AAC/B,WAAA,eAAA,MAAA,UAAA;;;;aAA+B,CAAA;;AAW/B,WAAA,eAAA,MAAA,SAAA;;;;aAA0B;;AAC1B,WAAA,eAAA,MAAA,eAAA;;;;aAAiC;;EA4UlC;EAtVW,YAAS;AAClB,UAAM,UAAS;AAEf,SAAK,kBAAkB,GAAG,QAAQ,MAAK;AACtC,WAAK;AACL,WAAK,oBAAmB;IACzB,CAAC;EACF;EAKO,mBAAgB;AACtB,UAAM,iBAAgB;AACtB,QAAI,KAAK,QAAQ,aAAa,GAAG;AAChC,YAAM,cAAc,KAAK,IAAI,aAAa;AAC1C,UAAI,cAAc,KAAK,OAAO;AAC7B,aAAK,eAAe,WAAW,WAAW,KAAK;AAC/C,aAAK,eAAe,WAAW,WAAW,KAAK;;;AAIjD,UAAM,oBAAoB,KAAK;AAE/B,QAAI,KAAK,QAAQ,eAAe,GAAG;AAClC,wBAAkB,cAAc,KAAK,IAAI,iBAAiB,CAAC,CAAC;;AAG7D,QAAI,KAAK,QAAQ,eAAe,GAAG;AAClC,wBAAkB,WAAW,IAAI,KAAK,IAAI,MAAO,IAAI,KAAK,IAAI,iBAAiB,GAAG,CAAC,CAAC;;EAEtF;;;;EAKO,kBAAkB,OAAa;AACrC,UAAM,oBAAoB,KAAK;AAC/B,QAAI,kBAAkB,MAAK,IAAK,MAAK;AACpC,wBAAkB,MAAM,KAAK;AAC7B,wBAAkB,QAAO;;EAE3B;EAEO,sBAAmB;AACzB,SAAK,cAAa;EACnB;EAEU,gBAAgB,UAA6C;AACtE,UAAM,cAAmB,EAAE,OAAO,KAAK,QAAQ,GAAG,KAAK,WAAU,IAAK,GAAG,GAAG,KAAK,YAAW,IAAK,GAAG,SAAkB;AACtH,UAAME,SAAQ,KAAK,OAAO,KAAK,WAAW,IAAI;AAC9C,gBAAY,QAAQA;AAEpB,SAAK,kBAAkB,MAAM,KAAK,MAAM;AAExC,aAAS,IAAI,eAAe,WAAW;AACvC,UAAM,gBAAgB,QAAQ;AAE9B,UAAM,OAAO,SAAS,IAAI,MAAM;AAChC,SAAK,IAAI,KAAK,IAAM;AACpB,SAAK,GAAG,SAAS,MAAK;AACrB,WAAK,cAAa;IACnB,CAAC;AAED,SAAK,OAAO,GAAG,WAAW,MAAK;AAC9B,kBAAY,KAAK,KAAK,EAAC;AACvB,kBAAY,KAAK,KAAK,EAAC;AACvB,WAAK,cAAa;IACnB,CAAC;AAED,SAAK,OAAO,GAAG,YAAY,MAAK;AAC/B,UAAI,SAAS,IAAI,GAAG,KAAK,MAAM;AAC9B,oBAAY,KAAK;;AAElB,UAAI,SAAS,IAAI,GAAG,KAAK,MAAM;AAC9B,oBAAY,KAAK;;IAEnB,CAAC;EACF;EAEU,cAAc,iBAAoE;AAC3F,UAAM,cAAc,eAAe;AAEnC,SAAK,cAAc;AAEnB,UAAM,oBAAoB,KAAK;AAC/B,sBAAkB,MAAM,aAAa,KAAK,cAAc;AACxD,sBAAkB,MAAM,KAAK,MAAM;AAEnC,SAAK,YAAoB,aAAU,KAAK,MAAM;AAC9C,sBAAkB,MAAM,QAAQ,KAAK,SAAS;EAC/C;EAEU,iBAAc;AACvB,UAAM,eAAc;AACpB,SAAK,kBAAkB,GAAE;EAC1B;EAEO,kBAAe;AACrB,UAAM,gBAAe;AAErB,UAAM,oBAAoB,KAAK;AAE/B,QAAI,KAAK,YAAY;AACpB,UAAI,IAAI,KAAK,IAAI,IAAI,KAAK,WAAU,CAAE;AACtC,UAAI,IAAI,KAAK,IAAI,IAAI,KAAK,YAAW,CAAE;AACvC,UAAI,KAAK,KAAK,IAAI,cAAc,CAAC;AACjC,UAAI,KAAK,KAAK,IAAI,eAAe,CAAC;AAElC,UAAI,iBAAiB,KAAK,IAAI,kBAAkB,CAAC;AAEjD,wBAAkB,MAAM,KAAaC,WAAM,EAAG,EAAE,IAAI,IAAI,EAAE,EAAE,SAAS,iBAAiB,MAAM,CAAC,CAAC;AAC9F,wBAAkB,MAAM,KAAaC,WAAM,EAAG,EAAE,IAAI,IAAI,EAAE,EAAE,SAAS,iBAAiB,MAAM,CAAC,CAAC;;AAG/F,QAAI,KAAK,aAAa;AACrB,WAAK,cAAa;;EAEpB;EAEO,gBAAa;AACnB,UAAM,oBAAoB,KAAK;AAC/B,sBAAkB,MAAM,YAAoB,iBAAa,EAAG,SAAS,CAAC,WAAU;AAC/E,UAAI,WAAY,OAAe;AAC/B,UAAI,OAAO,SAAS,IAAI,MAAM;AAC9B,UAAI,SAAS,SAAS,IAAI,QAAQ;AAClC,UAAI,mBAAmB,KAAK,IAAI,oBAAoB,GAAG;AAEvD,UAAI,QAAQ;AACX,eAAO,OAAO,IAAI,UAAU,CAAC,IAAI,KAAK,IAAI,SAAS,CAAC,IAAI;;AAEzD,aAAO;IACR,CAAC,CAAC;AAEF,SAAK,eAAe,OAAO,CAAC,WAAU;AACrC,UAAI,WAAY,OAAe;AAC/B,UAAI,OAAO,SAAS,IAAI,MAAM;AAC9B,UAAI,SAAS,SAAS,IAAI,QAAQ;AAClC,UAAI,cAAc,SAAS,IAAI,aAAa;AAC5C,UAAI,UAAU,aAAa;AAC1B,YAAI,SAAS,OAAO,IAAI,UAAU,CAAC;AAEnC,YAAI,CAAC,YAAY,SAAQ,GAAI;AAC5B,mBAAS,SAAS,YAAY,IAAI,SAAS,GAAG;;AAG/C,kBAAU,KAAK,IAAI,SAAS,CAAC;AAE7B,eAAO,SAAS,KAAK,IAAI,eAAe,CAAC;;IAE3C,CAAC;AACD,SAAK,kBAAkB,GAAG;EAC3B;EAEU,kBAAkB,WAA8C;EAE1E;EAEO,cAAW;AACjB,UAAM,YAAW;AACjB,SAAK,cAAc;EACpB;;;;EAKO,sBAAmB;AACzB,UAAM,YAAY,KAAK;AACvB,QAAI,WAAW;AACd,gBAAU,SAAS,CAAC,cAAa;AAChC,eAAO,KAAK,YAAY,SAAS;MAClC,CAAC;AACD,gBAAU,SAAS,CAAC,cAAa;AAChC,eAAO,KAAK,YAAY,SAAS;MAClC,CAAC;;AAEF,QAAI,KAAK,SAAS,KAAK,IAAI,aAAa,GAAG;AAC1C,WAAK,eAAe,WAAW,WAAW,IAAI;AAC9C,WAAK,eAAe,WAAW,WAAW,IAAI;;AAG/C,QAAI,UAAU,KAAK,kBAAkB,MAAK;AAE1C,IAAO,KAAK,SAAS,CAAC,WAAe;AACpC,YAAM,WAAW,OAAO;AACxB,YAAM,OAAO,SAAS,IAAI,MAAM;AAEhC,WAAK,IAAI,KAAK,OAAO,CAAC;AACtB,WAAK,IAAI,KAAK,OAAO,CAAC;IACvB,CAAC;EAEF;;;;EAKO,eAAe,WAAqD;AAC1E,IAAO,KAAK,WAAW,CAAC,aAAY;AACnC,YAAM,WAAW,SAAS,IAAI,UAAU;AACxC,UAAI,UAAU;AACb,QAAO,KAAK,UAAU,CAAC,OAAM;AAC5B,gBAAM,mBAAmB,KAAK,iBAAiB,KAAK,WAAW,EAAE;AAEjE,cAAI,kBAAkB;AACrB,iBAAK,cAAc,UAAU,kBAAkB,KAAK,IAAI,kBAAkB,CAAC;;QAE7E,CAAC;;AAGF,YAAM,WAAW,SAAS,IAAI,UAAU;AACxC,UAAI,UAAU;AACb,aAAK,eAAe,QAAQ;;IAE9B,CAAC;EACF;;;;EAKU,YAAY,WAAc;AACnC,QAAI,iBAA2F,UAAU;AACzG,QAAI,iBAA2F,UAAU;AAEzG,QAAI,WAAW;AAEf,QAAI,kBAAkB,gBAAgB;AAErC,YAAM,aAAa,eAAe,IAAI,MAAM;AAC5C,UAAI,WAAW,SAAQ,GAAI;AAC1B,eAAO;;AAGR,UAAI,OAAO,UAAU;AACrB,UAAI,MAAM;AACT,mBAAW,KAAK,IAAI,YAAY,CAAC;;AAGlC,YAAM,aAAa,eAAe,IAAI,MAAM;AAE5C,UAAI,WAAW,SAAQ,GAAI;AAC1B,mBAAW;;AAGZ,aAAQ,YAAY,eAAe,IAAI,QAAQ,EAAE,IAAI,UAAU,CAAC,IAAI,WAAW,IAAI,SAAS,CAAC,IAAI,eAAe,IAAI,QAAQ,EAAE,IAAI,UAAU,CAAC,IAAI,WAAW,IAAI,SAAS,CAAC;;AAE3K,WAAO;EACR;;;;EAKU,YAAY,WAAc;AACnC,QAAI,WAAW;AAEf,QAAI,OAAO,UAAU;AACrB,QAAI,MAAM;AACT,iBAAW,KAAK,IAAI,YAAY,CAAC;;AAGlC,UAAM,iBAAiB,UAAU;AACjC,gBAAY,eAAe,IAAI,MAAM,EAAE,IAAI,OAAO;AAElD,WAAO;EACR;EAEU,YAAY,UAA6C;AAClE,UAAM,YAAY,QAAQ;AAC1B,SAAK,cAAc,QAAQ;AAE3B,UAAMC,KAAI,SAAS,IAAI,GAAG;AAC1B,UAAMC,KAAI,SAAS,IAAI,GAAG;AAE1B,UAAM,SAAS,SAAS,IAAI,aAAa;AAEzC,QAAID,MAAK,MAAM;AACb,aAAe,KAAY,gBAAgBA,IAAG,KAAK,WAAU,CAAE;WAE5D;AACH,aAAe,KAAK;;AAGtB,QAAIC,MAAK,MAAM;AACb,aAAe,KAAY,gBAAgBA,IAAG,KAAK,YAAW,CAAE;WAE7D;AACH,aAAe,KAAK;;EAEvB;EAEU,cAAc,UAA6C;AACpE,QAAI,QAAQ,KAAK,WAAU,IAAK,KAAK,YAAW,KAAM;AAEtD,QAAI,YAAmB,gBAAgB,KAAK,IAAI,aAAa,CAAC,GAAG,IAAI;AACrE,QAAI,YAAmB,gBAAgB,KAAK,IAAI,aAAa,CAAC,GAAG,IAAI;AAErE,QAAI,eAAe,SAAS,IAAI,KAAK;AAErC,QAAI,SAAS;AAEb,UAAMC,OAAM,KAAK,WAAW,YAAY,CAAC;AACzC,UAAMC,OAAM,KAAK,WAAW,aAAa,CAAC;AAE1C,QAAIA,OAAM,GAAG;AACZ,eAAS,aAAa,eAAeD,SAAQC,OAAMD,SAAQ,YAAY;;AAGxE,QAAI,CAAO,SAAS,MAAM,GAAG;AAC5B,eAAS;;AAGV,UAAM,WAAW,KAAK,IAAI,qBAAqB,CAAC;AAChD,UAAM,SAAS,KAAK,IAAI,iBAAiB;AAEzC,aAAS,IAAI,QAAQ,EAAE,QAAQ,EAAE,KAAK,UAAU,IAAI,QAAQ,UAAoB,OAAc,CAAE;EACjG;EAEU,aAAa,MAAqB,QAA6C,QAA2C;AACnI,UAAM,SAAS,EAAE,MAAY,QAAQ,OAAO,IAAI,aAAa,EAAE,OAAO,QAAQ,OAAO,IAAI,aAAa,EAAE,OAAO,gBAAgB,QAAQ,gBAAgB,OAAM;AAC7J,SAAK,OAAO,KAAK,MAAM;AACvB,SAAK,WAAW,UAAU,MAAM;AAEhC,SAAK,YAAoB,aAAU,KAAK,MAAM;AAC9C,SAAK,kBAAkB,MAAM,QAAQ,KAAK,SAAS;AACnD,SAAK,kBAAkB,GAAG;EAC3B;EAEU,aAAa,MAAmB;AACzC,UAAM,aAAa,IAAI;AACvB,IAAO,OAAO,KAAK,QAAQ,KAAK,WAAW,QAAQ,CAAC;EACrD;EAEU,gBAAa;AACtB,SAAK,kBAAkB,GAAG;EAC3B;EAEU,eAAY;AAErB,UAAM,aAAY;AAElB,SAAK,SAAS,CAAA;AACd,SAAK,SAAS,CAAA;EACf;;AAhWA,OAAA,eAAA,eAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,eAAA,cAAA;;;;SAA0C,gBAAgB,WAAW,OAAO,CAAC,cAAc,SAAS,CAAC;;;;AC3GhG,IAAO,OAAP,cAAoB,UAAS;EAAnC,cAAA;;AAMC,WAAA,eAAA,MAAA,QAAA;;;;aAAyB;;AAKzB,WAAA,eAAA,MAAA,eAAA;;;;aAAiC,aAAI;;AAErC,WAAA,eAAA,MAAA,aAAA;;;;;;AAOA,WAAA,eAAA,MAAA,WAAA;;;;aAAgD,IAAI,aACnD,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,OAAO,KAAK,KAAK,OAAO;QAC7B,WAAkB,UAAU,KAAK,QAAQ,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,MAAM,OAAO,CAAC;SAC1F,CAAC,KAAK,QAAQ,QAAQ,CAAC,CAAC;;EA2H7B;EAxHW,YAAS;AAClB,UAAM,UAAS;AACf,SAAK,WAAW,UAAU,CAAC;EAC5B;EAEO,mBAAgB;AACtB,UAAM,iBAAgB;AAEtB,QAAI,KAAK,eAAe,QAAQ,GAAG;AAClC,UAAI,KAAK,WAAW;AACnB,aAAK,kBAAkB,KAAK,SAAS;;;EAGxC;EAEU,iBAAc;AACvB,QAAI,KAAK,WAAW;AACnB,YAAM,aAAa,KAAK;AACxB,iBAAW,KAAK,CAAC,KAAK,WAAU,GAAI,KAAK,YAAW,CAAE,CAAC;AACvD,iBAAW,KAAK,SAAS;AACzB,iBAAW,QAAQ,KAAK,IAAI,eAAe,CAAC,CAAC;AAC7C,WAAK,aAAa,KAAK,SAAS;;EAElC;EAEU,YAAY,UAA6C;AAClE,UAAM,YAAY,QAAQ;AAE1B,UAAM,OAAO,SAAS,IAAI,MAAM;AAChC,UAAM,SAAS,SAAS,IAAI,QAAQ;AACpC,UAAM,gBAAgB,SAAS,IAAI,iBAAiB;AAEpD,UAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAE1C,UAAME,KAAI,cAAc,IAAI;AAC5B,UAAMC,KAAI,cAAc,IAAI;AAC5B,UAAM,SAAS,cAAc,IAAI;AAEjC,UAAM,WAAW,KAAK,IAAI,qBAAqB,CAAC;AAChD,UAAM,SAAS,KAAK,IAAI,iBAAiB;AAEzC,SAAK,QAAQ,EAAE,KAAK,KAAK,IAAID,IAAG,UAAoB,OAAc,CAAE;AACpE,SAAK,QAAQ,EAAE,KAAK,KAAK,IAAIC,IAAG,UAAoB,OAAc,CAAE;AAEpE,QAAI,QAAQ;AACX,YAAM,OAAO,SAAS,IAAI,MAAM;AAEhC,aAAO,QAAQ,EAAE,KAAK,UAAU,IAAI,QAAQ,UAAoB,OAAc,CAAE;AAChF,aAAO,YAAY,QAAQ,IAAI;AAC/B,aAAO,YAAY,UAAU,IAAI;;EAEnC;EAEU,kBAAkB,eAAiE;AAC5F,UAAM,WAAW,cAAc,KAAK;AACpC,QAAI,UAAU;AACb,YAAM,OAAO,SAAS,IAAI,MAAM;AAChC,YAAM,SAAS,SAAS,IAAI,QAAQ;AAEpC,YAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAE1C,YAAMD,KAAI,cAAc,IAAI;AAC5B,YAAMC,KAAI,cAAc,IAAI;AAC5B,YAAM,SAAS,cAAc,IAAI;AAEjC,WAAK,OAAO,EAAE,GAAGD,IAAG,GAAGC,GAAC,CAAE;AAC1B,aAAO,IAAI,UAAU,MAAM;AAE3B,YAAM,oBAAoB,cAAc;AACxC,UAAI,mBAAmB;AACtB,QAAO,KAAK,mBAAmB,CAAC,mBAAkB;AACjD,eAAK,kBAAkB,cAAc;QACtC,CAAC;;;EAGJ;;;;EAKO,SAAS,UAA6C;AAC5D,UAAM,OAAO,MAAM,SAAS,QAAQ;AAEpC,UAAM,SAAS,KAAK,SAAS,UAAU,KAAK,QAAQ,KAAI,GAAI,CAAC;AAC7D,SAAK,WAAW,iBAAiB,MAAM;AACvC,SAAK,QAAQ,KAAK,MAAM;AACxB,aAAS,OAAO,UAAU,MAAM;AAEhC,UAAM,QAAQ,SAAS,IAAI,OAAO;AAElC,WAAO,GAAG,UAAU,MAAK;AACxB,YAAM,IAAI,OAAO,IAAI,UAAU,KAAK,MAAK,CAAE,IAAI;AAC/C,YAAM,OAAO,EAAE,UAAU,GAAG,WAAW,EAAC,CAAE;IAC3C,CAAC;AAED,WAAO;EACR;EAEO,MAAM,UAA6C;AACzD,UAAM,gBAAgB,SAAS,IAAI,iBAAiB;AAEpD,QAAID,KAAI,cAAc;AACtB,QAAIC,KAAI,cAAc;AACtB,QAAI,IAAI,cAAc;AAEtB,QAAI,SAAS,KAAK,IAAI,KAAK,WAAU,GAAI,KAAK,YAAW,CAAE,KAAK,IAAI;AAEpE,UAAM,SAAS,KAAK,IAAI,iBAAiB;AACzC,QAAI,WAAW,KAAK,IAAI,qBAAqB,CAAC;AAE9C,QAAI,CAAC,KAAK,QAAQ;AACjB,iBAAW;;AAGZ,SAAK,eAAe,EAAE,KAAK,UAAU,IAAI,QAAQ,UAAoB,OAAc,CAAE;AAErF,UAAM,iBAAiB,KAAK;AAC5B,mBAAe,QAAQ,EAAE,KAAK,KAAK,MAAM,eAAe,EAAC,GAAI,IAAI,KAAK,MAAK,IAAK,IAAID,KAAI,QAAQ,UAAoB,OAAc,CAAE;AACpI,mBAAe,QAAQ,EAAE,KAAK,KAAK,MAAM,eAAe,EAAC,GAAI,IAAI,KAAK,OAAM,IAAK,IAAIC,KAAI,QAAQ,UAAoB,OAAc,CAAE;EACtI;;AA1IA,OAAA,eAAA,MAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,MAAA,cAAA;;;;SAA0C,UAAU,WAAW,OAAO,CAAC,KAAK,SAAS,CAAC;;;;ACAjF,IAAO,YAAP,cAAyB,UAAS;EAAxC,cAAA;;AAMC,WAAA,eAAA,MAAA,QAAA;;;;aAAyB;;AAUzB,WAAA,eAAA,MAAA,cAAA;;;;aAA6D,IAAI,aAChE,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,iBAAiB,KAAK,KAAK,OAAO;QACvC,WAAkB,UAAU,KAAK,WAAW,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,MAAM,OAAO,CAAC;SAC7F,CAAC,KAAK,WAAW,QAAQ,CAAC,CAAC;;AAG/B,WAAA,eAAA,MAAA,oBAAA;;;;aAAsC,kBAAS;;EAoPhD;EAhPW,YAAS;AAClB,SAAK,UAAU,YAAmB,UAAU,KAAK,UAAU,WAAW,CAAC,aAAa,KAAK,UAAU,eAAe,UAAU,CAAC;AAC7H,UAAM,UAAS;AACf,SAAK,WAAW,UAAU,CAAC;AAC3B,SAAK,WAAW,UAAU,CAAC;EAC5B;EAEO,mBAAgB;AACtB,UAAM,iBAAgB;AAEtB,QAAI,KAAK,QAAQ,aAAa,GAAG;AAChC,UAAI,KAAK,WAAW;AACnB,aAAK,aAAa,KAAK,SAAS;;;AAIlC,QAAI,KAAK,eAAe,QAAQ,KAAK,KAAK,eAAe,QAAQ,GAAG;AACnE,UAAI,KAAK,WAAW;AACnB,aAAK,kBAAkB,KAAK,SAAS;;;AAIvC,QAAI,KAAK,QAAQ,aAAa,GAAG;AAChC,WAAK,eAAc;;EAErB;EAEU,iBAAc;AACvB,QAAI,KAAK,WAAW;AACnB,YAAM,kBAAkB,KAAK;AAC7B,UAAI,IAAI,KAAK,WAAU;AACvB,UAAI,IAAI,KAAK,YAAW;AAExB,UAAI,KAAK,IAAI,aAAa,KAAK,cAAc;AAC5C,SAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;;AAGf,sBAAgB,KAAK,CAAC,GAAG,CAAC,CAAC;AAE3B,YAAM,cAAc,KAAK,IAAI,aAAa;AAE1C,UAAU,SAAS,WAAW,GAAG;AAChC,wBAAgB,QAAQ,WAAW;;AAIpC,sBAAgB,KAAK,SAAS;AAC9B,WAAK,aAAa,KAAK,SAAS;;EAElC;EAEU,YAAY,UAA6C;AAClE,UAAM,YAAY,QAAQ;AAE1B,UAAM,OAAO,SAAS,IAAI,MAAM;AAChC,UAAM,YAAY,SAAS,IAAI,WAAW;AAC1C,UAAM,gBAAgB,SAAS,IAAI,iBAAiB;AAEpD,UAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAC1C,UAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAE1C,QAAI,IAAI,IAAI,IAAI;AAEhB,QAAI,KAAK,IAAI,aAAa,KAAK,cAAc;AAC5C,WAAK,cAAc,KAAK;AACxB,WAAK,cAAc,KAAK;AACxB,WAAK,cAAc,KAAK;AACxB,WAAK,cAAc,KAAK;WAEpB;AACJ,WAAK,cAAc,KAAK;AACxB,WAAK,cAAc,KAAK;AACxB,WAAK,cAAc,KAAK;AACxB,WAAK,cAAc,KAAK;;AAEzB,QAAI,IAAI,KAAK;AACb,QAAI,IAAI,KAAK;AAEb,UAAM,WAAW,KAAK,IAAI,qBAAqB,CAAC;AAChD,UAAM,SAAS,KAAK,IAAI,iBAAiB;AAEzC,SAAK,QAAQ,EAAE,KAAK,KAAK,IAAI,IAAI,UAAoB,OAAc,CAAE;AACrE,SAAK,QAAQ,EAAE,KAAK,KAAK,IAAI,IAAI,UAAoB,OAAc,CAAE;AACrE,SAAK,QAAQ,EAAE,KAAK,SAAS,IAAI,GAAG,UAAoB,OAAc,CAAE;AACxE,SAAK,QAAQ,EAAE,KAAK,UAAU,IAAI,GAAG,UAAoB,OAAc,CAAE;AAEzE,QAAI,WAAW;AACd,YAAM,OAAO,SAAS,IAAI,MAAM;AAEhC,gBAAU,QAAQ,EAAE,KAAK,SAAS,IAAI,GAAG,UAAoB,OAAc,CAAE;AAC7E,gBAAU,QAAQ,EAAE,KAAK,UAAU,IAAI,GAAG,UAAoB,OAAc,CAAE;AAC9E,gBAAU,YAAY,QAAQ,IAAI;AAClC,gBAAU,YAAY,UAAU,IAAI;;EAEtC;EAGU,kBAAkB,eAAyE;AACpG,UAAM,WAAW,cAAc,KAAK;AACpC,QAAI,UAAU;AACb,YAAM,OAAO,SAAS,IAAI,MAAM;AAChC,YAAM,YAAY,SAAS,IAAI,WAAW;AAE1C,YAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAC1C,YAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAE1C,UAAI,IAAI,IAAI,IAAI;AAEhB,UAAI,KAAK,IAAI,aAAa,KAAK,cAAc;AAC5C,aAAK,cAAc,KAAK;AACxB,aAAK,cAAc,KAAK;AACxB,aAAK,cAAc,KAAK;AACxB,aAAK,cAAc,KAAK;aAEpB;AACJ,aAAK,cAAc,KAAK;AACxB,aAAK,cAAc,KAAK;AACxB,aAAK,cAAc,KAAK;AACxB,aAAK,cAAc,KAAK;;AAGzB,YAAM,IAAI,KAAK;AACf,YAAM,IAAI,KAAK;AAEf,WAAK,OAAO,EAAE,GAAG,IAAI,GAAG,IAAI,OAAO,GAAG,QAAQ,EAAC,CAAE;AACjD,gBAAU,OAAO,EAAE,OAAO,GAAG,QAAQ,EAAC,CAAE;AAExC,YAAM,oBAAoB,cAAc;AACxC,UAAI,mBAAmB;AACtB,QAAO,KAAK,mBAAmB,CAAC,mBAAkB;AACjD,eAAK,kBAAkB,cAAc;QACtC,CAAC;;;EAGJ;;;;EAKO,SAAS,UAA6C;AAC5D,UAAM,OAAO,MAAM,SAAS,QAAQ;AACpC,SAAK,UAAU,UAAU,IAAI;AAC7B,WAAO;EACR;EAEU,UAAU,UAA+C,MAAmB;AACrF,UAAM,YAAY,KAAK,SAAS,UAAU,KAAK,WAAW,KAAI,GAAI,CAAC;AACnE,SAAK,WAAW,iBAAiB,SAAS;AAC1C,aAAS,OAAO,aAAa,SAAS;AACtC,cAAU,aAAa,QAAQ;AAE/B,UAAM,QAAQ,SAAS,IAAI,OAAO;AAElC,cAAU,GAAG,SAAS,MAAK;AAC1B,YAAM,IAAI,YAAY,UAAU,MAAK,CAAE;IACxC,CAAC;AAED,cAAU,GAAG,UAAU,MAAK;AAC3B,YAAM,IAAI,aAAa,UAAU,OAAM,CAAE;IAC1C,CAAC;EACF;EAEU,MAAM,UAA6C;AAC5D,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,KAAK;AAET,UAAM,UAAU,KAAK,IAAI,WAAW,CAAC,IAAI;AACzC,UAAM,WAAW,KAAK,IAAI,YAAY,CAAC;AAEvC,UAAM,QAAQ,KAAK,WAAU;AAC7B,UAAM,SAAS,KAAK,YAAW;AAE/B,UAAM,WAAW,KAAK,WAAW,YAAY,CAAC;AAC9C,UAAM,cAAc,UAAU,WAAW;AACzC,UAAM,aAAa,SAAS,WAAW;AACvC,UAAM,eAAe,KAAK,IAAI,KAAK,IAAI,gBAAgB,CAAC,GAAG,WAAW,QAAQ;AAE9E,QAAI,YAAY,KAAK;AACrB,QAAI,aAAa,MAAM;AACtB,kBAAY,KAAK,IAAI,aAAa,CAAC;;AAGpC,QAAI,UAAU;AACb,YAAM,gBAAgB,SAAS,IAAI,iBAAiB;AACpD,UAAI,eAAe,cAAc;AAEjC,UAAI,KAAK,IAAI,aAAa,KAAK,cAAc;AAC5C,aAAK,cAAc;AACnB,aAAK,cAAc;AAEnB,aAAK,cAAc;AACnB,aAAK,cAAc;AAEnB,aAAK,KAAK,aAAa;AACvB,aAAK,KAAK,cAAc,YAAY;AAEpC,YAAI,eAAe,UAAU;AAC5B,eAAK;AACL,eAAK;AACL,eAAK,aAAa;AAClB,eAAK,KAAK,aAAa;;aAGpB;AACJ,aAAK,cAAc;AACnB,aAAK,cAAc;AAEnB,aAAK,cAAc;AACnB,aAAK,cAAc;AAEnB,aAAK,KAAK,cAAc;AACxB,aAAK,KAAK,eAAe,YAAY;AAErC,YAAI,eAAe,UAAU;AAC5B,eAAK;AACL,eAAK;AACL,eAAK,cAAc;AACnB,eAAK,KAAK,cAAc;;;;AAK3B,QAAI,SAAS,SAAS,KAAK;AAC3B,QAAI,SAAS,UAAU,KAAK;AAE5B,UAAM,SAAS,KAAK,IAAI,iBAAiB;AACzC,QAAI,WAAW,KAAK,IAAI,qBAAqB,CAAC;AAE9C,QAAI,CAAC,KAAK,QAAQ;AACjB,iBAAW;;AAGZ,SAAK,eAAe,EAAE,KAAK,UAAU,IAAI,QAAQ,UAAoB,OAAc,CAAE;AACrF,SAAK,eAAe,EAAE,KAAK,UAAU,IAAI,QAAQ,UAAoB,OAAc,CAAE;AAErF,SAAK,eAAe,QAAQ,EAAE,KAAK,KAAK,IAAI,CAAC,KAAK,QAAQ,UAAoB,OAAc,CAAE;AAC9F,SAAK,eAAe,QAAQ,EAAE,KAAK,KAAK,IAAI,CAAC,KAAK,QAAQ,UAAoB,OAAc,CAAE;EAC/F;;AAlQA,OAAA,eAAA,WAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,WAAA,cAAA;;;;SAA0C,UAAU,WAAW,OAAO,CAAC,UAAU,SAAS,CAAC;;;;ACwBtF,IAAO,WAAP,cAAwB,UAAS;EAAvC,cAAA;;AAMC,WAAA,eAAA,MAAA,QAAA;;;;aAAyB;;AAKzB,WAAA,eAAA,MAAA,oBAAA;;;;aAAsC,kBAAS;;AAS/C,WAAA,eAAA,MAAA,UAAA;;;;aAA8C,IAAI,aACjD,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,MAAM,KAAK,KAAK,OAAO;QAC5B,WAAkB,UAAU,KAAK,OAAO,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,MAAM,aAAa,QAAQ,OAAO,CAAC;SAC9G,CAAC,KAAK,OAAO,QAAQ,CAAC,CAAC;;AAQ3B,WAAA,eAAA,MAAA,UAAA;;;;aAAoD,IAAI,aACvD,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,YAAY,KAAK,KAAK,OAAO;QAClC,WAAkB,UAAU,KAAK,OAAO,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,IAAI,CAAC;SAChF,CAAC,KAAK,OAAO,QAAQ,CAAC,CAAC;;EAuV5B;EApVW,YAAS;AAClB,UAAM,UAAS;AACf,SAAK,eAAe,OAAO,EAAE,GAAG,KAAK,GAAG,IAAG,CAAE;AAC7C,SAAK,cAAc,MAAM,CAAC;AAC1B,SAAK,cAAc,MAAM,CAAC;EAC3B;EAEO,mBAAgB;AACtB,UAAM,iBAAgB;AAEtB,QAAI,KAAK,eAAe,IAAI,KAAK,KAAK,eAAe,IAAI,GAAG;AAC3D,UAAI,KAAK,WAAW;AACnB,aAAK,kBAAkB,KAAK,SAAS;;;EAGxC;EAEU,iBAAc;AACvB,QAAI,KAAK,WAAW;AACnB,YAAM,kBAAkB,KAAK;AAE7B,UAAI,SAAe,aAAa,GAAG,GAAG,KAAK,IAAI,cAAc,CAAC,GAAG,KAAK,IAAI,YAAY,GAAG,GAAG,CAAC;AAE7F,UAAI,IAAI,KAAK,WAAU;AACvB,UAAI,IAAI,KAAK,YAAW;AAExB,YAAM,KAAK,KAAK,OAAO,QAAQ,OAAO;AACtC,YAAM,KAAK,KAAK,OAAO,SAAS,OAAO;AAEvC,UAAI,IAAI,KAAK,IAAI,IAAI,EAAE;AAEvB,UAAI,IAAW,gBAAgB,KAAK,IAAI,UAAU,IAAI,GAAG,CAAC;AAC1D,UAAI,KAAY,gBAAgB,KAAK,IAAI,eAAe,CAAC,GAAG,CAAC;AAE7D,UAAI,KAAK,GAAG;AACX,aAAK,IAAI;;AAGV,UAAI,IAAI;AAER,WAAK,cAAc,eAAe,EAAE;AACpC,WAAK,cAAc,iBAAiB,CAAC;AAErC,sBAAgB,KAAK,CAAC,GAAG,CAAC,CAAC;AAE3B,WAAK,eAAe,OAAO;QAC1B,IAAI,CAAC,KAAK,OAAO,SAAS,OAAO,OAAO;QAAG,IAAI,CAAC,KAAK,OAAO,QAAQ,OAAO,QAAQ;OACnF;AAED,YAAM,cAAc,KAAK,IAAI,aAAa;AAE1C,UAAU,SAAS,WAAW,GAAG;AAChC,wBAAgB,QAAQ,WAAW;;AAIpC,sBAAgB,KAAK,SAAS;AAC9B,WAAK,aAAa,KAAK,SAAS;;EAElC;EAEU,YAAY,UAA6C;AAClE,UAAM,YAAY,QAAQ;AAE1B,UAAM,gBAAgB,SAAS,IAAI,iBAAiB;AACpD,UAAM,OAAO,SAAS,IAAI,MAAM;AAEhC,SAAK,OAAO,EAAE,GAAG,GAAG,GAAG,EAAC,CAAE;AAC1B,UAAM,WAAW,KAAK,IAAI,qBAAqB,CAAC;AAChD,UAAM,SAAS,KAAK,IAAI,iBAAiB;AAEzC,UAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAC1C,UAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAC1C,UAAM,KAAK,KAAK,WAAW,MAAM,CAAC;AAClC,UAAM,KAAK,KAAK,WAAW,MAAM,CAAC;AAElC,UAAM,KAAK,cAAc,KAAK,SAAS;AACvC,UAAM,KAAK,cAAc,KAAK,SAAS;AACvC,UAAM,KAAK,cAAc,KAAK;AAC9B,UAAM,KAAK,cAAc,KAAK;AAE9B,UAAM,KAAK,KAAK,WAAW,aAAa;AACxC,UAAM,KAAK,KAAK,WAAW,iBAAiB,CAAC;AAE7C,UAAMC,SAAQ,SAAS,IAAI,OAAO;AAClC,QAAIA,QAAO;AACV,YAAM,aAAa,KAAK,IAAI,cAAc,GAAG;AAC7C,YAAM,WAAW,KAAK,IAAI,YAAY,GAAG;AAEzC,YAAM,kBAAkB,aAAa,KAAK,MAAM,WAAW;AAC3D,YAAM,MAAM,aAAa,KAAK,MAAM,WAAW,cAAc;AAE7D,UAAI,mBAAmB,KAAK;AAC5B,UAAI,cAAc,KAAK;AAEvB,0BAAoB;AACpB,qBAAe;AAEf,oBAAc,KAAK,IAAI,GAAG,WAAW;AACrC,yBAAmB,KAAK,IAAI,GAAG,gBAAgB;AAE/C,MAAAA,OAAM,QAAQ,EAAE,KAAK,UAAU,IAAI,aAAa,UAAoB,OAAc,CAAE;AACpF,MAAAA,OAAM,QAAQ,EAAE,KAAK,eAAe,IAAI,kBAAkB,UAAoB,OAAc,CAAE;AAC9F,MAAAA,OAAM,QAAQ,EAAE,KAAK,cAAc,IAAI,iBAAiB,UAAoB,OAAc,CAAE;AAC5F,MAAAA,OAAM,QAAQ,EAAE,KAAK,OAAO,IAAI,KAAK,UAAoB,OAAc,CAAE;AAEzE,YAAM,OAAO,SAAS,IAAI,MAAM;AAEhC,MAAAA,OAAM,YAAY,QAAQ,IAAI;AAC9B,MAAAA,OAAM,YAAY,UAAU,IAAI;;EAElC;EAGU,kBAAkB,eAAwE;AACnG,UAAM,WAAW,cAAc,KAAK;AACpC,QAAI,UAAU;AACb,YAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAC1C,YAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAC1C,YAAM,KAAK,KAAK,WAAW,MAAM,CAAC;AAClC,YAAM,KAAK,KAAK,WAAW,MAAM,CAAC;AAElC,YAAM,KAAK,cAAc,KAAK,SAAS;AACvC,YAAM,KAAK,cAAc,KAAK,SAAS;AACvC,YAAM,KAAK,cAAc,KAAK;AAC9B,YAAM,KAAK,cAAc,KAAK;AAE9B,YAAM,KAAK,KAAK,WAAW,aAAa;AACxC,YAAM,KAAK,KAAK,WAAW,iBAAiB,CAAC;AAE7C,YAAMA,SAAQ,SAAS,IAAI,OAAO;AAClC,UAAIA,QAAO;AACV,cAAM,aAAa,KAAK,IAAI,cAAc,GAAG;AAC7C,cAAM,WAAW,KAAK,IAAI,YAAY,GAAG;AAEzC,cAAM,kBAAkB,aAAa,KAAK,MAAM,WAAW;AAC3D,cAAM,MAAM,aAAa,KAAK,MAAM,WAAW,cAAc;AAE7D,YAAI,mBAAmB,KAAK;AAC5B,YAAI,cAAc,KAAK;AAEvB,4BAAoB;AACpB,uBAAe;AAEf,sBAAc,KAAK,IAAI,GAAG,WAAW;AACrC,2BAAmB,KAAK,IAAI,GAAG,gBAAgB;AAE/C,QAAAA,OAAM,OAAO,EAAE,QAAQ,aAAa,aAAa,kBAAkB,YAAY,iBAAiB,IAAQ,CAAE;;AAG3G,YAAM,oBAAoB,cAAc;AACxC,UAAI,mBAAmB;AACtB,QAAO,KAAK,mBAAmB,CAAC,mBAAkB;AACjD,eAAK,kBAAkB,cAAc;QACtC,CAAC;;;EAGJ;EAEU,UAAU,UAA+C,MAAmB;AACrF,UAAMA,SAAQ,KAAK,SAAS,UAAU,KAAK,OAAO,KAAI,GAAI,CAAC;AAC3D,SAAK,WAAW,iBAAiBA,MAAK;AACtC,aAAS,OAAO,SAASA,MAAK;AAE9B,IAAAA,OAAM,aAAa,QAAQ;AAE3B,IAAAA,OAAM,GAAG,OAAO,MAAK;AACpB,WAAK,aAAa,QAAQ;IAC3B,CAAC;AACD,IAAAA,OAAM,GAAG,eAAe,MAAK;AAC5B,WAAK,aAAa,QAAQ;IAC3B,CAAC;AACD,IAAAA,OAAM,GAAG,UAAU,MAAK;AACvB,WAAK,aAAa,QAAQ;IAC3B,CAAC;EACF;EAEU,aAAa,UAA6C;AACnE,UAAMA,SAAQ,SAAS,IAAI,OAAO;AAClC,UAAM,QAAQ,SAAS,IAAI,OAAO;AAElC,QAAIA,UAAS,OAAO;AACnB,UAAI,cAAcA,OAAM,IAAI,eAAe,CAAC;AAC5C,UAAI,SAASA,OAAM,IAAI,UAAU,CAAC;AAClC,UAAI,QAAQA,OAAM,IAAI,cAAc,CAAC;AACrC,UAAI,MAAM,KAAK,IAAIA,OAAM,IAAI,OAAO,CAAC,CAAC;AACtC,UAAI,aAAa,QAAQ,MAAM;AAC/B,UAAI,WAAW,MAAM,IAAI,UAAU;AAEnC,UAAI,WAAW,SAAS;AACxB,UAAI,YAAY,SAAS,MAAY;AAErC,UAAI,eAAe,KAAK,OAAO,OAAO,YAAY,UAAU;AAC3D,iBAAS;AACT,qBAAa;AACb,oBAAY;AACZ,oBAAY;;AAGb,UAAI,KAAK,MAAM,GAAG,KAAK,OAAO,YAAY,UAAU;AACnD,qBAAa;;AAGd,UAAI,YAAY,YAAY;AAC3B,mBAAW,MAAY,WAAW,eAAe,SAAS,eAAe,KAAK;;AAI/E,YAAM,OAAO,EAAE,WAAsB,CAAE;AACvC,YAAM,WAAW,UAAU,MAAM;AACjC,YAAM,WAAW,eAAe,WAAW;AAE3C,YAAM,OAAO;QACZ;QACA;OACA;;EAEH;EAEU,MAAM,UAA6C;AAC5D,QAAI,KAAK;AACT,QAAI,KAAK;AACT,QAAI,KAAK,KAAK,WAAW,iBAAiB,CAAC;AAE3C,UAAM,gBAAgB,SAAS,IAAI,iBAAiB;AAEpD,QAAI,UAAU,KAAK,IAAI,WAAW,CAAC;AACnC,QAAI,WAAW,KAAK,IAAI,YAAY,CAAC;AACrC,QAAI,eAAe,cAAc;AACjC,QAAI,WAAW,KAAK,WAAW,YAAY,CAAC;AAC5C,QAAI,YAAY,KAAK;AAErB,QAAI,aAAa,MAAM;AACtB,kBAAY,KAAK,IAAI,aAAa,CAAC;;AAGpC,UAAM,cAAc,MAAM,WAAW;AAErC,QAAI,eAAe,UAAU;AAC5B,qBAAe;;AAGhB,QAAI,eAAe,UAAU,GAAG;AAC/B,gBAAU;;AAGX,SAAK,cAAc;AACnB,SAAK,cAAc;AAEnB,QAAI,aAAc,YAAY,UAAU;AAExC,QAAI,aAAa,WAAW,WAAW,GAAG;AACzC,mBAAa,WAAW,WAAW;;AAGpC,QAAI,SAAS,MAAM,KAAK;AACxB,QAAI,SAAS,MAAM,cAAc;AAEjC,QAAI,KAAK,KAAK,IAAI,eAAe,SAAS,QAAQ,IAAI,cAAc;AAEpE,UAAM,SAAS,KAAK,IAAI,iBAAiB;AACzC,QAAI,WAAW,KAAK,IAAI,qBAAqB,CAAC;AAE9C,QAAI,CAAC,KAAK,QAAQ;AACjB,iBAAW;;AAGZ,QAAI,KAAK,CAAC,KAAK;AAEf,SAAK,eAAe,EAAE,KAAK,UAAU,IAAI,QAAQ,UAAoB,OAAc,CAAE;AACrF,SAAK,eAAe,EAAE,KAAK,UAAU,IAAI,QAAQ,UAAoB,OAAc,CAAE;AACrF,SAAK,eAAe,EAAE,KAAK,MAAM,IAAI,IAAI,UAAoB,OAAc,CAAE;AAC7E,SAAK,eAAe,EAAE,KAAK,MAAM,IAAI,IAAI,UAAoB,OAAc,CAAE;EAC9E;EAGU,cAAc,UAA6C;AACpE,UAAM,SAAS,SAAS,IAAI,QAAQ;AACpC,QAAI,QAAQ;AACX,YAAM,WAAW,OAAO,IAAI,UAAU;AACtC,UAAI,UAAU;AACb,QAAO,KAAK,UAAU,CAAC,UAAS;AAC/B,cAAI,SAAS,UAAU;AACtB,iBAAK,gBAAgB,KAAK;AAC1B,kBAAM,IAAI,MAAM,EAAE,KAAI;;QAExB,CAAC;;AAEF,WAAK,cAAc,MAAM;;EAE3B;EAEO,gBAAgB,QAAc;AAEpC,UAAM,SAAS,OAAO,IAAI,QAAQ;AAClC,QAAI,QAAQ;AACX,YAAM,WAAW,OAAO;AAExB,YAAM,YAAY,OAAO,IAAI,aAAa,GAAG;AAC7C,YAAM,YAAY,OAAO,IAAI,aAAa,GAAG;AAE7C,YAAMA,SAAQ,SAAS,IAAI,OAAO;AAClC,YAAM,MAAMA,OAAM,IAAI,OAAO,CAAC;AAC9B,YAAM,QAAQA,OAAM,IAAI,cAAc,CAAC,IAAIA,OAAM,IAAI,OAAO,CAAC,IAAI;AACjE,YAAM,cAAcA,OAAM,IAAI,eAAe,CAAC;AAC9C,YAAM,SAAS,eAAeA,OAAM,IAAI,UAAU,CAAC,IAAI,eAAe;AAEtE,UAAIC,KAAU,IAAI,KAAK,IAAI;AAC3B,UAAIC,KAAU,IAAI,KAAK,IAAI;AAE3B,UAAU,MAAM,KAAK,CAAC,MAAM,OAAa,MAAM,aAAa,CAAC,MAAM,GAAG;AACrE,QAAAD,KAAI;AACJ,QAAAC,KAAI;;AAGL,aAAO,IAAI,KAAKD,EAAC;AACjB,aAAO,IAAI,KAAKC,EAAC;;EAEnB;EAEU,YAAY,UAA+C,gBAAmHC,QAAc;AACrM,UAAM,SAAS,MAAM,YAAY,UAAU,gBAAgBA,MAAK;AAEhE,QAAI,QAAQ;AACX,YAAM,SAAS,OAAO,IAAI,QAAQ;AAClC,YAAMH,SAAQ,SAAS,IAAI,OAAO;AAElC,UAAI,UAAUA,QAAO;AACpB,QAAAA,OAAM,GAAG,OAAO,MAAK;AACpB,eAAK,gBAAgB,MAAM;QAC5B,CAAC;AAED,QAAAA,OAAM,GAAG,UAAU,MAAK;AACvB,eAAK,gBAAgB,MAAM;QAC5B,CAAC;;AAGF,aAAO;;EAET;;AAlXA,OAAA,eAAA,UAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,UAAA,cAAA;;;;SAA0C,UAAU,WAAW,OAAO,CAAC,SAAS,SAAS,CAAC;;;;ACxDrF,IAAO,OAAP,cAAoB,gBAAe;EAAzC,cAAA;;AAMC,WAAA,eAAA,MAAA,QAAA;;;;aAAyB;;AAKzB,WAAA,eAAA,MAAA,oBAAA;;;;aAAsC,aAAI;;AAE1C,WAAA,eAAA,MAAA,aAAA;;;;;;EA+CD;EA7CQ,mBAAgB;AACtB,UAAM,iBAAgB;AAEtB,QAAI,KAAK,QAAQ,aAAa,KAAK,KAAK,QAAQ,UAAU,GAAG;AAC5D,WAAK,eAAc;;EAErB;EAEU,iBAAc;AACvB,QAAI,KAAK,WAAW;AACnB,YAAM,SAAS,KAAK;AAEpB,UAAI,KAAK,IAAI,aAAa,KAAK,YAAY;AAC1C,eAAO,KAAK,CAAC,KAAK,WAAU,GAAI,KAAK,YAAW,CAAE,CAAC;aAE/C;AACJ,eAAO,KAAK,CAAC,KAAK,YAAW,GAAI,KAAK,WAAU,CAAE,CAAC;;AAGpD,aAAO,KAAK,SAAS;;AAGtB,UAAM,eAAc;EACrB;EAEU,UAAU,eAA2D;AAC9E,UAAM,WAAW,KAAK,IAAI,UAAU;AACpC,QAAI,KAAK,IAAI,aAAa,KAAK,YAAY;AAC1C,UAAI,UAAU;AACb,eAAO,EAAE,GAAG,cAAc,GAAG,GAAG,KAAK,YAAW,IAAK,cAAc,EAAC;aAEhE;AACJ,eAAO,EAAE,GAAG,cAAc,GAAG,GAAG,cAAc,EAAC;;WAG5C;AACJ,UAAI,UAAU;AACb,eAAO,EAAE,GAAG,KAAK,WAAU,IAAK,cAAc,GAAG,GAAG,cAAc,EAAC;aAE/D;AACJ,eAAO,EAAE,GAAG,cAAc,GAAG,GAAG,cAAc,EAAC;;;EAGlD;;AAlDA,OAAA,eAAA,MAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,MAAA,cAAA;;;;SAA0C,gBAAgB,WAAW,OAAO,CAAC,KAAK,SAAS,CAAC;;;;ACwBvF,IAAO,UAAP,cAAuB,UAAS;EAAtC,cAAA;;AAMC,WAAA,eAAA,MAAA,QAAA;;;;aAAyB;;AAKzB,WAAA,eAAA,MAAA,qBAAA;;;;aAAgE,SAAS,IAAI,CAAA,CAAE;;AAE/E,WAAA,eAAA,MAAA,kBAAA;;;;aAAoC,gBAAO,EAAG,KAAiB,gBAAe;;AAS9E,WAAA,eAAA,MAAA,cAAA;;;;aAA6D,IAAI,aAChE,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,iBAAiB,KAAK,KAAK,OAAO;QACvC,WAAkB,UAAU,KAAK,WAAW,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,MAAM,OAAO,CAAC;SAC7F,CAAC,KAAK,WAAW,QAAQ,CAAC,CAAC;;EAoPhC;EAjPW,YAAS;AAClB,UAAM,UAAS;AACf,SAAK,WAAW,UAAU,CAAC;AAC3B,SAAK,WAAW,UAAU,CAAC;EAC5B;EAEO,mBAAgB;AACtB,UAAM,iBAAgB;AAEtB,QAAI,KAAK,QAAQ,iBAAiB,GAAG;AACpC,UAAI;AAEJ,cAAQ,KAAK,IAAI,iBAAiB,GAAG;QACpC,KAAK;AACJ,sBAAwB;AACxB;QACD,KAAK;AACJ,sBAAwB;AACxB;QACD,KAAK;AACJ,sBAAwB;AACxB;QACD,KAAK;AACJ,sBAAwB;AACxB;QACD,KAAK;AACJ,sBAAwB;AACxB;;AAEF,UAAI,WAAW;AACd,aAAK,iBAA6B,gBAAO,EAAG,KAAK,SAAS;;AAE3D,UAAI,KAAK,WAAW;AACnB,aAAK,aAAa,KAAK,SAAS;;;AAIlC,QAAI,KAAK,QAAQ,kBAAkB,KAAK,KAAK,QAAQ,iBAAiB,KAAK,KAAK,QAAQ,gBAAgB,KAAK,KAAK,QAAQ,mBAAmB,KAAK,KAAK,QAAQ,kBAAkB,KAAK,KAAK,QAAQ,kBAAkB,GAAG;AACvN,UAAI,KAAK,WAAW;AACnB,aAAK,aAAa,KAAK,SAAS;;;AAIlC,QAAI,KAAK,eAAe,QAAQ,KAAK,KAAK,eAAe,QAAQ,GAAG;AACnE,UAAI,KAAK,WAAW;AACnB,aAAK,kBAAkB,KAAK,SAAS;;;EAGxC;EAEU,iBAAc;AACvB,QAAI,KAAK,WAAW;AACnB,YAAM,gBAAgB,KAAK;AAC3B,oBAAc,KAAK,CAAC,KAAK,WAAU,GAAI,KAAK,YAAW,CAAE,CAAC;AAE1D,YAAM,cAAc,KAAK,IAAI,iBAAiB;AAC9C,YAAM,eAAe,KAAK,IAAI,kBAAkB;AAChD,YAAM,aAAa,KAAK,IAAI,gBAAgB;AAC5C,YAAM,gBAAgB,KAAK,IAAI,mBAAmB;AAClD,YAAM,eAAe,KAAK,IAAI,kBAAkB;AAChD,YAAM,eAAe,KAAK,IAAI,kBAAkB;AAChD,UAAU,SAAS,WAAW,GAAG;AAChC,sBAAc,YAAY,WAAW;;AAEtC,UAAU,SAAS,YAAY,GAAG;AACjC,sBAAc,aAAa,YAAY;;AAExC,UAAU,SAAS,UAAU,GAAG;AAC/B,sBAAc,WAAW,UAAU;;AAEpC,UAAU,SAAS,aAAa,GAAG;AAClC,sBAAc,cAAc,aAAa;;AAE1C,UAAU,SAAS,YAAY,GAAG;AACjC,sBAAc,aAAa,YAAY;;AAExC,UAAU,SAAS,YAAY,GAAG;AACjC,sBAAc,aAAa,YAAY;;AAGxC,oBAAc,KAAK,SAAS;AAC5B,WAAK,aAAa,KAAK,SAAS;;EAElC;EAEU,YAAY,UAA6C;AAClE,UAAM,YAAY,QAAQ;AAE1B,UAAM,OAAO,SAAS,IAAI,MAAM;AAChC,UAAM,YAAY,SAAS,IAAI,WAAW;AAC1C,UAAM,gBAAgB,SAAS,IAAI,iBAAiB;AAEpD,UAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAC1C,UAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAE1C,UAAM,KAAK,cAAc,KAAK;AAC9B,UAAM,KAAK,cAAc,KAAK;AAC9B,UAAM,KAAK,cAAc,KAAK;AAC9B,UAAM,KAAK,cAAc,KAAK;AAE9B,UAAM,IAAI,KAAK;AACf,UAAM,IAAI,KAAK;AAEf,UAAM,WAAW,KAAK,IAAI,qBAAqB,CAAC;AAChD,UAAM,SAAS,KAAK,IAAI,iBAAiB;AAEzC,SAAK,QAAQ,EAAE,KAAK,KAAK,IAAI,IAAI,UAAoB,OAAc,CAAE;AACrE,SAAK,QAAQ,EAAE,KAAK,KAAK,IAAI,IAAI,UAAoB,OAAc,CAAE;AAErE,SAAK,QAAQ,EAAE,KAAK,SAAS,IAAI,GAAG,UAAoB,OAAc,CAAE;AACxE,SAAK,QAAQ,EAAE,KAAK,UAAU,IAAI,GAAG,UAAoB,OAAc,CAAE;AAEzE,QAAI,WAAW;AACd,YAAM,OAAO,SAAS,IAAI,MAAM;AAEhC,gBAAU,QAAQ,EAAE,KAAK,SAAS,IAAI,GAAG,UAAoB,OAAc,CAAE;AAC7E,gBAAU,QAAQ,EAAE,KAAK,UAAU,IAAI,GAAG,UAAoB,OAAc,CAAE;AAC9E,gBAAU,YAAY,QAAQ,IAAI;AAClC,gBAAU,YAAY,UAAU,IAAI;;EAEtC;EAGU,kBAAkB,eAAuE;AAClG,UAAM,WAAW,cAAc,KAAK;AACpC,QAAI,UAAU;AACb,YAAM,OAAO,SAAS,IAAI,MAAM;AAChC,YAAM,YAAY,SAAS,IAAI,WAAW;AAE1C,YAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAC1C,YAAM,SAAS,KAAK,WAAW,UAAU,CAAC;AAE1C,YAAM,KAAK,cAAc,KAAK;AAC9B,YAAM,KAAK,cAAc,KAAK;AAC9B,YAAM,KAAK,cAAc,KAAK;AAC9B,YAAM,KAAK,cAAc,KAAK;AAE9B,YAAM,IAAI,KAAK;AACf,YAAM,IAAI,KAAK;AAEf,WAAK,OAAO,EAAE,GAAG,IAAI,GAAG,IAAI,OAAO,GAAG,QAAQ,EAAC,CAAE;AACjD,gBAAU,OAAO,EAAE,OAAO,GAAG,QAAQ,EAAC,CAAE;AAExC,YAAM,oBAAoB,cAAc;AACxC,UAAI,mBAAmB;AACtB,QAAO,KAAK,mBAAmB,CAAC,mBAAkB;AACjD,eAAK,kBAAkB,cAAc;QACtC,CAAC;;;EAGJ;;;;EAKO,SAAS,UAA6C;AAC5D,UAAM,OAAO,MAAM,SAAS,QAAQ;AAEpC,UAAM,YAAY,KAAK,SAAS,UAAU,KAAK,WAAW,KAAI,GAAI,CAAC;AAEnE,SAAK,WAAW,iBAAiB,SAAS;AAC1C,aAAS,OAAO,aAAa,SAAS;AAEtC,UAAM,QAAQ,SAAS,IAAI,OAAO;AAElC,cAAU,GAAG,SAAS,MAAK;AAC1B,YAAM,WAAW,YAAY,UAAU,MAAK,CAAE;IAC/C,CAAC;AAED,cAAU,GAAG,UAAU,MAAK;AAC3B,YAAM,WAAW,aAAa,UAAU,OAAM,CAAE;IACjD,CAAC;AAED,WAAO;EACR;EAEO,MAAM,UAA6C;AACzD,QAAI,KAAK,MAAK,IAAK,KAAK,KAAK,OAAM,IAAK,GAAG;AAC1C,YAAM,gBAAgB,SAAS,IAAI,iBAAiB;AAEpD,YAAM,mBAAmB,KAAK,IAAI,oBAAoB,CAAC;AAEvD,UAAI,KAAK,cAAc,KAAK;AAC5B,UAAI,KAAK,cAAc,KAAK;AAE5B,UAAI,KAAK,cAAc,KAAK;AAC5B,UAAI,KAAK,cAAc,KAAK;AAE5B,UAAI,UAAU,KAAK,WAAU,IAAK,mBAAmB,MAAM,KAAK;AAChE,UAAI,UAAU,KAAK,YAAW,IAAK,mBAAmB,MAAM,KAAK;AAEjE,YAAM,SAAS,KAAK,IAAI,iBAAiB;AACzC,UAAI,WAAW,KAAK,IAAI,qBAAqB,CAAC;AAE9C,UAAI,CAAC,KAAK,QAAQ;AACjB,mBAAW;;AAGZ,WAAK,eAAe,EAAE,KAAK,UAAU,IAAI,QAAQ,UAAoB,OAAc,CAAE;AACrF,WAAK,eAAe,EAAE,KAAK,UAAU,IAAI,QAAQ,UAAoB,OAAc,CAAE;AAErF,WAAK,eAAe,QAAQ,EAAE,KAAK,KAAK,IAAI,mBAAmB,KAAK,QAAQ,UAAoB,OAAc,CAAE;AAChH,WAAK,eAAe,QAAQ,EAAE,KAAK,KAAK,IAAI,mBAAmB,KAAK,QAAQ,UAAoB,OAAc,CAAE;;EAElH;EAEU,gBAAgB,UAAgD,WAAoB,cAAsB;AACnH,UAAM,gBAAgB,UAAU,WAAW,YAAY;AAEvD,QAAI,UAAU;AACb,UAAI,WAAW,KAAK,IAAI,aAAa,CAAC,IAAI,SAAS,IAAI,OAAO;AAC9D,UAAI,CAAC,KAAK,QAAQ;AACjB,mBAAW,KAAK,IAAI,gBAAgB,CAAC;;AAEtC,YAAM,eAAe,KAAK,iBAAiB,UAAU,QAAQ;AAC7D,WAAK,MAAM,KAAK,CAAC,SAAQ;AACxB,YAAI,aAAa,QAAQ,KAAK,QAA+C,KAAK,IAAI;AACrF,eAAK,WAAW,aAAa,KAAK;eAE9B;AACJ,eAAK,cAAc,WAAW;;MAEhC,CAAC;;AAEF,SAAK,MAAM,sBAAqB;EACjC;EAEU,iBAAiB,UAA+C,UAAgB;AACzF,UAAM,WAAW,SAAS,IAAI,UAAU;AACxC,QAAI,mBAA+D,CAAA;AACnE,IAAO,KAAK,UAAU,CAAC,UAAS;AAC/B,UAAI,MAAM,IAAI,OAAO,KAAK,YAAY,CAAC,MAAM,IAAI,UAAU,GAAG;AAC7D,yBAAiB,KAAK,KAAK;aAEvB;AACJ,2BAAmB,iBAAiB,OAAO,KAAK,iBAAiB,OAAO,QAAQ,CAAC;;IAEnF,CAAC;AACD,WAAO;EACR;;AApQA,OAAA,eAAA,SAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,SAAA,cAAA;;;;SAA0C,UAAU,WAAW,OAAO,CAAC,QAAQ,SAAS,CAAC;;;;AChH3E,SAAR,aAAiB,SAAS;AAC/B,MAAI,IAAI,IACJ,IAAI,QAAQ,QACZI,IACA,IAAI,QAAQ,IAAI,CAAC,GACjB,OAAO;AAEX,SAAO,EAAE,IAAI,GAAG;AACd,IAAAA,KAAI;AACJ,QAAI,QAAQ,CAAC;AACb,YAAQA,GAAE,CAAC,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC,IAAI,EAAE,CAAC;AAAA,EAClC;AAEA,SAAO,OAAO;AAChB;;;ACde,SAAR,iBAAiB,SAAS;AAC/B,MAAI,IAAI,IACJ,IAAI,QAAQ,QACZC,KAAI,GACJC,KAAI,GACJC,IACA,IAAI,QAAQ,IAAI,CAAC,GACjBC,IACA,IAAI;AAER,SAAO,EAAE,IAAI,GAAG;AACd,IAAAD,KAAI;AACJ,QAAI,QAAQ,CAAC;AACb,SAAKC,KAAID,GAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAIA,GAAE,CAAC;AACjC,IAAAF,OAAME,GAAE,CAAC,IAAI,EAAE,CAAC,KAAKC;AACrB,IAAAF,OAAMC,GAAE,CAAC,IAAI,EAAE,CAAC,KAAKC;AAAA,EACvB;AAEA,SAAO,KAAK,GAAG,CAACH,KAAI,GAAGC,KAAI,CAAC;AAC9B;;;ACnBe,SAAR,iBAAiB,SAAS,OAAO;AACtC,MAAI,IAAI,QAAQ,QACZ,IAAI,QAAQ,IAAI,CAAC,GACjBG,KAAI,MAAM,CAAC,GAAGC,KAAI,MAAM,CAAC,GACzB,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,GACnB,IAAI,IACJ,SAAS;AAEb,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAC1B,QAAI,QAAQ,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC;AACnC,QAAM,KAAKA,OAAQ,KAAKA,MAAQD,MAAK,KAAK,OAAOC,KAAI,OAAO,KAAK,MAAM;AAAK,eAAS,CAAC;AACtF,SAAK,IAAI,KAAK;AAAA,EAChB;AAEA,SAAO;AACT;;;ACfA,IAAIC,SAAQ;AAAZ,IACIC,WAAU;AADd,IAEIC,YAAW;AAFf,IAGIC,aAAY;AAHhB,IAIIC;AAJJ,IAKIC;AALJ,IAMIC,aAAY;AANhB,IAOIC,YAAW;AAPf,IAQIC,aAAY;AARhB,IASIC,SAAQ,OAAO,gBAAgB,YAAY,YAAY,MAAM,cAAc;AAT/E,IAUIC,YAAW,OAAO,WAAW,YAAY,OAAO,wBAAwB,OAAO,sBAAsB,KAAK,MAAM,IAAI,SAAS,GAAG;AAAE,aAAW,GAAG,EAAE;AAAG;AAElJ,SAASC,OAAM;AACpB,SAAOJ,cAAaG,UAASE,SAAQ,GAAGL,YAAWE,OAAM,IAAI,IAAID;AACnE;AAEA,SAASI,YAAW;AAClB,EAAAL,YAAW;AACb;AAEO,SAASM,SAAQ;AACtB,OAAK,QACL,KAAK,QACL,KAAK,QAAQ;AACf;AAEAA,OAAM,YAAYC,OAAM,YAAY;AAAA,EAClC,aAAaD;AAAA,EACb,SAAS,SAAS,UAAU,OAAO,MAAM;AACvC,QAAI,OAAO,aAAa;AAAY,YAAM,IAAI,UAAU,4BAA4B;AACpF,YAAQ,QAAQ,OAAOF,KAAI,IAAI,CAAC,SAAS,SAAS,OAAO,IAAI,CAAC;AAC9D,QAAI,CAAC,KAAK,SAASN,cAAa,MAAM;AACpC,UAAIA;AAAU,QAAAA,UAAS,QAAQ;AAAA;AAC1B,QAAAD,YAAW;AAChB,MAAAC,YAAW;AAAA,IACb;AACA,SAAK,QAAQ;AACb,SAAK,QAAQ;AACb,IAAAU,OAAM;AAAA,EACR;AAAA,EACA,MAAM,WAAW;AACf,QAAI,KAAK,OAAO;AACd,WAAK,QAAQ;AACb,WAAK,QAAQ;AACb,MAAAA,OAAM;AAAA,IACR;AAAA,EACF;AACF;AAEO,SAASD,OAAM,UAAU,OAAO,MAAM;AAC3C,MAAI,IAAI,IAAID;AACZ,IAAE,QAAQ,UAAU,OAAO,IAAI;AAC/B,SAAO;AACT;AAEO,SAASG,cAAa;AAC3B,EAAAL,KAAI;AACJ,IAAEX;AACF,MAAI,IAAII,WAAU;AAClB,SAAO,GAAG;AACR,SAAK,IAAIG,YAAW,EAAE,UAAU;AAAG,QAAE,MAAM,KAAK,MAAM,CAAC;AACvD,QAAI,EAAE;AAAA,EACR;AACA,IAAEP;AACJ;AAEA,SAASiB,QAAO;AACd,EAAAV,aAAYD,aAAYG,OAAM,IAAI,KAAKD;AACvC,EAAAR,SAAQC,WAAU;AAClB,MAAI;AACF,IAAAe,YAAW;AAAA,EACb,UAAE;AACA,IAAAhB,SAAQ;AACR,IAAAkB,KAAI;AACJ,IAAAX,YAAW;AAAA,EACb;AACF;AAEA,SAASY,QAAO;AACd,MAAIR,OAAMF,OAAM,IAAI,GAAG,QAAQE,OAAML;AACrC,MAAI,QAAQH;AAAW,IAAAK,cAAa,OAAOF,aAAYK;AACzD;AAEA,SAASO,OAAM;AACb,MAAI,IAAI,KAAKd,WAAU,IAAI,OAAO;AAClC,SAAO,IAAI;AACT,QAAI,GAAG,OAAO;AACZ,UAAI,OAAO,GAAG;AAAO,eAAO,GAAG;AAC/B,WAAK,IAAI,KAAK,GAAG;AAAA,IACnB,OAAO;AACL,WAAK,GAAG,OAAO,GAAG,QAAQ;AAC1B,WAAK,KAAK,GAAG,QAAQ,KAAKA,YAAW;AAAA,IACvC;AAAA,EACF;AACA,EAAAC,YAAW;AACX,EAAAU,OAAM,IAAI;AACZ;AAEA,SAASA,OAAM,MAAM;AACnB,MAAIf;AAAO;AACX,MAAIC;AAAS,IAAAA,WAAU,aAAaA,QAAO;AAC3C,MAAI,QAAQ,OAAOM;AACnB,MAAI,QAAQ,IAAI;AACd,QAAI,OAAO;AAAU,MAAAN,WAAU,WAAWgB,OAAM,OAAOR,OAAM,IAAI,IAAID,UAAS;AAC9E,QAAIN;AAAU,MAAAA,YAAW,cAAcA,SAAQ;AAAA,EACjD,OAAO;AACL,QAAI,CAACA;AAAU,MAAAI,aAAYG,OAAM,IAAI,GAAGP,YAAW,YAAYiB,OAAMhB,UAAS;AAC9E,IAAAH,SAAQ,GAAGU,UAASO,KAAI;AAAA,EAC1B;AACF;;;AC7GA,IAAIG,QAAO,EAAC,OAAO,MAAM;AAAC,EAAC;AAE3B,SAASC,YAAW;AAClB,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,EAAE,GAAG;AAC3D,QAAI,EAAE,IAAI,UAAU,CAAC,IAAI,OAAQ,KAAK,KAAM,QAAQ,KAAK,CAAC;AAAG,YAAM,IAAI,MAAM,mBAAmB,CAAC;AACjG,MAAE,CAAC,IAAI,CAAC;AAAA,EACV;AACA,SAAO,IAAIC,UAAS,CAAC;AACvB;AAEA,SAASA,UAAS,GAAG;AACnB,OAAK,IAAI;AACX;AAEA,SAASC,gBAAe,WAAW,OAAO;AACxC,SAAO,UAAU,KAAK,EAAE,MAAM,OAAO,EAAE,IAAI,SAAS,GAAG;AACrD,QAAI,OAAO,IAAI,IAAI,EAAE,QAAQ,GAAG;AAChC,QAAI,KAAK;AAAG,aAAO,EAAE,MAAM,IAAI,CAAC,GAAG,IAAI,EAAE,MAAM,GAAG,CAAC;AACnD,QAAI,KAAK,CAAC,MAAM,eAAe,CAAC;AAAG,YAAM,IAAI,MAAM,mBAAmB,CAAC;AACvE,WAAO,EAAC,MAAM,GAAG,KAAU;AAAA,EAC7B,CAAC;AACH;AAEAD,UAAS,YAAYD,UAAS,YAAY;AAAA,EACxC,aAAaC;AAAA,EACb,IAAI,SAAS,UAAU,UAAU;AAC/B,QAAI,IAAI,KAAK,GACT,IAAIC,gBAAe,WAAW,IAAI,CAAC,GACnC,GACA,IAAI,IACJ,IAAI,EAAE;AAGV,QAAI,UAAU,SAAS,GAAG;AACxB,aAAO,EAAE,IAAI;AAAG,aAAK,KAAK,WAAW,EAAE,CAAC,GAAG,UAAU,IAAIC,KAAI,EAAE,CAAC,GAAG,SAAS,IAAI;AAAI,iBAAO;AAC3F;AAAA,IACF;AAIA,QAAI,YAAY,QAAQ,OAAO,aAAa;AAAY,YAAM,IAAI,MAAM,uBAAuB,QAAQ;AACvG,WAAO,EAAE,IAAI,GAAG;AACd,UAAI,KAAK,WAAW,EAAE,CAAC,GAAG;AAAM,UAAE,CAAC,IAAIC,KAAI,EAAE,CAAC,GAAG,SAAS,MAAM,QAAQ;AAAA,eAC/D,YAAY;AAAM,aAAK,KAAK;AAAG,YAAE,CAAC,IAAIA,KAAI,EAAE,CAAC,GAAG,SAAS,MAAM,IAAI;AAAA,IAC9E;AAEA,WAAO;AAAA,EACT;AAAA,EACA,MAAM,WAAW;AACf,QAAI,OAAO,CAAC,GAAG,IAAI,KAAK;AACxB,aAAS,KAAK;AAAG,WAAK,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM;AACtC,WAAO,IAAIH,UAAS,IAAI;AAAA,EAC1B;AAAA,EACA,MAAM,SAAS,MAAM,MAAM;AACzB,SAAK,IAAI,UAAU,SAAS,KAAK;AAAG,eAAS,OAAO,IAAI,MAAM,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE;AAAG,aAAK,CAAC,IAAI,UAAU,IAAI,CAAC;AACpH,QAAI,CAAC,KAAK,EAAE,eAAe,IAAI;AAAG,YAAM,IAAI,MAAM,mBAAmB,IAAI;AACzE,SAAK,IAAI,KAAK,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,EAAE;AAAG,QAAE,CAAC,EAAE,MAAM,MAAM,MAAM,IAAI;AAAA,EACrF;AAAA,EACA,OAAO,SAAS,MAAM,MAAM,MAAM;AAChC,QAAI,CAAC,KAAK,EAAE,eAAe,IAAI;AAAG,YAAM,IAAI,MAAM,mBAAmB,IAAI;AACzE,aAAS,IAAI,KAAK,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,GAAG,EAAE;AAAG,QAAE,CAAC,EAAE,MAAM,MAAM,MAAM,IAAI;AAAA,EACzF;AACF;AAEA,SAASE,KAAI,MAAM,MAAM;AACvB,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQE,IAAG,IAAI,GAAG,EAAE,GAAG;AAC9C,SAAKA,KAAI,KAAK,CAAC,GAAG,SAAS,MAAM;AAC/B,aAAOA,GAAE;AAAA,IACX;AAAA,EACF;AACF;AAEA,SAASD,KAAI,MAAM,MAAM,UAAU;AACjC,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,GAAG,EAAE,GAAG;AAC3C,QAAI,KAAK,CAAC,EAAE,SAAS,MAAM;AACzB,WAAK,CAAC,IAAIL,OAAM,OAAO,KAAK,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK,MAAM,IAAI,CAAC,CAAC;AAChE;AAAA,IACF;AAAA,EACF;AACA,MAAI,YAAY;AAAM,SAAK,KAAK,EAAC,MAAY,OAAO,SAAQ,CAAC;AAC7D,SAAO;AACT;AAEA,IAAOO,oBAAQN;;;ACnFA,SAAR,kBAAiBO,IAAG,GAAG;AAC5B,SAAOA,KAAI,IAAI,KAAKA,KAAI,IAAI,IAAIA,MAAK,IAAI,IAAI;AAC/C;;;ACAe,SAAR,iBAAiB,GAAG;AACzB,MAAI,QAAQ;AACZ,MAAI,UAAU;AAEd,MAAI,EAAE,WAAW,GAAG;AAClB,YAAQ,CAAC,GAAGC,OAAM,EAAE,CAAC,IAAIA;AACzB,cAAU,oBAAoB,CAAC;AAAA,EACjC;AAEA,WAAS,KAAKC,IAAGD,IAAG,IAAI,IAAI;AAC1B,QAAI,MAAM;AAAM,WAAK;AACrB,QAAI,MAAM;AAAM,WAAKC,GAAE;AACvB,WAAO,KAAK,IAAI;AACd,YAAM,MAAO,KAAK,OAAQ;AAC1B,UAAI,QAAQA,GAAE,GAAG,GAAGD,EAAC,IAAI;AAAG,aAAK,MAAM;AAAA;AAClC,aAAK;AAAA,IACZ;AACA,WAAO;AAAA,EACT;AAEA,WAAS,MAAMC,IAAGD,IAAG,IAAI,IAAI;AAC3B,QAAI,MAAM;AAAM,WAAK;AACrB,QAAI,MAAM;AAAM,WAAKC,GAAE;AACvB,WAAO,KAAK,IAAI;AACd,YAAM,MAAO,KAAK,OAAQ;AAC1B,UAAI,QAAQA,GAAE,GAAG,GAAGD,EAAC,IAAI;AAAG,aAAK;AAAA;AAC5B,aAAK,MAAM;AAAA,IAClB;AACA,WAAO;AAAA,EACT;AAEA,WAAS,OAAOC,IAAGD,IAAG,IAAI,IAAI;AAC5B,QAAI,MAAM;AAAM,WAAK;AACrB,QAAI,MAAM;AAAM,WAAKC,GAAE;AACvB,UAAM,IAAI,KAAKA,IAAGD,IAAG,IAAI,KAAK,CAAC;AAC/B,WAAO,IAAI,MAAM,MAAMC,GAAE,IAAI,CAAC,GAAGD,EAAC,IAAI,CAAC,MAAMC,GAAE,CAAC,GAAGD,EAAC,IAAI,IAAI,IAAI;AAAA,EAClE;AAEA,SAAO,EAAC,MAAM,QAAQ,MAAK;AAC7B;AAEA,SAAS,oBAAoB,GAAG;AAC9B,SAAO,CAAC,GAAGA,OAAM,kBAAU,EAAE,CAAC,GAAGA,EAAC;AACpC;;;AC7Ce,SAAR,eAAiBE,IAAG;AACzB,SAAOA,OAAM,OAAO,MAAM,CAACA;AAC7B;;;ACEA,IAAM,kBAAkB,iBAAS,iBAAS;AACnC,IAAM,cAAc,gBAAgB;AACpC,IAAM,aAAa,gBAAgB;AACnC,IAAM,eAAe,iBAAS,cAAM,EAAE;;;ACP9B,SAARC,gBAAiB,QAAQ,SAAS;AACvC,MAAIC;AACJ,MAAIC;AACJ,MAAI,YAAY,QAAW;AACzB,eAAW,SAAS,QAAQ;AAC1B,UAAI,SAAS,MAAM;AACjB,YAAID,SAAQ,QAAW;AACrB,cAAI,SAAS;AAAO,YAAAA,OAAMC,OAAM;AAAA,QAClC,OAAO;AACL,cAAID,OAAM;AAAO,YAAAA,OAAM;AACvB,cAAIC,OAAM;AAAO,YAAAA,OAAM;AAAA,QACzB;AAAA,MACF;AAAA,IACF;AAAA,EACF,OAAO;AACL,QAAIC,SAAQ;AACZ,aAAS,SAAS,QAAQ;AACxB,WAAK,QAAQ,QAAQ,OAAO,EAAEA,QAAO,MAAM,MAAM,MAAM;AACrD,YAAIF,SAAQ,QAAW;AACrB,cAAI,SAAS;AAAO,YAAAA,OAAMC,OAAM;AAAA,QAClC,OAAO;AACL,cAAID,OAAM;AAAO,YAAAA,OAAM;AACvB,cAAIC,OAAM;AAAO,YAAAA,OAAM;AAAA,QACzB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO,CAACD,MAAKC,IAAG;AAClB;;;AC5BA,IAAI,QAAQ,MAAM;AAEX,IAAI,QAAQ,MAAM;AAClB,IAAI,MAAM,MAAM;;;ACHvB,IAAI,MAAM,KAAK,KAAK,EAAE;AAAtB,IACI,KAAK,KAAK,KAAK,EAAE;AADrB,IAEI,KAAK,KAAK,KAAK,CAAC;;;ACFpB,IAAO,kBAAQ,SAAS,KAAK,MAAM;AAE5B,SAAS,SAAS,QAAQ;AAC/B,SAAO,SAASE,SAAQC,QAAO,KAAK,GAAG,KAAKA,OAAM,QAAQ;AACxD,QAAIC,KAAI,MAAM,KAAK,CAAC;AACpB,WAAOA,IAAG;AACR,YAAM,IAAI,OAAO,IAAIA,OAAM,GAAG,IAAID,OAAMC,KAAI,EAAE;AAC9C,MAAAD,OAAMC,KAAI,EAAE,IAAID,OAAM,IAAI,EAAE;AAC5B,MAAAA,OAAM,IAAI,EAAE,IAAI;AAAA,IAClB;AACA,WAAOA;AAAA,EACT;AACF;;;ACRe,SAARE,eAAiBC,IAAG,GAAGC,IAAG;AAC/B,UAAQ,EAAE,CAAC,IAAID,GAAE,CAAC,MAAMC,GAAE,CAAC,IAAID,GAAE,CAAC,MAAM,EAAE,CAAC,IAAIA,GAAE,CAAC,MAAMC,GAAE,CAAC,IAAID,GAAE,CAAC;AACpE;;;ACJA,SAAS,mBAAmBE,IAAG,GAAG;AAChC,SAAOA,GAAE,CAAC,IAAI,EAAE,CAAC,KAAKA,GAAE,CAAC,IAAI,EAAE,CAAC;AAClC;AAKA,SAAS,wBAAwB,QAAQ;AACvC,QAAM,IAAI,OAAO,QACbC,WAAU,CAAC,GAAG,CAAC;AACnB,MAAI,OAAO,GAAG;AAEd,OAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACtB,WAAO,OAAO,KAAKC,eAAM,OAAOD,SAAQ,OAAO,CAAC,CAAC,GAAG,OAAOA,SAAQ,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,KAAK;AAAG,QAAE;AAClG,IAAAA,SAAQ,MAAM,IAAI;AAAA,EACpB;AAEA,SAAOA,SAAQ,MAAM,GAAG,IAAI;AAC9B;AAEe,SAARE,cAAiB,QAAQ;AAC9B,OAAK,IAAI,OAAO,UAAU;AAAG,WAAO;AAEpC,MAAI,GACA,GACA,eAAe,IAAI,MAAM,CAAC,GAC1B,gBAAgB,IAAI,MAAM,CAAC;AAE/B,OAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAG,iBAAa,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC;AAC1E,eAAa,KAAK,kBAAkB;AACpC,OAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AAAG,kBAAc,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;AAEnF,MAAI,eAAe,wBAAwB,YAAY,GACnD,eAAe,wBAAwB,aAAa;AAGxD,MAAI,WAAW,aAAa,CAAC,MAAM,aAAa,CAAC,GAC7C,YAAY,aAAa,aAAa,SAAS,CAAC,MAAM,aAAa,aAAa,SAAS,CAAC,GAC1F,OAAO,CAAC;AAIZ,OAAK,IAAI,aAAa,SAAS,GAAG,KAAK,GAAG,EAAE;AAAG,SAAK,KAAK,OAAO,aAAa,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjG,OAAK,IAAI,CAAC,UAAU,IAAI,aAAa,SAAS,WAAW,EAAE;AAAG,SAAK,KAAK,OAAO,aAAa,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAEhH,SAAO;AACT;;;AChDe,SAARC,gBAAiB,SAAS;AAC/B,MAAI,IAAI,IACJ,IAAI,QAAQ,QACZ,IAAI,QAAQ,IAAI,CAAC,GACjB,IACA,IACA,KAAK,EAAE,CAAC,GACR,KAAK,EAAE,CAAC,GACR,YAAY;AAEhB,SAAO,EAAE,IAAI,GAAG;AACd,SAAK;AACL,SAAK;AACL,QAAI,QAAQ,CAAC;AACb,SAAK,EAAE,CAAC;AACR,SAAK,EAAE,CAAC;AACR,UAAM;AACN,UAAM;AACN,iBAAa,KAAK,MAAM,IAAI,EAAE;AAAA,EAChC;AAEA,SAAO;AACT;;;ACtBO,IAAI,UAAU;AAEd,SAAS,aAAa,GAAG;AAC9B,SAAO,KAAK,WAAW,KAAK,CAAC;AAC/B;AAIO,SAAS,IAAI,IAAI,IAAI;AAC1B,SAAO,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG;AAC/C;AAKO,SAAS,gBAAgB,IAAI,IAAI;AACtC,SACE,aAAa,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,KACtC,aAAa,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC,KACtC,aAAa,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,CAAC;AAE1C;AAKO,SAAS,iBAAiB,SAAS;AACxC,MAAI,MAAM,cAAc,IAAI,IAAI,IAAI,IAAI,IAAI;AAG5C,OAAK,QAAQ,QAAQ,SAAS,CAAC;AAC/B,OAAK,QAAQ,QAAQ,SAAS,CAAC;AAC/B,OAAK,QAAQ,CAAC;AACd,OAAK,KAAK,IAAI,EAAE;AAChB,OAAK,KAAK,IAAI,EAAE;AAChB,iBAAe,sBAAsB,IAAI,EAAE;AAE3C,SAAO,KAAK,KAAK,YAAY;AAG7B,OAAK;AACL,OAAK;AACL,OAAK,QAAQ,CAAC;AACd,OAAK;AACL,OAAK,KAAK,IAAI,EAAE;AAChB,iBAAe,sBAAsB,IAAI,EAAE;AAE3C,MAAI,KAAK,KAAK,YAAY,MAAM,MAAM;AACpC,WAAO;AAAA,EACT;AAGA,OAAK,IAAI,GAAG,IAAI,QAAQ,SAAS,GAAG,KAAK;AACvC,SAAK;AACL,SAAK;AACL,SAAK,QAAQ,CAAC;AACd,SAAK;AACL,SAAK,KAAK,IAAI,EAAE;AAChB,mBAAe,sBAAsB,IAAI,EAAE;AAE3C,QAAI,KAAK,KAAK,YAAY,MAAM,MAAM;AACpC,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAEA,SAAS,KAAK,MAAM,IAAI;AACtB,SAAO,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC;AAC1C;AAEA,SAAS,sBAAsB,IAAI,IAAI;AACrC,SAAO,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC;AACrC;;;ACxEO,SAAS,iBAAkB,MAAM,MAAM;AAC5C,OAAK,OAAO;AACZ,OAAK,OAAO;AACZ,OAAK,QAAQ;AACb,OAAK,QAAQ;AACb,OAAK,QAAQ;AACb,OAAK,QAAQ;AACf;AAGO,SAAS,aAAc,SAAS;AACrC,OAAK,UAAU;AACf,OAAK,OAAO;AACd;AAGA,aAAa,UAAU,MAAM,SAAS,KAAK;AACzC,MAAI,KAAK,SAAS,MAAM;AACtB,SAAK,OAAO;AAAA,EACd,OAAO;AACL,QAAI,KAAK,SAAS;AAChB,WAAK,KAAK,QAAQ;AAClB,UAAI,QAAQ,KAAK;AACjB,WAAK,OAAO;AAAA,IACd,OAAO;AACL,WAAK,KAAK,QAAQ;AAClB,UAAI,QAAQ,KAAK;AACjB,WAAK,OAAO;AAAA,IACd;AAAA,EACF;AACF;AAEA,aAAa,UAAU,UAAU,WAAW;AAC1C,SAAO,KAAK,SAAS;AACvB;AAGA,aAAa,UAAU,OAAO,SAAS,SAAS;AAC9C,MAAI,KAAK,SAAS;AAChB;AAAA,EACF;AACA,MAAI,OAAO,KAAK;AAChB,KAAG;AACD,YAAQ,KAAK,KAAK,IAAI;AACtB,SAAK,KAAK,SAAS;AACnB,WAAO,KAAK;AAAA,EACd,SAAS,SAAS;AACpB;AAEA,aAAa,UAAU,YAAY,WAAW;AAC5C,MAAI,KAAK,SAAS;AAChB,QAAI,OAAO,KAAK;AAChB,OAAG;AACD,UAAI,KAAK,UAAU,MAAM;AACvB,YAAI,KAAK,UAAU,MAAM;AACvB,eAAK,KAAK,UAAU,OAAO;AAAA,QAC7B,OAAO;AACL,eAAK,MAAM,QAAQ;AACnB,eAAK,KAAK,UAAU,OAAO,KAAK;AAAA,QAClC;AAAA,MACF,OAAO;AACL,YAAI,KAAK,SAAS,MAAM;AACtB,eAAK,MAAM,QAAQ,KAAK;AAAA,QAC1B;AACA,aAAK,MAAM,QAAQ,KAAK;AAAA,MAC1B;AACA,aAAO,KAAK;AACZ,UAAI,QAAQ,MAAM;AAChB,aAAK,QAAQ;AAAA,MACf;AAAA,IACF,SAAS,QAAQ;AAAA,EACnB,OAAO;AACL,QAAI,OAAO,KAAK;AAChB,OAAG;AACD,UAAI,KAAK,SAAS,MAAM;AACtB,YAAI,KAAK,SAAS,MAAM;AACtB,eAAK,KAAK,UAAU,OAAO;AAAA,QAC7B,OAAO;AACL,eAAK,MAAM,QAAQ;AACnB,eAAK,KAAK,UAAU,OAAO,KAAK;AAAA,QAClC;AAAA,MACF,OAAO;AACL,YAAI,KAAK,SAAS,MAAM;AACtB,eAAK,MAAM,QAAQ,KAAK;AAAA,QAC1B;AACA,aAAK,MAAM,QAAQ,KAAK;AAAA,MAC1B;AACA,aAAO,KAAK;AACZ,UAAI,QAAQ;AACV,aAAK,QAAQ;AAAA,IACjB,SAAS,QAAQ;AAAA,EACnB;AACF;AAGA,aAAa,UAAU,cAAc,WAAW;AAC9C,MAAI,OAAO,CAAC,GACV,OAAO,KAAK;AACd,SAAO,SAAS,MAAM;AACpB,SAAK,KAAK,KAAK,IAAI;AACnB,WAAO,KAAK;AAAA,EACd;AACA,SAAO;AACT;;;ACpGO,SAAS,OAAQC,IAAGC,IAAG,GAAG,QAAQ,MAAM,SAAS;AACtD,OAAK,IAAID;AACT,OAAK,IAAIC;AACT,OAAK,SAAS;AACd,OAAK,QAAQ;AACb,OAAK,YAAY,IAAI,aAAa,KAAK;AACvC,OAAK,aAAa;AAClB,OAAK,oBAAoB;AACzB,OAAK,UAAU;AACf,OAAK,iBAAiB;AACtB,OAAK,UAAU;AAEf,MAAI,SAAS,QAAW;AACtB,SAAK,iBAAiB;AAAA,EACxB;AACA,MAAI,WAAW,QAAW;AACxB,SAAK,UAAU;AAAA,EACjB;AACA,MAAI,UAAU,MAAM;AAClB,SAAK,SAAS;AAAA,EAChB;AACA,MAAI,KAAK,MAAM;AACb,SAAK,IAAI;AAAA,EACX,OAAO;AACL,SAAK,IAAI,KAAK,SAAS,KAAK,GAAG,KAAK,GAAG,KAAK,MAAM;AAAA,EACpD;AACF;AAEA,OAAO,UAAU,WAAW,SAASD,IAAGC,IAAG,QAAQ;AACjD,SAASD,KAAEA,KAAMC,KAAEA,KAAK;AAC1B;AAEA,OAAO,UAAU,YAAY,SAAS,QAAQ;AAC5C,OAAK,SAAS;AACd,OAAK,IAAI,KAAK,SAAS,KAAK,GAAG,KAAK,GAAG,KAAK,MAAM;AACpD;AAEA,OAAO,UAAU,WAAW,SAAS,GAAG;AACtC,SAAO,IAAI,OAAO,EAAE,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,CAAC;AAC5D;AAEA,OAAO,UAAU,eAAe,SAAS,GAAG;AAC1C,SAAO,IAAI,OAAQ,KAAK,IAAI,EAAE,IAAM,KAAK,IAAI,EAAE,GAAK,KAAK,IAAI,EAAE,IAAM,KAAK,IAAI,EAAE,GAAK,KAAK,IAAI,EAAE,IAAM,KAAK,IAAI,EAAE,CAAE;AACrH;AAEA,OAAO,UAAU,SAAS,SAAS,GAAG;AACpC,SAAQ,KAAK,MAAM,EAAE,KAAK,KAAK,MAAM,EAAE,KAAK,KAAK,MAAM,EAAE;AAC3D;;;ACjDO,SAAS,QAAS,MAAM;AAC7B,MAAI,KAAK,KAAK,MAAM,CAAC;AACrB,MAAI,KAAK,KAAK,MAAM,CAAC;AACrB,MAAI,KAAK,KAAK,MAAM,CAAC;AACrB,OAAK,IAAI,GAAG,KAAK,GAAG,IAAE,GAAG,KAAK,GAAG,KAAK,GAAG,IAAE,GAAG,KAAK,GAAG,KAAK,GAAG,IAAE,GAAG;AACnE,OAAK,IAAI,GAAG,KAAK,GAAG,IAAE,GAAG,KAAK,GAAG,KAAK,GAAG,IAAE,GAAG,KAAK,GAAG,KAAK,GAAG,IAAE,GAAG;AACnE,OAAK,IAAI,GAAG,KAAK,GAAG,IAAE,GAAG,KAAK,GAAG,KAAK,GAAG,IAAE,GAAG,KAAK,GAAG,KAAK,GAAG,IAAE,GAAG;AACnE,OAAK,IAAI,MAAM,GAAG,KAAK,GAAG,IAAE,GAAG,IAAI,GAAG,IAAE,GAAG,KAAK,GAAG,KAAK,GAAG,IAAE,GAAG,IAAI,GAAG,IAAE,GAAG,KAAK,GAAG,KAAK,GAAG,IAAE,GAAG,IAAI,GAAG,IAAE,GAAG;AAC/G;AAEA,QAAQ,UAAU,gBAAgB,WAAW;AAC3C,SAAO;AAAA,IACL,MAAM,KAAK,IAAI,KAAK;AAAA,IACpB,MAAM,KAAK,IAAI,KAAK;AAAA,IACpB,MAAM,KAAK,IAAI,KAAK;AAAA,EACtB;AACF;AAGA,QAAQ,UAAU,4BAA4B,WAAW;AACvD,MAAI,SAAS,KAAK,cAAc;AAChC,MAAI,YAAY,IAAI,QAAQ,OAAO,CAAC,IAAE,GAAG,OAAO,CAAC,IAAE,CAAC;AACpD,SAAO;AACT;AAGO,SAAS,QAASC,IAAGC,IAAG;AAC7B,OAAK,IAAID;AACT,OAAK,IAAIC;AACX;;;AC7BO,SAAS,OAAQC,IAAGC,IAAG,GAAG;AAC/B,OAAK,IAAID;AACT,OAAK,IAAIC;AACT,OAAK,IAAI;AACX;AAEA,OAAO,UAAU,SAAS,WAAW;AACnC,OAAK,KAAK;AACV,OAAK,KAAK;AACV,OAAK,KAAK;AACZ;AAGA,OAAO,UAAU,YAAY,WAAW;AACtC,MAAI,SAAS,KAAK,KAAM,KAAK,IAAI,KAAK,IAAM,KAAK,IAAI,KAAK,IAAM,KAAK,IAAI,KAAK,CAAE;AAChF,MAAI,SAAS,GAAG;AACd,SAAK,KAAK;AACV,SAAK,KAAK;AACV,SAAK,KAAK;AAAA,EACZ;AACF;;;ACpBO,SAAS,MAAO,MAAM,MAAM,MAAM;AACvC,OAAK,OAAO;AACZ,OAAK,OAAO;AACZ,OAAK,OAAO;AACZ,OAAK,OAAO;AACZ,OAAK,OAAO;AACZ,OAAK,QAAQ;AACf;AAEA,MAAM,UAAU,YAAY,WAAW;AACrC,SAAO,KAAK,SAAS,QAAQ,CAAC,KAAK,MAAM,UAAU,KAAK,KAAK,MAAM;AACrE;AAGA,MAAM,UAAU,cAAc,SAAS,SAAS;AAC9C,MAAI,KAAK,UAAU,GAAG;AACpB,QAAI,QAAQ,SAAS,KAAK,SAAS,QAAQ,CAAC,GAAG;AAC7C;AAAA,IACF,OAAO;AACL,cAAQ,KAAK,IAAI;AACjB,WAAK,KAAK,YAAY,OAAO;AAAA,IAC/B;AAAA,EACF,OAAO;AACL,QAAI,KAAK,SAAS,MAAM;AACtB,WAAK,KAAK,KAAK,YAAY,OAAO;AAAA,IACpC;AAAA,EACF;AACF;AAGA,MAAM,UAAU,UAAU,SAAS,QAAQ,MAAM;AAC/C,SAAS,KAAK,KAAK,OAAO,MAAM,KAAK,KAAK,KAAK,OAAO,IAAI,KAAO,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,KAAK,OAAO,MAAM;AACpH;;;AChCe,SAAR,uBAAwC,SAAS;AACtD,OAAK,UAAU;AACf,OAAK,QAAQ,IAAI,MAAM,EAAE;AAC3B;AAEA,uBAAuB,UAAU,OAAO;AACxC,uBAAuB,YAAY,IAAI,MAAM;;;ACCtC,SAAS,KAAKC,IAAG,GAAGC,IAAG,QAAQ;AACpC,OAAK,YAAY,IAAI,aAAa,IAAI;AACtC,OAAK,QAAQ,CAACD,IAAG,GAAGC,EAAC;AACrB,OAAK,SAAS;AACd,MAAI,IAAID,GAAE,SAAS,CAAC,EAAE,aAAa,EAAE,SAASC,EAAC,CAAC;AAEhD,OAAK,SAAS,IAAI,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;AACzC,OAAK,OAAO,UAAU;AACtB,OAAK,YAAY;AACjB,OAAK,YAAY;AAEjB,MAAI,UAAU,QAAW;AACvB,SAAK,OAAO,MAAM;AAAA,EACpB;AACF;AAGA,KAAK,UAAU,eAAe,WAAY;AACxC,MAAI,KAAK,aAAa,MAAM;AAC1B,QAAI,UAAU,IAAI,QAAQ,IAAI;AAC9B,SAAK,YAAY,QAAQ,0BAA0B;AAAA,EACrD;AACA,SAAO,KAAK;AACd;AAEA,KAAK,UAAU,qBAAqB,WAAY;AAC9C,SAAO,KAAK,OAAO,IAAI;AACzB;AAEA,KAAK,UAAU,cAAc,WAAY;AACvC,OAAK,QAAQ,CAAC;AACd,OAAK,MAAM,CAAC,IAAI,IAAI,MAAM,KAAK,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,IAAI;AAC5D,OAAK,MAAM,CAAC,IAAI,IAAI,MAAM,KAAK,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,IAAI;AAC5D,OAAK,MAAM,CAAC,IAAI,IAAI,MAAM,KAAK,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,IAAI;AAC5D,OAAK,MAAM,CAAC,EAAE,OAAO,KAAK,MAAM,CAAC;AACjC,OAAK,MAAM,CAAC,EAAE,OAAO,KAAK,MAAM,CAAC;AACjC,OAAK,MAAM,CAAC,EAAE,OAAO,KAAK,MAAM,CAAC;AACjC,OAAK,MAAM,CAAC,EAAE,OAAO,KAAK,MAAM,CAAC;AACjC,OAAK,MAAM,CAAC,EAAE,OAAO,KAAK,MAAM,CAAC;AACjC,OAAK,MAAM,CAAC,EAAE,OAAO,KAAK,MAAM,CAAC;AACnC;AAGA,KAAK,UAAU,SAAS,SAAU,QAAQ;AACxC,MAAI,EAAE,IAAI,KAAK,QAAQ,MAAM,IAAI,IAAI,KAAK,QAAQ,KAAK,MAAM,CAAC,CAAC,IAAI;AACjE,QAAI,OAAO,KAAK,MAAM,CAAC;AACvB,SAAK,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC;AAC5B,SAAK,MAAM,CAAC,IAAI;AAChB,SAAK,OAAO,OAAO;AACnB,SAAK,YAAY;AAAA,EACnB;AACF;AAGA,KAAK,UAAU,UAAU,SAAU,IAAI,IAAI;AACzC,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,QAAI,KAAK,MAAM,CAAC,EAAE,QAAQ,IAAI,EAAE,GAAG;AACjC,aAAO,KAAK,MAAM,CAAC;AAAA,IACrB;AAAA,EACF;AACA,SAAO;AACT;AAGA,KAAK,UAAU,OAAO,SAAU,MAAM,IAAI,IAAI;AAC5C,MAAI,gBAAgB,MAAM;AACxB,QAAI,OAAO,KAAK,QAAQ,IAAI,EAAE;AAC9B,QAAI,SAAS,MAAM;AACjB,YAAM,IAAI,uBAAuB,4BAA4B;AAAA,IAC/D;AACA,QAAI,OAAO,KAAK,QAAQ,IAAI,EAAE;AAC9B,QAAI,SAAS,MAAM;AACjB,YAAM,IAAI,uBAAuB,4BAA4B;AAAA,IAC/D;AACA,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EACd,OAAO;AACL,QAAI,OAAO;AACX,QAAI,OAAO,KAAK,QAAQ,KAAK,MAAM,KAAK,IAAI;AAC5C,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EACd;AACF;AAGA,KAAK,UAAU,WAAW,SAAU,GAAG;AACrC,SAAO,IAAI,KAAK,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,KAAK,MAAM,CAAC,CAAC,IAAI;AACjE;AAEA,KAAK,UAAU,aAAa,WAAY;AACtC,WAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,QAAI,KAAK,MAAM,CAAC,EAAE,SAAS,QAAQ,KAAK,MAAM,CAAC,EAAE,KAAK,UAAU,GAAG;AACjE,aAAO,KAAK,MAAM,CAAC;AAAA,IACrB;AAAA,EACF;AACA,SAAO;AACT;AAEA,KAAK,UAAU,iBAAiB,WAAY;AAC1C,OAAK,UAAU,UAAU;AAC3B;;;ACvGO,SAAS,aAAa;AAC3B,OAAK,SAAS,CAAC;AACf,OAAK,SAAS,CAAC;AACf,OAAK,UAAU,CAAC;AAChB,OAAK,UAAU,CAAC;AAChB,OAAK,UAAU,CAAC;AAChB,OAAK,UAAU;AACjB;AAGA,WAAW,UAAU,OAAO,SAAU,eAAe,OAAO;AAC1D,OAAK,SAAS,CAAC;AACf,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,SAAK,OAAO,CAAC,IAAI,IAAI,OAAO,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,MAAM,MAAM,CAAC,GAAG,KAAK;AAAA,EACvF;AACA,OAAK,SAAS,KAAK,OAAO,OAAO,aAAa;AAChD;AAEA,WAAW,UAAU,YAAY,WAAY;AAC3C,MAAI,YAAY,KAAK,OAAO;AAC5B,WAAS,IAAI,YAAY,GAAG,IAAI,GAAG,KAAK;AACtC,QAAI,KAAK,KAAK,MAAM,KAAK,OAAO,IAAI,CAAC;AACrC,QAAI,OAAO,KAAK,OAAO,EAAE;AACzB,SAAK,QAAQ;AACb,QAAI,cAAc,KAAK,OAAO,CAAC;AAC/B,gBAAY,QAAQ;AACpB,SAAK,OAAO,OAAO,IAAI,GAAG,WAAW;AACrC,SAAK,OAAO,OAAO,GAAG,GAAG,IAAI;AAAA,EAC/B;AACF;AAEC,WAAW,UAAU,OAAO,WAAY;AACvC,MAAI,KAAK,OAAO,UAAU,GAAG;AAC3B,UAAM,IAAI,uBAAuB,oBAAoB;AAAA,EACvD;AACA,WAAS,IAAI,GAAG,IAAI,KAAK,OAAO,QAAQ,KAAK;AAC3C,SAAK,OAAO,CAAC,EAAE,QAAQ;AAAA,EACzB;AAEA,MAAI,IAAI,IAAI,IAAI;AAChB,MAAI,IAAI,IAAI,IAAI;AAChB,OAAK,KAAK,OAAO,CAAC;AAClB,OAAK,KAAK,OAAO,CAAC;AAClB,OAAK,KAAK;AAGV,WAAS,IAAI,GAAG,IAAI,KAAK,OAAO,QAAQ,KAAK;AAC3C,QAAI,EAAE,gBAAgB,IAAI,KAAK,OAAO,CAAC,CAAC,KAAK,gBAAgB,IAAI,KAAK,OAAO,CAAC,CAAC,IAAI;AACjF,WAAK,KAAK,OAAO,CAAC;AAClB,SAAG,QAAQ;AACX,WAAK,OAAO,CAAC,EAAE,QAAQ;AACvB,WAAK,OAAO,OAAO,GAAG,GAAG,KAAK,OAAO,CAAC,CAAC;AACvC,WAAK,OAAO,OAAO,GAAG,GAAG,EAAE;AAC3B;AAAA,IACF;AAAA,EACF;AACA,MAAI,OAAO,MAAM;AACf,UAAM,IAAI,uBAAuB,2CAA2C;AAAA,EAC9E;AAGA,OAAK,IAAI,KAAK,IAAI,IAAI,EAAE;AAExB,WAAS,IAAI,GAAG,IAAI,KAAK,OAAO,QAAQ,KAAK;AAC3C,QAAI,CAAC,aAAa,IAAI,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC,IAAI,IAAI,GAAG,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG;AAC/E,WAAK,KAAK,OAAO,CAAC;AAClB,SAAG,QAAQ;AACX,WAAK,OAAO,CAAC,EAAE,QAAQ;AACvB,WAAK,OAAO,OAAO,GAAG,GAAG,KAAK,OAAO,CAAC,CAAC;AACvC,WAAK,OAAO,OAAO,GAAG,GAAG,EAAE;AAC3B;AAAA,IACF;AAAA,EACF;AACA,MAAI,OAAO,MAAM;AACf,UAAM,IAAI,uBAAuB,2CAA2C;AAAA,EAC9E;AAEA,KAAG,OAAO,EAAE;AACZ,OAAK,IAAI,KAAK,IAAI,IAAI,IAAI,EAAE;AAC5B,OAAK,IAAI,KAAK,IAAI,IAAI,IAAI,EAAE;AAC5B,OAAK,IAAI,KAAK,IAAI,IAAI,IAAI,EAAE;AAC5B,OAAK,SAAS,EAAE;AAChB,OAAK,SAAS,EAAE;AAChB,OAAK,SAAS,EAAE;AAChB,OAAK,SAAS,EAAE;AAEhB,KAAG,KAAK,IAAI,IAAI,EAAE;AAClB,KAAG,KAAK,IAAI,IAAI,EAAE;AAClB,KAAG,KAAK,IAAI,IAAI,EAAE;AAClB,KAAG,KAAK,IAAI,IAAI,EAAE;AAClB,KAAG,KAAK,IAAI,IAAI,EAAE;AAClB,KAAG,KAAK,IAAI,IAAI,EAAE;AAClB,OAAK,UAAU;AAEf,MAAI;AACJ,WAAS,IAAI,KAAK,SAAS,IAAI,KAAK,OAAO,QAAQ,KAAK;AACtD,QAAI,KAAK,OAAO,CAAC;AACjB,QAAI,GAAG,SAAS,CAAC,GAAG;AAClB,WAAK,YAAY,IAAI,CAAC;AAAA,IACxB;AACA,QAAI,GAAG,SAAS,CAAC,GAAG;AAClB,WAAK,YAAY,IAAI,CAAC;AAAA,IACxB;AACA,QAAI,GAAG,SAAS,CAAC,GAAG;AAClB,WAAK,YAAY,IAAI,CAAC;AAAA,IACxB;AACA,QAAI,GAAG,SAAS,CAAC,GAAG;AAClB,WAAK,YAAY,IAAI,CAAC;AAAA,IACxB;AAAA,EACF;AACF;AAEG,WAAW,UAAU,eAAe,SAAU,MAAM,MAAM,IAAI;AAC7D,MAAI,KAAK,KAAK,UAAU,YAAY;AACpC,MAAI,KAAK,KAAK,UAAU,YAAY;AACpC,MAAI,MAAM,CAAC;AACX,MAAI,IAAI;AACR,MAAI,GAAG;AACP,MAAI,IAAI;AAER,SAAO,IAAI,GAAG,UAAU,IAAI,GAAG,QAAQ;AACrC,QAAI,IAAI,GAAG,UAAU,IAAI,GAAG,QAAQ;AAClC,WAAK,GAAG,CAAC;AACT,WAAK,GAAG,CAAC;AAET,UAAI,GAAG,UAAU,GAAG,OAAO;AACzB,YAAI,KAAK,EAAE;AACX;AACA;AAAA,MACF,WAAW,GAAG,QAAQ,GAAG,OAAO;AAC9B,YAAI,KAAK,EAAE;AACX;AAAA,MACF,OAAO;AACL,YAAI,KAAK,EAAE;AACX;AAAA,MACF;AAAA,IACF,WAAW,IAAI,GAAG,QAAQ;AACxB,UAAI,KAAK,GAAG,GAAG,CAAC;AAAA,IAClB,OAAO;AACL,UAAI,KAAK,GAAG,GAAG,CAAC;AAAA,IAClB;AAAA,EACF;AAEA,WAAS,IAAI,IAAI,SAAS,GAAG,KAAK,GAAG,KAAK;AACxC,SAAK,IAAI,CAAC;AACV,QAAI,GAAG,SAAS,EAAE;AAAG,WAAK,YAAY,IAAI,EAAE;AAAA,EAC9C;AACF;AAGF,WAAW,UAAU,cAAc,SAAU,MAAM,MAAM;AACvD,MAAI,IAAI,IAAI,iBAAiB,MAAM,IAAI;AACvC,OAAK,UAAU,IAAI,CAAC;AACpB,OAAK,UAAU,IAAI,CAAC;AACtB;AAGA,WAAW,UAAU,iBAAiB,SAAU,GAAG;AACjD,IAAE,eAAe;AACjB,MAAIC,SAAQ,EAAE;AACd,IAAE,QAAQ;AACV,MAAIA,WAAU,KAAK,OAAO,SAAS,GAAG;AACpC,SAAK,OAAO,OAAO,KAAK,OAAO,SAAS,GAAG,CAAC;AAC5C;AAAA,EACF;AACA,MAAIA,UAAS,KAAK,OAAO,UAAUA,SAAQ;AAAG;AAC9C,MAAI,OAAO,KAAK,OAAO,OAAO,KAAK,OAAO,SAAS,GAAG,CAAC;AACvD,OAAK,CAAC,EAAE,QAAQA;AAChB,OAAK,OAAO,OAAOA,QAAO,GAAG,KAAK,CAAC,CAAC;AACtC;AAGA,WAAW,UAAU,WAAW,SAAU,MAAM;AAC9C,OAAK,QAAQ,KAAK,OAAO;AACzB,OAAK,OAAO,KAAK,IAAI;AACvB;AAEA,WAAW,UAAU,UAAU,WAAY;AACzC,OAAK,KAAK;AACV,SAAO,KAAK,UAAU,KAAK,OAAO,QAAQ;AACxC,QAAI,OAAO,KAAK,OAAO,KAAK,OAAO;AACnC,QAAI,KAAK,UAAU,QAAQ,GAAG;AAE5B,WAAK;AACL;AAAA,IACF;AACA,SAAK,UAAU,CAAC;AAChB,SAAK,UAAU,CAAC;AAChB,SAAK,UAAU,CAAC;AAEhB,SAAK,UAAU,KAAK,KAAK,OAAO;AAEhC,QAAI;AACJ,aAAS,KAAK,GAAG,KAAK,KAAK,QAAQ,QAAQ,MAAM;AAC/C,UAAI,KAAK,QAAQ,EAAE,EAAE,WAAW;AAChC,UAAI,MAAM,MAAM;AACd,UAAE,YAAY,KAAK,OAAO;AAC1B;AAAA,MACF;AAAA,IACF;AACA,QAAI,OAAO,MACT,QAAQ;AAEV,aAAS,MAAM,GAAG,MAAM,KAAK,QAAQ,QAAQ,OAAO;AAClD,UAAI,KAAK,KAAK,QAAQ,GAAG;AACzB,UAAI,KAAK,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,KAAK,KAAK,IAAI;AAC3D,SAAG,YAAY,IAAI,aAAa,IAAI;AAEpC,WAAK,SAAS,EAAE;AAChB,WAAK,QAAQ,KAAK,EAAE;AAEpB,WAAK,aAAa,GAAG,OAAO,GAAG,KAAK,OAAO,EAAE;AAE7C,SAAG,KAAK,EAAE;AACV,UAAI,SAAS;AAAM,WAAG,KAAK,MAAM,MAAM,GAAG,IAAI;AAC9C,aAAO;AACP,UAAI,UAAU;AAAM,gBAAQ;AAAA,IAC9B;AAEA,QAAI,UAAU,QAAQ,SAAS,MAAM;AACnC,WAAK,KAAK,OAAO,MAAM,KAAK,QAAQ,CAAC,EAAE,IAAI;AAAA,IAC7C;AACA,QAAI,KAAK,QAAQ,UAAU,GAAG;AAE5B,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC5C,aAAK,eAAe,KAAK,QAAQ,CAAC,CAAC;AAAA,MACrC;AACA,WAAK;AACL,WAAK,UAAU,CAAC;AAAA,IAClB;AAAA,EACF;AACA,SAAO,KAAK;AACd;AAEA,WAAW,UAAU,QAAQ,WAAY;AACvC,OAAK,SAAS,CAAC;AACf,OAAK,SAAS,CAAC;AACf,OAAK,UAAU,CAAC;AAChB,OAAK,UAAU,CAAC;AAChB,OAAK,UAAU,CAAC;AAChB,OAAK,UAAU;AACjB;;;ACxPO,SAAS,YAAY,MAAM,SAAS;AAQzC,MAAI,OACF,SAAS,cAAc,OAAO,GAC9B,IAAI,IACJ,IAAI,KAAK,SAAS,cAAc,IAAI,GACpC,GACAC,IACAC,KAAI,KAAK,IAAI,CAAC,GACd,GACAC,IACA,GACAC;AAEF,SAAO,EAAE,IAAI,GAAG;AACd,YAAQ,QAAQ,MAAM;AACtB,YAAQ,SAAS;AACjB,QAAI,KAAK,CAAC;AACV,IAAAD,KAAI,OAAOF,KAAI,MAAM,SAAS,UAAU,CAAC;AACzC,QAAI;AACJ,WAAO,EAAE,IAAIA,IAAG;AACd,UAAI,MAAM,CAAC;AACX,UAAI,cAAc,GAAGC,IAAG,CAAC,GAAG;AAC1B,YAAI,CAAC,cAAcC,IAAGD,IAAG,CAAC,GAAG;AAC3B,UAAAE,gBAAe,iBAAiBD,IAAG,GAAGD,IAAG,CAAC;AAC1C,cAAI,SAASE,cAAa,CAAC,CAAC,GAAG;AAC7B,oBAAQ,KAAKA,aAAY;AAAA,UAC3B;AAAA,QACF;AACA,gBAAQ,KAAK,CAAC;AAAA,MAChB,WAAW,cAAcD,IAAGD,IAAG,CAAC,GAAG;AACjC,QAAAE,gBAAe,iBAAiBD,IAAG,GAAGD,IAAG,CAAC;AAC1C,YAAI,SAASE,cAAa,CAAC,CAAC,GAAG;AAC7B,kBAAQ,KAAKA,aAAY;AAAA,QAC3B;AAAA,MACF;AACA,MAAAD,KAAI;AAAA,IACN;AACA,QAAI;AAAQ,cAAQ,KAAK,QAAQ,CAAC,CAAC;AACnC,IAAAD,KAAI;AAAA,EACN;AAEA,SAAO;AACT;AAEA,SAAS,cAAc,GAAGA,IAAG,GAAG;AAC9B,UAAQ,EAAE,CAAC,IAAIA,GAAE,CAAC,MAAM,EAAE,CAAC,IAAIA,GAAE,CAAC,MAAM,EAAE,CAAC,IAAIA,GAAE,CAAC,MAAM,EAAE,CAAC,IAAIA,GAAE,CAAC;AACpE;AAIA,SAAS,iBAAiBC,IAAG,GAAGD,IAAG,GAAG;AACpC,MAAI,KAAKC,GAAE,CAAC,GACV,KAAKD,GAAE,CAAC,GACR,MAAM,EAAE,CAAC,IAAI,IACb,MAAM,EAAE,CAAC,IAAI,IACb,KAAKC,GAAE,CAAC,GACR,KAAKD,GAAE,CAAC,GACR,MAAM,EAAE,CAAC,IAAI,IACb,MAAM,EAAE,CAAC,IAAI,IACb,MAAM,OAAO,KAAK,MAAM,OAAO,KAAK,QAAQ,MAAM,MAAM,MAAM;AAChE,SAAO,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AACtC;AAGA,SAAS,cAAc,aAAa;AAClC,MAAIA,KAAI,YAAY,CAAC,GACnB,IAAI,YAAY,YAAY,SAAS,CAAC;AACxC,SAAO,EAAEA,GAAE,CAAC,IAAI,EAAE,CAAC,KAAKA,GAAE,CAAC,IAAI,EAAE,CAAC;AACpC;;;ACnEA,SAAS,qBAAqB,MAAM;AAClC,MAAI,QAAQ,CAAC;AACb,MAAI,WAAW;AACf,MAAI,QAAQ,KAAK;AACjB,MAAI,OAAO,MAAM;AACjB,MAAI,aAAa,CAAC;AAClB,KAAG;AACD,eAAW,SAAS,KAAK;AACzB,QAAI,aAAa,SAAS,KAAK;AAC/B,QAAI,CAAC,WAAW,SAAS;AACvB,iBAAW,KAAK,UAAU;AAAA,IAC5B;AACA,QAAI,QAAQ,SAAS;AACrB,QAAI,MAAM,mBAAmB,GAAG;AAC9B,YAAM,KAAK,KAAK;AAAA,IAClB;AAAA,EACF,SAAS,aAAa;AACtB,OAAK,aAAa;AAClB,SAAO;AACT;AAKO,SAAS,8BAA+B,OAAO,eAAe,iBAAiB;AACpF,MAAI,aAAa,IAAI,WAAW;AAChC,aAAW,MAAM;AACjB,aAAW,KAAK,eAAe,KAAK;AAEpC,MAAI,SAAS,WAAW,QAAQ,KAAK;AACrC,MAAI,WAAW,CAAC;AAChB,MAAI,kBAAkB,CAAC;AACvB,MAAI,aAAa,OAAO;AAExB,WAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACnC,QAAI,QAAQ,OAAO,CAAC;AACpB,QAAI,MAAM,mBAAmB,GAAG;AAC9B,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAE1B,YAAI,OAAO,MAAM,MAAM,CAAC;AACxB,YAAI,aAAa,KAAK;AACtB,YAAI,OAAO,WAAW;AAEtB,YAAI,CAAC,gBAAgB,WAAW,KAAK,GAAG;AACtC,0BAAgB,WAAW,KAAK,IAAI;AACpC,cAAI,KAAK,SAAS;AAEhB;AAAA,UACF;AAEA,cAAI,QAAQ,qBAAqB,IAAI;AACrC,cAAI,YAAY,CAAC;AACjB,cAAI,QAAQ;AACZ,cAAI,QAAQ;AACZ,cAAI,KAAK;AACT,cAAI,KAAK;AACT,mBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,gBAAI,QAAQ,MAAM,CAAC,EAAE,aAAa;AAClC,gBAAI,KAAK,MAAM;AACf,gBAAI,KAAK,MAAM;AACf,gBAAI,UAAU,MAAM;AAClB,mBAAK,QAAQ;AACb,mBAAK,QAAQ;AACb,kBAAI,KAAK,GAAG;AACV,qBAAK,CAAC;AAAA,cACR;AACA,kBAAI,KAAK,GAAG;AACV,qBAAK,CAAC;AAAA,cACR;AAAA,YACF;AACA,gBAAI,KAAK,WAAW,KAAK,SAAS;AAChC,wBAAU,KAAK,CAAC,IAAI,EAAE,CAAC;AACvB,sBAAQ;AACR,sBAAQ;AAAA,YACV;AAAA,UACF;AAEA,eAAK,oBAAoB,UAAU,QAAQ;AAC3C,cAAI,CAAC,KAAK,WAAWG,gBAAc,KAAK,iBAAiB,IAAI,GAAG;AAC9D,gBAAI,cAAc,YAAY,iBAAiB,KAAK,iBAAiB;AACrE,iBAAK,UAAU;AACf,wBAAY,OAAO;AACnB,gBAAI,YAAY,SAAS,GAAG;AAC1B,uBAAS,KAAK,WAAW;AAAA,YAC3B;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;;;AC7FO,SAAS,kBAAkB;AAEhC,MAAIC,KAAI,SAAU,GAAG;AACnB,WAAO,EAAE;AAAA,EACX;AACA,MAAIC,KAAI,SAAU,GAAG;AACnB,WAAO,EAAE;AAAA,EACX;AACA,MAAI,SAAS,SAAU,GAAG;AACxB,WAAO,EAAE;AAAA,EACX;AACA,MAAI,OAAO;AAAA,IACT,CAAC,GAAG,CAAC;AAAA,IACL,CAAC,GAAG,CAAC;AAAA,IACL,CAAC,GAAG,CAAC;AAAA,IACL,CAAC,GAAG,CAAC;AAAA,EACP;AACA,MAAI,SAAS;AAAA,IACX,CAAC,GAAG,CAAC;AAAA,IACL,CAAC,GAAG,CAAC;AAAA,EACP;AACA,MAAI,OAAO,CAAC,GAAG,CAAC;AAMhB,WAAS,iBAAiB,MAAM;AAC9B,QAAI;AAGJ,oBAAgB,KAAK,IAAI,SAAU,GAAG;AACpC,aAAO,IAAI,OAAOD,GAAE,CAAC,GAAGC,GAAE,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,GAAG,KAAK;AAAA,IACzD,CAAC;AAGD,WAAO,8BAA8B,eAAe,cAAc,GAAG,IAAI;AAAA,EAC3E;AAEA,mBAAiB,IAAI,SAAU,GAAG;AAChC,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAOD;AAAA,IACT;AAEA,IAAAA,KAAI;AACJ,WAAO;AAAA,EACT;AAEA,mBAAiB,IAAI,SAAU,GAAG;AAChC,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAOC;AAAA,IACT;AAEA,IAAAA,KAAI;AACJ,WAAO;AAAA,EACT;AAEA,mBAAiB,SAAS,SAAU,GAAG;AACrC,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAEA,aAAS;AACT,WAAO;AAAA,EACT;AAEA,mBAAiB,OAAO,SAAU,GAAG;AACnC,QAAIC,YAAW,SAAS;AAExB,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAEA,cAAUC;AAAA,MACR,EAAE,IAAI,SAAUC,IAAG;AACjB,eAAOA,GAAE,CAAC;AAAA,MACZ,CAAC;AAAA,IACH;AACA,cAAUD;AAAA,MACR,EAAE,IAAI,SAAUC,IAAG;AACjB,eAAOA,GAAE,CAAC;AAAA,MACZ,CAAC;AAAA,IACH;AACA,IAAAF,aAAY,iBAAiB,CAAC;AAC9B,QAAIA,eAAc,QAAW;AAC3B,aAAOG,cAAc,CAAC;AAAA,IACxB,WAAWH,eAAc,GAAG;AAC1B,aAAO,EAAE,QAAQ;AAAA,IACnB,OAAO;AACL,aAAO;AAAA,IACT;AACA,aAAS;AAAA,MACP,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;AAAA,MACvB,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;AAAA,IACzB;AACA,WAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,QAAQ,CAAC,IAAI,QAAQ,CAAC,CAAC;AACxD,WAAO;AAAA,EACT;AAEA,mBAAiB,SAAS,SAAU,GAAG;AACrC,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAEA,WAAO,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1D,aAAS;AACT,WAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AAC5C,WAAO;AAAA,EACT;AAEA,mBAAiB,OAAO,SAAU,GAAG;AACnC,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,MACL,CAAC,GAAG,CAAC;AAAA,MACL,CAAC,GAAG,EAAE,CAAC,CAAC;AAAA,MACR,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAAA,MACX,CAAC,EAAE,CAAC,GAAG,CAAC;AAAA,IACV;AACA,aAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;AACnB,WAAO;AACP,WAAO;AAAA,EACT;AAMA,WAAS,gBAAgB;AACvB,QAAI,MACF,MACA,MACA,MACA,OACA,QACA,IACA,IACA,IACA,IACA,eAAe,CAAC,GAChBI,iBAAgB,CAAC;AAEnB,WAAO,OAAO,CAAC,EAAE,CAAC;AAClB,WAAO,OAAO,CAAC,EAAE,CAAC;AAClB,WAAO,OAAO,CAAC,EAAE,CAAC;AAClB,WAAO,OAAO,CAAC,EAAE,CAAC;AAClB,YAAQ,OAAO;AACf,aAAS,OAAO;AAChB,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,OAAO;AACZ,SAAK,OAAO;AAKZ,iBAAa,CAAC,IAAI,CAAC,IAAI,EAAE;AACzB,iBAAa,CAAC,IAAI,CAAC,IAAI,EAAE;AACzB,iBAAa,CAAC,IAAI,CAAC,IAAI,EAAE;AACzB,iBAAa,CAAC,IAAI,CAAC,IAAI,EAAE;AAEzB,aAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,MAAAA,eAAc;AAAA,QACZ,IAAI;AAAA,UACF,aAAa,CAAC,EAAE,CAAC;AAAA,UACjB,aAAa,CAAC,EAAE,CAAC;AAAA,UACjB;AAAA,UACA;AAAA,UACA,IAAI,OAAO,aAAa,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,EAAE,CAAC,GAAG,MAAM,SAAS,MAAM,IAAI;AAAA,UAC5E;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAOA;AAAA,EACT;AAEA,SAAO;AACT;;;ACzLO,SAAS,uBAAwB;AAEtC,OAAK,sBAAsB;AAC3B,OAAK,qBAAqB;AAG1B,OAAK,gBAAgB;AACrB,OAAK,aAAa;AAClB,OAAK,gBAAgB,CAAC;AACtB,OAAK,sBAAsB,4BAA4B,KAAK,mBAAmB;AAC/E,OAAK,yBAAyB,8BAA8B,KAAK,mBAAmB;AAEtF;AAEA,IAAI,iBAAiB;AAErB,SAAS,UAAU,IAAI,IAAI;AACzB,SAAQ,MAAM,KAAK,IAAI;AACzB;AAEA,SAAS,4BAA4B,QAAQ;AAC3C,MAAI,gBAAgB;AACpB,MAAI,kBAAkB;AACtB,MAAI,YAAY;AAEhB,MAAI,gBAAgB;AACpB,MAAI,sBAAsB,CAAC;AAE3B,WAAS,IAAE,GAAG,IAAE,QAAQ,KAAK;AAC3B,wBAAoB,KAAK,aAAa;AACtC,qBAAiB;AACjB,QAAI,gBAAc,WAAW;AAAE,sBAAgB;AAAA,IAAW;AAAA,EAC5D;AACA,SAAO;AACT;AAEA,SAAS,8BAA+B,qBAAqB;AAC3D,MAAI,yBAAyB;AAC7B,WAAS,IAAE,GAAG,IAAE,oBAAoB,QAAQ,KAAK;AAC/C,8BAA0B,oBAAoB,CAAC;AAAA,EACjD;AACA,SAAO;AACT;AAMA,qBAAqB,UAAU,QAAQ,WAAY;AACjD,OAAK,gBAAgB;AACrB,OAAK,aAAa;AAClB,OAAK,gBAAgB,CAAC;AACtB,OAAK,sBAAsB;AAC3B,OAAK,sBAAsB,4BAA4B,KAAK,mBAAmB;AAC/E,OAAK,yBAAyB,8BAA8B,KAAK,mBAAmB;AACpF,OAAK,qBAAqB;AAE1B,SAAO;AACT;AAEA,qBAAqB,UAAU,QAAQ,WAAY;AACjD,OAAK,gBAAgB;AACrB,OAAK,aAAa;AAClB,OAAK,gBAAgB,CAAC;AAEtB,SAAO;AACT;AAEA,qBAAqB,UAAU,SAAS,SAAU,GAAG;AACnD,MAAI,CAAC,UAAU,QAAQ;AAAE,WAAO,KAAK;AAAA,EAAqB;AAE1D,MAAI,SAAS,CAAC,IAAE,GAAG;AACjB,SAAK,sBAAsB,KAAK,MAAM,SAAS,CAAC,CAAC;AACjD,SAAK,sBAAsB,4BAA4B,KAAK,mBAAmB;AAC/E,SAAK,yBAAyB,8BAA8B,KAAK,mBAAmB;AAAA,EACtF,OAAO;AACL,YAAQ,KAAK,oFAAkF,CAAC;AAAA,EAClG;AACA,SAAO;AACT;AAEA,qBAAqB,UAAU,YAAY,SAAU,GAAG;AACtD,MAAI,CAAC,UAAU,QAAQ;AAAE,WAAO,KAAK;AAAA,EAAoB;AAEzD,MAAI,WAAW,CAAC,IAAE,GAAG;AACnB,SAAK,qBAAqB,WAAW,CAAC;AAAA,EACxC,OAAO;AACL,YAAQ,KAAK,sFAAoF,CAAC;AAAA,EACpG;AACA,SAAO;AACT;AAEA,qBAAqB,UAAU,MAAM,SAAU,WAAW;AACxD,MAAI,uBAAuB;AAE3B,0BAAwB,KAAK;AAC7B,OAAK,gBAAgB;AACrB,MAAI,CAAC,MAAM,qBAAqB,GAAG;AACjC,yBAAqB,KAAK;AAC1B,SAAK,aAAa,UAAU,KAAK,eAAe,qBAAqB;AAAA,EACvE;AACA,MAAI,CAAC,MAAM,kBAAkB,GAAG;AAC9B,SAAK,cAAc,QAAQ,KAAK,cAAY,kBAAkB;AAAA,EAChE;AAEA,MAAI,KAAK,cAAc,SAAO,KAAK,qBAAqB;AACtD,SAAK,cAAc,IAAI;AAAA,EACzB;AACA,SAAO;AACT;AAEA,qBAAqB,UAAU,QAAQ,WAAY;AACjD,MAAI,sBAAsB;AAC1B,MAAI;AAEJ,MAAI,KAAK,cAAc,SAAS,KAAK,qBAAqB;AAAE,WAAO;AAAA,EAAG;AACtE,MAAI,KAAK,gBAAgB,KAAK,qBAAmB,IAAI;AAAE,WAAO;AAAA,EAAG;AAEjE,WAAQ,IAAE,GAAG,IAAE,KAAK,qBAAqB,KAAK;AAC5C,QAAI,KAAK,cAAc,CAAC,GAAG;AACzB,6BAAuB,KAAK,oBAAoB,CAAC;AAAA,IACnD;AAAA,EACF;AAEA,UAAQ,sBAAoB,KAAK;AAQjC,SAAO;AACT;;;AClIe,SAAR,iBAAoB;AAGzB,MAAI,iBACF,QACA,MAAM,MACN,MAAM,MACN,IAAI;AAON,WAAS,QAAQ,GAAG,GAAG,KAAKC,uBAAsB;AAChD,QAAI,wBAAwB;AAC5B,QAAIC,IAAGC;AAEP,QAAI,oBAAoBF,sBAAqB,KAAK,GAAG;AACnD,wBAAkBA,sBAAqB,KAAK;AAC5C,eAASA,sBAAqB,OAAO;AACrC,8BAAwB;AAAA,IAC1B;AAEA,QAAI,uBAAuB;AACzB,sBAAgB;AAAA,IAClB;AAEA,IAAAC,KAAI,OAAO,KAAKD,sBAAqB,KAAK,EAAE;AAC5C,IAAAE,KAAI,OAAO,KAAKF,sBAAqB,KAAK,EAAE;AAC5C,WAAO,CAAC,iBAAkB,iBAAiB,CAACC,IAAGC,EAAC,CAAC,GAAG;AAClD,MAAAD,KAAI,OAAO,KAAKD,sBAAqB,KAAK,EAAE;AAC5C,MAAAE,KAAI,OAAO,KAAKF,sBAAqB,KAAK,EAAE;AAAA,IAC9C;AACA,WAAO,CAACC,IAAGC,EAAC;AAAA,EACd;AAAC;AAMD,WAAS,kBAAkB;AACzB,WAAO,OAAO,CAAC,EAAE,CAAC;AAClB,WAAO,OAAO,CAAC,EAAE,CAAC;AAClB,WAAO,OAAO,CAAC,EAAE,CAAC;AAClB,WAAO,OAAO,CAAC,EAAE,CAAC;AAClB,SAAK,OAAO;AACZ,SAAK,OAAO;AAAA,EACd;AAAC;AAED,SAAO;AACT;;;ACnDe,SAAR,4BAAoB;AAEzB,MAAI,iBACF,WACA,WACA,WACA;AAMF,WAAS,iBAAiB,GAAG,GAAG,KAAKC,uBAAsB;AACzD,QAAI,wBAAwB;AAC5B,QAAI,oBAAoBA,sBAAqB,KAAK,GAAG;AACnD,wBAAkBA,sBAAqB,KAAK;AAC5C,+BAAyB;AAAA,IAC3B;AACA,QAAI,cAAc,KAAK;AACrB,kBAAY;AACZ,+BAAyB;AAAA,IAC3B;AAEA,QAAI,uBAAuB;AACzB,sBAAgB;AAAA,IAClB;AAEA,WAAO;AAAA,EACT;AAAC;AAMD,WAAS,kBAAkB;AACzB,gBAAY,UAAU;AACtB,gBAAY,aAAc,eAAe;AACzC,sBAAkB,YAAY,YAAY;AAAA,EAC5C;AAEA,SAAO;AACT;;;AC1Ce,SAAR,kBAAmC,SAAS;AACjD,OAAK,UAAU;AACf,OAAK,QAAQ,IAAI,MAAM,EAAE;AAC3B;AAEA,kBAAkB,UAAU,OAAO;AACnC,kBAAkB,YAAY,IAAI,MAAM;;;ACKjC,SAAS,qBAAqB,MAAM;AAEzC,MAAI,4BAA4B;AAChC,MAAI,8BAA8B;AAClC,MAAI,2BAA2B;AAC/B,MAAI,eAAe,KAAK;AACxB,MAAI,2BAA2B,eAAsB;AACrD,MAAI,yBAAyB,0BAA6B;AAC1D,MAAI,0BAA0B,eAAsB;AACpD,MAAIC,WAAU;AAId,MAAI,SAAS,SAAU,GAAG;AACxB,WAAO,EAAE;AAAA,EACX;AACA,MAAI,mBAAmB;AACvB,MAAI,oBAAoB;AACxB,MAAI,iBAAiB;AACrB,MAAI,OAAO;AACX,MAAI,kBAAkB;AACtB,MAAI,gBAAgB;AAGpB,MAAIC,mBAAkB,gBAAkB,GACtC,uBAAuB,IAAI,qBAAqB,GAChD,mBAAmB,MACnB,WACA,WACA,mBACA,gBACA,UACA,WACA,WACA;AAGF,MAAI,YACF,UAAUC,OAAQ,IAAI,GACtB,QAAQC,kBAAW,QAAQ,KAAK;AAIlC,QAAM,8BAA8B;AACpC,QAAM,0CAA0C;AAChD,MAAI;AAIJ,WAAS,IAAI,GAAG;AACd,WAAO,KAAK,IAAI,GAAG,CAAC;AAAA,EACtB;AAEA,WAAS,gBAAgB,IAAI,IAAI;AAC/B,WAAO,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC;AAAA,EAC3C;AAOA,eAAa;AAAA,IACX;AAAA,IAEA,SAAS,WAAY;AACnB,cAAQ,QAAQ,IAAI;AACpB,aAAO;AAAA,IACT;AAAA,IAEA,MAAM,WAAY;AAChB,cAAQ,KAAK;AACb,aAAO;AAAA,IACT;AAAA,IAEA,QAAQ,SAAU,GAAG;AACnB,UAAI,CAAC,UAAU,QAAQ;AACrB,eAAO;AAAA,MACT;AAEA,eAAS;AACT,yBAAmB;AACnB,aAAO;AAAA,IACT;AAAA,IAEA,kBAAkB,SAAU,GAAG;AAC7B,UAAI,CAAC,UAAU,QAAQ;AACrB,eAAO;AAAA,MACT;AAEA,yBAAmB;AACnB,yBAAmB;AACnB,aAAO;AAAA,IACT;AAAA,IAEA,mBAAmB,SAAU,GAAG;AAC9B,UAAI,CAAC,UAAU,QAAQ;AACrB,eAAO;AAAA,MACT;AAEA,0BAAoB;AACpB,aAAO;AAAA,IACT;AAAA,IAEA,gBAAgB,SAAU,GAAG;AAC3B,UAAI,CAAC,UAAU,QAAQ;AACrB,eAAO;AAAA,MACT;AAEA,uBAAiB;AACjB,yBAAmB;AACnB,aAAO;AAAA,IACT;AAAA,IAEA,MAAM,SAAU,GAAG;AACjB,UAAI,CAAC,UAAU,QAAQ;AACrB,eAAOF,iBAAgB,KAAK;AAAA,MAC9B;AAEA,MAAAA,iBAAgB,KAAK,CAAC;AACtB,yBAAmB;AACnB,aAAO;AAAA,IACT;AAAA,IAEA,QAAQ,SAAU,GAAG;AACnB,UAAI,CAAC,UAAU,QAAQ;AACrB,eAAOA,iBAAgB,OAAO;AAAA,MAChC;AAEA,MAAAA,iBAAgB,OAAO,CAAC;AACxB,yBAAmB;AACnB,aAAO;AAAA,IACT;AAAA,IAEA,MAAM,SAAU,GAAG;AACjB,UAAI,CAAC,UAAU,QAAQ;AACrB,eAAOA,iBAAgB,KAAK;AAAA,MAC9B;AAEA,MAAAA,iBAAgB,KAAK,CAAC;AACtB,yBAAmB;AACnB,aAAO;AAAA,IACT;AAAA,IAEA,MAAM,SAAU,GAAG;AACjB,UAAI,CAAC,UAAU,QAAQ;AACrB,eAAO;AAAA,MACT;AAEA,aAAO;AACP,yBAAmB;AACnB,aAAO;AAAA,IACT;AAAA,IAEA,iBAAiB,SAAU,GAAG;AAC5B,UAAI,CAAC,UAAU,QAAQ;AACrB,eAAO;AAAA,MACT;AAEA,wBAAkB;AAClB,yBAAmB;AACnB,aAAO;AAAA,IACT;AAAA,IAEA,eAAe,SAAU,GAAG;AAC1B,UAAI,CAAC,UAAU,QAAQ;AACrB,eAAO;AAAA,MACT;AAEA,sBAAgB;AAChB,yBAAmB;AACnB,aAAO;AAAA,IACT;AAAA,IAEA,OAAO,WAAY;AACjB,UAAI,kBAAkB;AACpB,6BAAqB;AAAA,MACvB;AACA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA,kBAAkB,YAAY;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AAAA,IAEA,IAAI,SAAU,MAAM,GAAG;AACrB,UAAI,UAAU,WAAW,GAAG;AAC1B,eAAO,MAAM,GAAG,IAAI;AAAA,MACtB;AAEA,YAAM,GAAG,MAAM,CAAC;AAChB,aAAO;AAAA,IACT;AAAA,EACF;AAOA,WAAS,OAAO;AACd,SAAK;AACL,UAAM,KAAK,QAAQ,UAAU;AAC7B,QAAI,OAAO;AACT,cAAQ,KAAK;AACb,YAAM,KAAK,OAAO,UAAU;AAAA,IAC9B;AAAA,EACF;AAIA,WAAS,OAAO;AACd,QAAI,CAAC,OAAO;AACV,UAAI,kBAAkB;AACpB,6BAAqB;AAAA,MACvB;AACA,iBAAW,MAAM,UAAU,qBAAqB,MAAM,CAAC;AACvD;AACA,kBAAY,iBAAiB,QAAQ;AACrC,2BAAqB,IAAI,SAAS;AAClC,kBAAY,YAAY;AACxB,cAAQ,aAAa,kBAAkB;AAAA,IAEzC;AAAA,EACF;AAGA,WAAS,uBAAuB;AAE9B,0BAAsB;AAGtB,gBAAY,KAAK;AACjB,gBAAY,KAAK,IAAI,aAAcA,iBAAgB,KAAK,CAAC,CAAC;AAC1D,wBAAoB,mBAAmB;AACvC,yBAAqB,MAAM,EAAE,UAAU,SAAS;AAEhD,qBAAiB;AACjB,gBAAY;AACZ,eAAW,WAAW,MAAM,UAAU;AACtC,YAAQ;AACR,uBAAmB;AAAA,EACrB;AAEA,WAAS,WAAWG,OAAMC,aAAY;AACpC,QAAI,YAAYD,MAAK,OAAO,SAAUE,MAAK,GAAG;AAC1C,aAAO,KAAK,IAAIA,MAAK,OAAO,CAAC,CAAC;AAAA,IAChC,GAAG,SAAS,GACZ,mBAAmB,YAAY;AACjC,QAAI,SAAS;AAGb,cAAUF,MAAK,IAAI,SAAU,GAAG,GAAG,KAAK;AACtC,aAAO;AAAA,QACL,OAAO;AAAA,QACP,QAAQ,KAAK,IAAI,OAAO,CAAC,GAAG,gBAAgB;AAAA,QAC5C,iBAAiB,gBAAgB,GAAG,GAAG,KAAKC,WAAU;AAAA,QACtD,eAAe,cAAc,GAAG,GAAG,KAAKA,WAAU;AAAA,QAClD,cAAc;AAAA,MAChB;AAAA,IACF,CAAC;AAKD,gBAAY,gBAAgB,SAASA,WAAU;AAC/C,uBAAmB,SAAS;AAC5B,WAAOJ,iBAAgB,SAAS;AAAA,EAClC;AAEA,WAAS,gBAAgB,YAAYI,aAAY;AAC/C,QAAI,cAAc,WAAW,OAAO,SAAU,KAAK,IAAI;AACrD,aAAQ,OAAO,GAAG;AAAA,IACpB,GAAG,CAAC;AACJ,QAAIE;AAEJ,WAAO,WAAW,IAAI,SAAU,IAAI,GAAG,KAAK;AAC1C,MAAAA,mBAAkB,GAAG;AAErB,UAAI,CAAC,iBAAkBN,iBAAgB,KAAK,GAAGM,gBAAe,GAAG;AAC/D,QAAAA,mBAAkB,yBAAyB,IAAI,GAAG,KAAKF,WAAU;AAAA,MACnE;AAEA,aAAO;AAAA,QACL,OAAO,GAAG;AAAA,QACV,cAAe,YAAY,GAAG,SAAU;AAAA,QACxC,MAAM;AAAA,QACN,GAAGE,iBAAgB,CAAC;AAAA,QACpB,GAAGA,iBAAgB,CAAC;AAAA,QACpB,QAAQ,GAAG;AAAA;AAAA,MACb;AAAA,IACF,CAAC;AAAA,EACH;AAEA,WAAS,MAAMC,WAAU,2BAA2B;AAClD,QAAI;AAEJ,mBAAeA,WAAU,yBAAyB;AAClD,uBAAmBA,UAAS,IAAI,SAAU,GAAG;AAC3C,aAAO,EAAE,KAAK;AAAA,IAChB,CAAC;AACD,IAAAA,YAAWP,iBAAgB,gBAAgB;AAC3C,QAAIO,UAAS,SAAS,WAAW;AAC/B,YAAM,IAAI,kBAAkB,6DAA6D;AAAA,IAC3F;AAEA,iBAAaA,WAAU,yBAAyB;AAChD,uBAAmBA,UAAS,IAAI,SAAU,GAAG;AAC3C,aAAO,EAAE,KAAK;AAAA,IAChB,CAAC;AACD,IAAAA,YAAWP,iBAAgB,gBAAgB;AAC3C,QAAIO,UAAS,SAAS,WAAW;AAC/B,YAAM,IAAI,kBAAkB,6DAA6D;AAAA,IAC3F;AAEA,WAAOA;AAAA,EACT;AAEA,WAAS,eAAeA,WAAU,2BAA2B;AAC3D,QAAI,eAAe,CAAC,GAClB,sBAAsB;AACxB,QAAIC,uBAAsB,GAAG,SAAS,UAAU,UAAU,IAAI;AAE9D,IAAAA,wBAAuB,sBAAsB;AAC7C,QAAI,IAAIA;AACR,aAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,gBAAUD,UAAS,CAAC;AACpB,iBAAW,QAAQ,KAAK;AACxB,iBAAW,iBAAkB,OAAO;AAEpC,WAAK,SAAS,CAAC,IAAI,SAAS;AAC5B,WAAK,SAAS,CAAC,IAAI,SAAS;AAG5B,YAAM;AACN,YAAM;AAGN,eAAS,KAAK;AACd,eAAS,KAAK;AAEd,mBAAa,KAAK,QAAQ;AAAA,IAC5B;AAEA,uBAAmB,YAAY;AAAA,EACjC;AAEA,WAAS,aAAaA,WAAU,2BAA2B;AACzD,QAAI,eAAe,CAAC,GAClB,sBAAsB;AACxB,QAAIC,uBAAsB,SAAS,UAAU,aAAa,YAAY;AAEtE,IAAAA,wBAAuB,sBAAsB;AAC7C,aAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,gBAAUD,UAAS,CAAC;AACpB,iBAAW,QAAQ,KAAK;AACxB,oBAAc,aAAc,OAAO;AACnC,mBAAa,SAAS,eAAe;AAGrC,mBAAa,KAAK,IAAI,YAAY,IAAI,sBAAsBC,qBAAoB;AAChF,mBAAa,KAAK,IAAI,YAAY,IAAI,sBAAsBA,qBAAoB;AAGhF,sBAAgB,SAAS,SAAS;AAClC,sBAAgB,KAAK,IAAI,eAAeT,QAAO;AAE/C,eAAS,SAAS;AAElB,mBAAa,KAAK,QAAQ;AAAA,IAC5B;AAEA,uBAAmB,YAAY;AAAA,EACjC;AAGA,WAAS,oBAAoB,WAAW;AACtC,QAAI,WAAW;AACf,QAAI,YAAY,KAAK,KAAK,WAAW,UAAU,MAAM;AACrD,OAAG;AACD,UAAI,WAAW,yCAAyC;AACtD,cAAM,IAAI,kBAAkB,yCAAyC;AAAA,MACvE;AACA,mBAAa;AACb,eAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,cAAM,UAAU,CAAC;AACjB,iBAAS,IAAI,IAAI,GAAG,IAAI,WAAW,KAAK;AACtC,gBAAM,UAAU,CAAC;AACjB,cAAI,IAAI,SAAS,IAAI,QAAQ;AAC3B,wBAAY;AACZ,uBAAW;AAAA,UACb,OAAO;AACL,wBAAY;AACZ,uBAAW;AAAA,UACb;AACA,iBAAO,gBAAgB,KAAK,GAAG;AAC/B,cAAI,OAAO,UAAU,SAAS,SAAS,QAAQ;AAG7C,4BAAgB,OAAO,SAAS,SAAS;AACzC,4BAAgB,KAAK,IAAI,eAAeA,QAAO;AAC/C,sBAAU,SAAS;AACnB,yBAAa;AACb;AACA;AAAA,UACF;AAAA,QACF;AACA,YAAI,YAAY;AACd;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS;AAAA,EAOX;AAGA,WAAS,oBAAoB,WAAW;AACtC,QAAI,WAAW;AACf,QAAI,YAAY,KAAK,KAAK,WAAW,UAAU,MAAM;AACrD,OAAG;AACD,UAAI,WAAW,yCAAyC;AACtD,cAAM,IAAI,kBAAkB,yCAAyC;AAAA,MACvE;AACA,mBAAa;AACb,eAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,cAAM,UAAU,CAAC;AACjB,iBAAS,IAAI,IAAI,GAAG,IAAI,WAAW,KAAK;AACtC,gBAAM,UAAU,CAAC;AACjB,cAAI,IAAI,SAAS,IAAI,QAAQ;AAC3B,wBAAY;AACZ,uBAAW;AAAA,UACb,OAAO;AACL,wBAAY;AACZ,uBAAW;AAAA,UACb;AACA,iBAAO,gBAAgB,KAAK,GAAG;AAC/B,cAAI,OAAO,UAAU,SAAS,SAAS,QAAQ;AAC7C,yBAAa,UAAU,SAAS,SAAS,SAAS;AAClD,qBAAS,UAAU,aAAaA;AAChC,yBAAa;AACb;AACA;AAAA,UACF;AAAA,QACF;AACA,YAAI,YAAY;AACd;AAAA,QACF;AAAA,MACF;AAAA,IACF,SAAS;AAAA,EAOX;AAEA,WAAS,iBAAiBQ,WAAU;AAElC,QAAI,eAAe;AACnB,QAAI,SAAS,UAAU;AACvB,aAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAClC,gBAAUA,UAAS,CAAC;AACpB,iBAAW,QAAQ,KAAK;AACxB,oBAAc,aAAc,OAAO;AACnC,sBAAgB,KAAK,IAAI,SAAS,eAAe,WAAW;AAAA,IAC9D;AACA,WAAO;AAAA,EACT;AAEA,WAAS,wBAAwB;AAC/B,YAAQ,6BAA6B;AAAA,MACnC,KAAK;AACH,6BAAqB;AACrB;AAAA,MACF,KAAK;AACH,6BAAqB;AACrB;AAAA,MACF;AACE,gBAAQ,MAAM,wDAAwD;AACtE,6BAAqB;AAAA,IACzB;AAAA,EACF;AAEA,SAAO;AACT;;;ACvfO,SAAS,iBAAiB;AAE/B,MAAI,4BAA4B;AAChC,MAAI,8BAA8B;AAClC,MAAI,2BAA2B;AAC/B,MAAI,eAAe,KAAK;AAIxB,MAAI,OAAO;AAAA,IACT,CAAC,GAAG,CAAC;AAAA,IACL,CAAC,GAAG,CAAC;AAAA,IACL,CAAC,GAAG,CAAC;AAAA,IACL,CAAC,GAAG,CAAC;AAAA,EACP;AACA,MAAI,SAAS;AAAA,IACX,CAAC,GAAG,CAAC;AAAA,IACL,CAAC,GAAG,CAAC;AAAA,EACP;AACA,MAAI,OAAO,CAAC,GAAG,CAAC;AAChB,MAAI,mBAAmB;AACvB,MAAI,oBAAoB;AACxB,MAAI,iBAAiB;AACrB,MAAI,OAAO;AAGX,MAAI,yBAAyB;AAAA,IAC3B;AAAA,MACE,QAAQ;AAAA,IACV;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,IACV;AAAA,EACF;AACA,MAAI,0CAA0C,qBAAuB,sBAAsB,EAAE,KAAK;AAOlG,WAAS,gBAAgB,UAAU;AACjC,YAAQ,MAAM,QAAQ;AAAA,EACxB;AAEA,kBAAgB,mBAAmB,SAAU,GAAG;AAC9C,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAEA,uBAAmB;AACnB,WAAO;AAAA,EACT;AAEA,kBAAgB,oBAAoB,SAAU,GAAG;AAC/C,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAEA,wBAAoB;AACpB,WAAO;AAAA,EACT;AAEA,kBAAgB,iBAAiB,SAAU,GAAG;AAC5C,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAEA,qBAAiB;AACjB,WAAO;AAAA,EACT;AAEA,kBAAgB,OAAO,SAAU,GAAG;AAClC,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAGA,4CAAwC,KAAK,CAAC;AAE9C,WAAO,wCAAwC,KAAK;AACpD,aAAS,wCAAwC,OAAO;AACxD,WAAO,wCAAwC,KAAK;AACpD,WAAO;AAAA,EACT;AAEA,kBAAgB,SAAS,SAAU,GAAG;AACpC,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAGA,4CAAwC,OAAO,CAAC;AAEhD,WAAO,wCAAwC,KAAK;AACpD,aAAS,wCAAwC,OAAO;AACxD,WAAO,wCAAwC,KAAK;AACpD,WAAO;AAAA,EACT;AAEA,kBAAgB,OAAO,SAAU,GAAG;AAClC,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAGA,4CAAwC,KAAK,CAAC;AAE9C,WAAO,wCAAwC,KAAK;AACpD,aAAS,wCAAwC,OAAO;AACxD,WAAO,wCAAwC,KAAK;AACpD,WAAO;AAAA,EACT;AAEA,kBAAgB,OAAO,SAAU,GAAG;AAClC,QAAI,CAAC,UAAU,QAAQ;AACrB,aAAO;AAAA,IACT;AAEA,WAAO;AACP,WAAO;AAAA,EACT;AAMA,WAAS,QAAQ,iBAAiB,MAAM;AACtC,QAAI;AAGJ,SAAK,UAAU;AAEf,QAAI,KAAK,UAAU,GAAG;AAEpB,mBAAa,qBAAuB,KAAK,QAAQ,EAC9C,KAAK,eAAe,EACpB,OAAO,SAAU,GAAG;AACnB,eAAO,EAAE;AAAA,MACX,CAAC,EACA,iBAAiB,gBAAgB,EACjC,kBAAkB,iBAAiB,EACnC,eAAe,cAAc,EAC7B,KAAK,IAAI,EACT,KAAK;AAER,UAAI,QAAQ,WAAW,MAAM;AAG7B,aAAO,CAAC,MAAM,OAAO;AACnB,mBAAW,KAAK;AAChB,gBAAQ,WAAW,MAAM;AAAA,MAC3B;AAIA,YAAM,SAAS,QAAQ,SAAU,IAAI;AACnC,gBAAQ,IAAI,GAAG,KAAK,eAAe,KAAK,YAAY;AAAA,MACtD,CAAC;AAAA,IAEH;AAAA,EACF;AAEA,SAAO;AACT;;;ACrKA,wBAAuB;AAiHjB,IAAO,iBAAP,cAA8B,UAAS;EAA7C,cAAA;;AAMC,WAAA,eAAA,MAAA,QAAA;;;;aAAyB;;AAUzB,WAAA,eAAA,MAAA,YAAA;;;;aAAkD,IAAI,aACrD,SAAS,IAAI,CAAA,CAAE,GACf,MAAM,QAAQ,KAAK,KAAK,OAAO;QAC9B,WAAkB,UAAU,KAAK,SAAS,SAAS,IAAI,aAAa,CAAA,CAAE,GAAG,CAAC,KAAK,MAAM,OAAO,CAAC;SAC3F,CAAC,KAAK,SAAS,QAAQ,CAAC,CAAC;;AAG7B,WAAA,eAAA,MAAA,WAAA;;;;aAAiB,eAAc;;EAiJhC;EA/IW,YAAS;AAElB,SAAK,eAAe,OAAO;MAC1B,GAAG;MACH,GAAG;MACH,SAAS;MACT,SAAS;KACT;AAED,UAAM,UAAS;EAChB;EAEO,mBAAgB;AACtB,UAAM,iBAAgB;AAEtB,UAAM,QAAQ,KAAK,WAAU,IAAK;AAClC,UAAM,SAAS,KAAK,YAAW,IAAK;AAEpC,QAAI,OAAO,KAAK;AAChB,UAAM,mBAAmB,KAAK,IAAI,kBAAkB;AAEpD,QAAI,kBAAkB;AACrB,aAAO,iBAAiB,IAAI,iBAAiB;;AAG9C,SAAK,QAAQ,iBAAkB,KAAK,IAAI,oBAAoB,IAAK,CAAE;AACnE,SAAK,QAAQ,kBAAmB,KAAK,IAAI,qBAAqB,GAAG,CAAE;AACnE,SAAK,QAAQ,eAAgB,KAAK,IAAI,kBAAkB,IAAK,CAAE;AAE/D,QAAI,KAAK,QAAQ,MAAM,GAAG;AACzB,UAAI,KAAK,IAAI,MAAM,KAAK,WAAW;AAClC,aAAK,QAAQ,KAAK,KAAK,iBAAiB,CAAC,CAAC;AAC1C,aAAK,eAAc;;;AAIrB,QAAI,KAAK,YAAY;AACpB,UAAI,KAAK,IAAI,MAAM,KAAK,aAAa;AACpC,aAAK,QAAQ,SAAK,kBAAAE,SAAW,GAAG,CAAC;AACjC,aAAK,QAAQ,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,MAAM,GAAG,CAAC,OAAO,MAAM,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI;AAChG,aAAK,eAAc;;;AAIrB,SAAK,KAAK,gBAAgB,KAAK,QAAQ,kBAAkB,MAAM,MAAM;AACpE,WAAK,QAAQ,SAAK,kBAAAA,SAAW,GAAG,CAAC;AACjC,WAAK,QAAQ,IAAI;AACjB,WAAK,eAAc;;EAErB;EAEU,YAAY,UAA6C;AAClE,UAAM,SAAe,SAAS,IAAI,iBAAiB,EAAU;AAC7D,UAAM,UAAU,SAAS,IAAI,SAAS;AAEtC,QAAI,UAAU,SAAS;AAEtB,UAAI,cAAmB,CAAA;AAEvB,UAAI,IAAI;AACR,UAAI,KAAK,IAAI,MAAM,KAAK,WAAW;AAClC,YAAI,KAAK,IAAI,KAAK,WAAU,GAAI,KAAK,YAAW,CAAE,IAAI;;AAGvD,UAAI,OAAO;AACX,UAAI,OAAO;AAEX,eAAS,IAAI,GAAG,MAAM,OAAO,QAAQ,IAAI,KAAK,KAAK;AAClD,cAAM,QAAuB,OAAO,CAAC;AACrC,YAAIC,KAAI,MAAM,CAAC,IAAI;AACnB,YAAIC,KAAI,MAAM,CAAC,IAAI;AAEnB,oBAAY,KAAK,CAACD,IAAGC,EAAC,CAAC;AAEvB,eAAO,KAAK,IAAI,MAAMD,EAAC;AACvB,eAAO,KAAK,IAAI,MAAMA,EAAC;;AAGxB,cAAQ,IAAI,eAAe,WAAW;AAEtC,YAAM,OAAO,SAAS,IAAI,MAAM;AAChC,cAAQ,YAAY,QAAQ,IAAI;AAEhC,YAAM,QAAQ,SAAS,IAAI,OAAO;AAClC,UAAI,OAAO;AACV,cAAM,OAAO,OAAO;AAEpB,YAAI,MAAM;AACT,gBAAM,OAAO;YACZ,GAAG,KAAK,IAAI;YACZ,GAAG,KAAK,IAAI;YACZ,UAAU,KAAK,IAAI,OAAO,IAAI;WAC9B;;;;EAIL;EAGU,cAAc,UAA6C;AACpE,UAAM,SAAS,SAAS,IAAI,QAAQ;AACpC,QAAI,QAAQ;AACX,YAAM,WAAW,OAAO,IAAI,UAAU;AACtC,UAAI,UAAU;AACb,QAAO,KAAK,UAAU,CAAC,UAAS;AAC/B,cAAI,SAAS,UAAU;AACtB,iBAAK,gBAAgB,KAAK;AAC1B,kBAAM,IAAI,MAAM,EAAE,KAAI;;QAExB,CAAC;;AAEF,WAAK,cAAc,MAAM;;EAE3B;;;;EAKO,SAAS,UAA6C;AAC5D,UAAM,OAAO,MAAM,SAAS,QAAQ;AACpC,SAAK,UAAU,UAAU,IAAI;AAC7B,WAAO;EACR;EAEU,UAAU,UAA+C,MAAmB;AACrF,UAAM,UAAU,KAAK,SAAS,UAAU,KAAK,SAAS,KAAI,GAAI,CAAC;AAC/D,SAAK,WAAW,iBAAiB,OAAO;AACxC,aAAS,OAAO,WAAW,OAAO;AAClC,YAAQ,aAAa,QAAQ;EAC9B;EAEU,iBAAiB,QAAc;AACxC,UAAM,SAAS,KAAK,IAAI,eAAe,GAAG;AAC1C,UAAM,SAAS,KAAK,KAAK,IAAI;AAC7B,UAAM,UAAgC,CAAA;AAEtC,aAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAChC,UAAI,QAAQ,IAAI;AAChB,cAAQ,KAAK,CAAC,SAAS,KAAK,IAAI,KAAK,GAAG,SAAS,KAAK,IAAI,KAAK,CAAC,CAAC;;AAGlE,WAAO;EACR;;AA/JA,OAAA,eAAA,gBAAA,aAAA;;;;SAAkC;;AAClC,OAAA,eAAA,gBAAA,cAAA;;;;SAA0C,UAAU,WAAW,OAAO,CAAC,eAAe,SAAS,CAAC;;",
  "names": ["module", "define", "module", "define", "module", "define", "module", "define", "me", "seed", "module", "define", "me", "seed", "module", "define", "c", "a", "seedrandom", "x", "prng", "seed", "count", "t", "i", "j", "s", "out", "a", "require_seedrandom", "sum", "index", "index", "index", "index", "sum", "a", "c", "x", "x", "array", "m", "a", "x2", "y2", "c", "a2", "a3", "c2", "c3", "a", "c", "x", "a2", "y", "Node", "x", "round", "dy", "x", "a", "x", "x", "round", "x", "sum", "i", "x0", "y0", "x1", "y1", "custom", "m", "x", "sort", "a", "children", "count", "index", "d", "x", "y", "x", "y", "find_default", "x", "y", "x2", "y2", "x3", "y3", "x", "y", "x", "y", "find_default", "constant_default", "x", "constant_default", "x", "y", "constant_default", "count", "x", "y", "m", "i", "c", "now", "a", "c", "m", "lcg_default", "x", "y", "lcg_default", "constant_default", "x", "y", "node", "strength", "c", "x2", "x_default", "x", "constant_default", "y_default", "y", "constant_default", "index", "x_default", "y_default", "x", "y", "min", "max", "x", "y", "slice", "x", "y", "index", "a", "x", "y", "a", "c", "x", "y", "frame", "timeout", "interval", "pokeDelay", "taskHead", "taskTail", "clockLast", "clockNow", "clockSkew", "clock", "setFrame", "now", "clearNow", "Timer", "timer", "sleep", "timerFlush", "wake", "nap", "poke", "noop", "dispatch", "Dispatch", "parseTypenames", "get", "set", "c", "dispatch_default", "a", "x", "a", "x", "extent_default", "min", "max", "index", "shuffle", "array", "m", "cross_default", "a", "c", "a", "indexes", "cross_default", "hull_default", "length_default", "x", "y", "x", "y", "x", "y", "a", "c", "index", "m", "a", "c", "intersection", "length_default", "x", "y", "direction", "extent_default", "c", "hull_default", "boundingSites", "voronoiMapSimulation", "x", "y", "voronoiMapSimulation", "epsilon", "weightedVoronoi", "timer", "dispatch_default", "data", "simulation", "max", "initialPosition", "polygons", "flickeringMitigation", "seedrandom", "x", "y"]
}
