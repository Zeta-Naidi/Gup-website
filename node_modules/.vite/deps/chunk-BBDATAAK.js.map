{
  "version": 3,
  "sources": ["../../src/.internal/charts/xy/XYChartDefaultTheme.ts", "../../src/.internal/charts/xy/XYChart.ts", "../../src/.internal/charts/xy/axes/Grid.ts", "../../src/.internal/charts/xy/XYCursor.ts", "../../src/.internal/charts/xy/series/XYSeries.ts", "../../src/.internal/charts/xy/series/BaseColumnSeries.ts", "../../src/.internal/charts/xy/axes/AxisLabel.ts", "../../src/.internal/charts/xy/axes/AxisLabelRadial.ts", "../../src/.internal/charts/xy/axes/AxisTick.ts", "../../src/.internal/charts/xy/axes/AxisRenderer.ts", "../../src/.internal/charts/xy/series/LineSeries.ts"],
  "sourcesContent": ["import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"minor\"]).setAll({\r\n\t\t\tfontSize: \"0.6em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"minor\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.07,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth: 1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable: true,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingBottom: 0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t}\r\n}\r\n", "import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tlet local = this.plotContainer.toLocal(event.point);\n\t\t\t\tif (local.x == downPoint.x && local.y == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n", "import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n", "import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, `\"y\"`, `\"x!\"`, `\"y!\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#snapping-to-series} for more info\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove(ev.keyCode);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(keyCode: number) {\n\t\tlet dir: any = \"\";\n\t\tlet position = 0;\n\t\tlet increment = 0.1;\n\t\tconst chart = this.chart;\n\n\t\tif (this._root.focused(this.lineX)) {\n\t\t\tif (chart && chart.xAxes.length) {\n\t\t\t\tincrement = chart.xAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionX\", 0);\n\t\t\tdir = \"positionX\";\n\t\t\tif (keyCode == 37) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 39) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\t\telse if (this._root.focused(this.lineY)) {\n\t\t\tif (chart && chart.yAxes.length) {\n\t\t\t\tincrement = chart.yAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionY\", 0);\n\t\t\tdir = \"positionY\";\n\t\t\tif (keyCode == 38) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 40) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) {\n\t\t\tposition = 0;\n\t\t}\n\t\telse if (position > 1) {\n\t\t\tposition = 1;\n\t\t}\n\n\t\tif (dir != \"\") {\n\t\t\tthis.set(dir, position);\n\t\t}\n\t}\n\n\tprotected _handleLineFocus(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\"),\n\t\t\tpositionY: this.getPrivate(\"positionY\"),\n\t\t\talwaysShow: true\n\t\t});\n\t}\n\n\tprotected _handleLineBlur(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: undefined,\n\t\t\tpositionY: undefined,\n\t\t\talwaysShow: false\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n", "import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n\n\tdoNotUpdateLegend?:boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tpublic _bullets: { [index: string]: Sprite } = {};\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tthis._bullets = {};\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._bullets = {};\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._sizeDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tlet positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tlet w = right - left;\n\t\t\tlet h = bottom - top;\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", !bullet.getPrivate(\"hidden\"));\n\n\t\t\t\tlet field = bullet.get(\"field\");\n\n\t\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\tif (field != undefined) {\n\t\t\t\t\tlet realField: string | undefined;\n\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._yField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._yOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._yHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._yLowField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, realField as any, 0, this.get(\"vcy\", 1))\n\n\t\t\t\t\t\t\tpoint = yAxis.get(\"renderer\").positionToPoint(positionY);\n\n\t\t\t\t\t\t\ty = point.y;\n\t\t\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (field == \"value\") {\n\t\t\t\t\t\t\trealField = this._xField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"open\") {\n\t\t\t\t\t\t\trealField = this._xOpenField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"high\") {\n\t\t\t\t\t\t\trealField = this._xHighField;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (field == \"low\") {\n\t\t\t\t\t\t\trealField = this._xLowField;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (realField) {\n\t\t\t\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, realField as any, 0, this.get(\"vcx\", 1));\n\n\t\t\t\t\t\t\tpoint = xAxis.get(\"renderer\").positionToPoint(positionX);\n\n\t\t\t\t\t\t\tx = point.x;\n\t\t\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = left + w * locationX;\n\t\t\t\t\ty = bottom - h * locationY;\n\t\t\t\t}\n\n\t\t\t\tconst stacked = bullet.get(\"stacked\");\n\t\t\t\tif (stacked) {\n\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\tif (baseAxis == xAxis) {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet yo = y;\n\t\t\t\t\t\t\ty = previousBounds.top;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (yo < chart.plotContainer.height() / 2) {\n\t\t\t\t\t\t\t\t\t\ty = previousBounds.bottom - bounds.top;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ty += bounds.bottom;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet previousBullet = this._bullets[positionX + \"_\" + positionY];\n\t\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\t\tlet previousBounds = previousBullet.bounds();\n\t\t\t\t\t\t\tlet bounds = sprite.localBounds();\n\t\t\t\t\t\t\tlet xo = x;\n\t\t\t\t\t\t\tx = previousBounds.right;\n\n\t\t\t\t\t\t\tif (stacked == \"down\") {\n\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (stacked == \"auto\") {\n\t\t\t\t\t\t\t\tif (chart) {\n\t\t\t\t\t\t\t\t\tif (xo < chart.plotContainer.width() / 2) {\n\t\t\t\t\t\t\t\t\t\tx = previousBounds.left - bounds.right;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tx -= bounds.left;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._bullets[positionX + \"_\" + positionY] = sprite;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tsprite.setAll({ x, y });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tlet bullets = dataItem.bullets;\n\t\t\tif (bullets) {\n\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tif(!this.getPrivate(\"doNotUpdateLegend\")){\n\t\t\tthis.updateLegendMarker(dataItem);\n\t\t\tthis.updateLegendValue(dataItem);\n\t\t}\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem?: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n}\n", "import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n", "import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n", "import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n", "import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n", "import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Re-enable display of skipped grid lines due to lack of space and as per\n\t * the `minGridDistance` setting. Not recommended for CategoryAxis with a lot of data items. \n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Minor_grid} for more info\n\t * @since 5.6.0\n\t */\n\tminorGridEnabled?: boolean;\n\n\t/**\n\t * Enable labels on minor grid. If you enable labels, grid will be enabled automatically.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Enabling_minor_grid_labels} for more info\n\t * @since 5.6.0\n\t */\n\tminorLabelsEnabled?: boolean;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n", "import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--;\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\t\t\t\t\t\t\tsprite.set(\"tooltipHTML\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\n\t\t\t\t\t\t\tmarker.events.on(\"boundschanged\", ()=>{\n\t\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": ["copy", "min", "round", "eventType", "each", "color", "point", "chart", "field", "stacked", "each", "xAxis", "yAxis", "min", "max", "i", "dataItem", "graphics", "strokeTemplate", "fillTemplate", "fill", "stroke", "itemLocationX", "itemLocationY"]
}
